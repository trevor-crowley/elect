// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "video_mandelbrot_generator.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const int video_mandelbrot_generator::C_S_AXI_DATA_WIDTH = "100000";
const int video_mandelbrot_generator::C_S_AXI_WSTRB_WIDTH = "100";
const int video_mandelbrot_generator::C_S_AXI_ADDR_WIDTH = "100000";
const sc_logic video_mandelbrot_generator::ap_const_logic_1 = sc_dt::Log_1;
const sc_lv<24> video_mandelbrot_generator::ap_const_lv24_0 = "000000000000000000000000";
const sc_lv<3> video_mandelbrot_generator::ap_const_lv3_0 = "000";
const sc_lv<1> video_mandelbrot_generator::ap_const_lv1_0 = "0";
const sc_logic video_mandelbrot_generator::ap_const_logic_0 = sc_dt::Log_0;

video_mandelbrot_generator::video_mandelbrot_generator(sc_module_name name) : sc_module(name), mVcdFile(0) {
    video_mandelbrot_generator_cmd_s_axi_U = new video_mandelbrot_generator_cmd_s_axi<C_S_AXI_CMD_ADDR_WIDTH,C_S_AXI_CMD_DATA_WIDTH>("video_mandelbrot_generator_cmd_s_axi_U");
    video_mandelbrot_generator_cmd_s_axi_U->AWVALID(s_axi_cmd_AWVALID);
    video_mandelbrot_generator_cmd_s_axi_U->AWREADY(s_axi_cmd_AWREADY);
    video_mandelbrot_generator_cmd_s_axi_U->AWADDR(s_axi_cmd_AWADDR);
    video_mandelbrot_generator_cmd_s_axi_U->WVALID(s_axi_cmd_WVALID);
    video_mandelbrot_generator_cmd_s_axi_U->WREADY(s_axi_cmd_WREADY);
    video_mandelbrot_generator_cmd_s_axi_U->WDATA(s_axi_cmd_WDATA);
    video_mandelbrot_generator_cmd_s_axi_U->WSTRB(s_axi_cmd_WSTRB);
    video_mandelbrot_generator_cmd_s_axi_U->ARVALID(s_axi_cmd_ARVALID);
    video_mandelbrot_generator_cmd_s_axi_U->ARREADY(s_axi_cmd_ARREADY);
    video_mandelbrot_generator_cmd_s_axi_U->ARADDR(s_axi_cmd_ARADDR);
    video_mandelbrot_generator_cmd_s_axi_U->RVALID(s_axi_cmd_RVALID);
    video_mandelbrot_generator_cmd_s_axi_U->RREADY(s_axi_cmd_RREADY);
    video_mandelbrot_generator_cmd_s_axi_U->RDATA(s_axi_cmd_RDATA);
    video_mandelbrot_generator_cmd_s_axi_U->RRESP(s_axi_cmd_RRESP);
    video_mandelbrot_generator_cmd_s_axi_U->BVALID(s_axi_cmd_BVALID);
    video_mandelbrot_generator_cmd_s_axi_U->BREADY(s_axi_cmd_BREADY);
    video_mandelbrot_generator_cmd_s_axi_U->BRESP(s_axi_cmd_BRESP);
    video_mandelbrot_generator_cmd_s_axi_U->ACLK(ap_clk);
    video_mandelbrot_generator_cmd_s_axi_U->ARESET(ap_rst_n_inv);
    video_mandelbrot_generator_cmd_s_axi_U->ACLK_EN(ap_var_for_const0);
    video_mandelbrot_generator_cmd_s_axi_U->ap_start(ap_start);
    video_mandelbrot_generator_cmd_s_axi_U->interrupt(interrupt);
    video_mandelbrot_generator_cmd_s_axi_U->ap_ready(ap_ready);
    video_mandelbrot_generator_cmd_s_axi_U->ap_done(ap_done);
    video_mandelbrot_generator_cmd_s_axi_U->ap_idle(ap_idle);
    video_mandelbrot_generator_cmd_s_axi_U->re_V(re_V);
    video_mandelbrot_generator_cmd_s_axi_U->im_V(im_V);
    video_mandelbrot_generator_cmd_s_axi_U->zoom_factor_V(zoom_factor_V);
    video_mandelbrot_gen_1_U0 = new video_mandelbrot_gen_1("video_mandelbrot_gen_1_U0");
    video_mandelbrot_gen_1_U0->ap_clk(ap_clk);
    video_mandelbrot_gen_1_U0->ap_rst(ap_rst_n_inv);
    video_mandelbrot_gen_1_U0->ap_start(video_mandelbrot_gen_1_U0_ap_start);
    video_mandelbrot_gen_1_U0->start_full_n(start_for_Loop_out_proc28_U0_full_n);
    video_mandelbrot_gen_1_U0->ap_done(video_mandelbrot_gen_1_U0_ap_done);
    video_mandelbrot_gen_1_U0->ap_continue(video_mandelbrot_gen_1_U0_ap_continue);
    video_mandelbrot_gen_1_U0->ap_idle(video_mandelbrot_gen_1_U0_ap_idle);
    video_mandelbrot_gen_1_U0->ap_ready(video_mandelbrot_gen_1_U0_ap_ready);
    video_mandelbrot_gen_1_U0->start_out(video_mandelbrot_gen_1_U0_start_out);
    video_mandelbrot_gen_1_U0->start_write(video_mandelbrot_gen_1_U0_start_write);
    video_mandelbrot_gen_1_U0->re_V(re_V);
    video_mandelbrot_gen_1_U0->im_V(im_V);
    video_mandelbrot_gen_1_U0->zoom_factor_V(zoom_factor_V);
    video_mandelbrot_gen_1_U0->re_V_out_din(video_mandelbrot_gen_1_U0_re_V_out_din);
    video_mandelbrot_gen_1_U0->re_V_out_full_n(re_V_c_full_n);
    video_mandelbrot_gen_1_U0->re_V_out_write(video_mandelbrot_gen_1_U0_re_V_out_write);
    video_mandelbrot_gen_1_U0->im_V_out_din(video_mandelbrot_gen_1_U0_im_V_out_din);
    video_mandelbrot_gen_1_U0->im_V_out_full_n(im_V_c_full_n);
    video_mandelbrot_gen_1_U0->im_V_out_write(video_mandelbrot_gen_1_U0_im_V_out_write);
    video_mandelbrot_gen_1_U0->zoom_factor_V_out_din(video_mandelbrot_gen_1_U0_zoom_factor_V_out_din);
    video_mandelbrot_gen_1_U0->zoom_factor_V_out_full_n(zoom_factor_V_c_full_n);
    video_mandelbrot_gen_1_U0->zoom_factor_V_out_write(video_mandelbrot_gen_1_U0_zoom_factor_V_out_write);
    Loop_out_proc28_U0 = new Loop_out_proc28("Loop_out_proc28_U0");
    Loop_out_proc28_U0->ap_clk(ap_clk);
    Loop_out_proc28_U0->ap_rst(ap_rst_n_inv);
    Loop_out_proc28_U0->ap_start(Loop_out_proc28_U0_ap_start);
    Loop_out_proc28_U0->start_full_n(start_for_Mat2AXIvideo_U0_full_n);
    Loop_out_proc28_U0->ap_done(Loop_out_proc28_U0_ap_done);
    Loop_out_proc28_U0->ap_continue(Loop_out_proc28_U0_ap_continue);
    Loop_out_proc28_U0->ap_idle(Loop_out_proc28_U0_ap_idle);
    Loop_out_proc28_U0->ap_ready(Loop_out_proc28_U0_ap_ready);
    Loop_out_proc28_U0->start_out(Loop_out_proc28_U0_start_out);
    Loop_out_proc28_U0->start_write(Loop_out_proc28_U0_start_write);
    Loop_out_proc28_U0->im_V_dout(im_V_c_dout);
    Loop_out_proc28_U0->im_V_empty_n(im_V_c_empty_n);
    Loop_out_proc28_U0->im_V_read(Loop_out_proc28_U0_im_V_read);
    Loop_out_proc28_U0->re_V_dout(re_V_c_dout);
    Loop_out_proc28_U0->re_V_empty_n(re_V_c_empty_n);
    Loop_out_proc28_U0->re_V_read(Loop_out_proc28_U0_re_V_read);
    Loop_out_proc28_U0->zoom_factor_V_dout(zoom_factor_V_c_dout);
    Loop_out_proc28_U0->zoom_factor_V_empty_n(zoom_factor_V_c_empty_n);
    Loop_out_proc28_U0->zoom_factor_V_read(Loop_out_proc28_U0_zoom_factor_V_read);
    Loop_out_proc28_U0->img_0_data_stream_V_s_din(Loop_out_proc28_U0_img_0_data_stream_V_s_din);
    Loop_out_proc28_U0->img_0_data_stream_V_s_full_n(img_0_data_stream_V_s_full_n);
    Loop_out_proc28_U0->img_0_data_stream_V_s_write(Loop_out_proc28_U0_img_0_data_stream_V_s_write);
    Loop_out_proc28_U0->img_0_data_stream_V_1_din(Loop_out_proc28_U0_img_0_data_stream_V_1_din);
    Loop_out_proc28_U0->img_0_data_stream_V_1_full_n(img_0_data_stream_V_1_full_n);
    Loop_out_proc28_U0->img_0_data_stream_V_1_write(Loop_out_proc28_U0_img_0_data_stream_V_1_write);
    Loop_out_proc28_U0->img_0_data_stream_V_2_din(Loop_out_proc28_U0_img_0_data_stream_V_2_din);
    Loop_out_proc28_U0->img_0_data_stream_V_2_full_n(img_0_data_stream_V_2_full_n);
    Loop_out_proc28_U0->img_0_data_stream_V_2_write(Loop_out_proc28_U0_img_0_data_stream_V_2_write);
    Mat2AXIvideo_U0 = new Mat2AXIvideo("Mat2AXIvideo_U0");
    Mat2AXIvideo_U0->ap_clk(ap_clk);
    Mat2AXIvideo_U0->ap_rst(ap_rst_n_inv);
    Mat2AXIvideo_U0->ap_start(Mat2AXIvideo_U0_ap_start);
    Mat2AXIvideo_U0->ap_done(Mat2AXIvideo_U0_ap_done);
    Mat2AXIvideo_U0->ap_continue(Mat2AXIvideo_U0_ap_continue);
    Mat2AXIvideo_U0->ap_idle(Mat2AXIvideo_U0_ap_idle);
    Mat2AXIvideo_U0->ap_ready(Mat2AXIvideo_U0_ap_ready);
    Mat2AXIvideo_U0->m_axis_video_TDATA(Mat2AXIvideo_U0_m_axis_video_TDATA);
    Mat2AXIvideo_U0->m_axis_video_TVALID(Mat2AXIvideo_U0_m_axis_video_TVALID);
    Mat2AXIvideo_U0->m_axis_video_TREADY(m_axis_video_TREADY);
    Mat2AXIvideo_U0->m_axis_video_TKEEP(Mat2AXIvideo_U0_m_axis_video_TKEEP);
    Mat2AXIvideo_U0->m_axis_video_TSTRB(Mat2AXIvideo_U0_m_axis_video_TSTRB);
    Mat2AXIvideo_U0->m_axis_video_TUSER(Mat2AXIvideo_U0_m_axis_video_TUSER);
    Mat2AXIvideo_U0->m_axis_video_TLAST(Mat2AXIvideo_U0_m_axis_video_TLAST);
    Mat2AXIvideo_U0->m_axis_video_TID(Mat2AXIvideo_U0_m_axis_video_TID);
    Mat2AXIvideo_U0->m_axis_video_TDEST(Mat2AXIvideo_U0_m_axis_video_TDEST);
    Mat2AXIvideo_U0->img_0_data_stream_V_s_dout(img_0_data_stream_V_s_dout);
    Mat2AXIvideo_U0->img_0_data_stream_V_s_empty_n(img_0_data_stream_V_s_empty_n);
    Mat2AXIvideo_U0->img_0_data_stream_V_s_read(Mat2AXIvideo_U0_img_0_data_stream_V_s_read);
    Mat2AXIvideo_U0->img_0_data_stream_V_1_dout(img_0_data_stream_V_1_dout);
    Mat2AXIvideo_U0->img_0_data_stream_V_1_empty_n(img_0_data_stream_V_1_empty_n);
    Mat2AXIvideo_U0->img_0_data_stream_V_1_read(Mat2AXIvideo_U0_img_0_data_stream_V_1_read);
    Mat2AXIvideo_U0->img_0_data_stream_V_2_dout(img_0_data_stream_V_2_dout);
    Mat2AXIvideo_U0->img_0_data_stream_V_2_empty_n(img_0_data_stream_V_2_empty_n);
    Mat2AXIvideo_U0->img_0_data_stream_V_2_read(Mat2AXIvideo_U0_img_0_data_stream_V_2_read);
    re_V_c_U = new fifo_w18_d2_A("re_V_c_U");
    re_V_c_U->clk(ap_clk);
    re_V_c_U->reset(ap_rst_n_inv);
    re_V_c_U->if_read_ce(ap_var_for_const0);
    re_V_c_U->if_write_ce(ap_var_for_const0);
    re_V_c_U->if_din(video_mandelbrot_gen_1_U0_re_V_out_din);
    re_V_c_U->if_full_n(re_V_c_full_n);
    re_V_c_U->if_write(video_mandelbrot_gen_1_U0_re_V_out_write);
    re_V_c_U->if_dout(re_V_c_dout);
    re_V_c_U->if_empty_n(re_V_c_empty_n);
    re_V_c_U->if_read(Loop_out_proc28_U0_re_V_read);
    im_V_c_U = new fifo_w18_d2_A("im_V_c_U");
    im_V_c_U->clk(ap_clk);
    im_V_c_U->reset(ap_rst_n_inv);
    im_V_c_U->if_read_ce(ap_var_for_const0);
    im_V_c_U->if_write_ce(ap_var_for_const0);
    im_V_c_U->if_din(video_mandelbrot_gen_1_U0_im_V_out_din);
    im_V_c_U->if_full_n(im_V_c_full_n);
    im_V_c_U->if_write(video_mandelbrot_gen_1_U0_im_V_out_write);
    im_V_c_U->if_dout(im_V_c_dout);
    im_V_c_U->if_empty_n(im_V_c_empty_n);
    im_V_c_U->if_read(Loop_out_proc28_U0_im_V_read);
    zoom_factor_V_c_U = new fifo_w18_d2_A("zoom_factor_V_c_U");
    zoom_factor_V_c_U->clk(ap_clk);
    zoom_factor_V_c_U->reset(ap_rst_n_inv);
    zoom_factor_V_c_U->if_read_ce(ap_var_for_const0);
    zoom_factor_V_c_U->if_write_ce(ap_var_for_const0);
    zoom_factor_V_c_U->if_din(video_mandelbrot_gen_1_U0_zoom_factor_V_out_din);
    zoom_factor_V_c_U->if_full_n(zoom_factor_V_c_full_n);
    zoom_factor_V_c_U->if_write(video_mandelbrot_gen_1_U0_zoom_factor_V_out_write);
    zoom_factor_V_c_U->if_dout(zoom_factor_V_c_dout);
    zoom_factor_V_c_U->if_empty_n(zoom_factor_V_c_empty_n);
    zoom_factor_V_c_U->if_read(Loop_out_proc28_U0_zoom_factor_V_read);
    img_0_data_stream_V_s_U = new fifo_w8_d2_A("img_0_data_stream_V_s_U");
    img_0_data_stream_V_s_U->clk(ap_clk);
    img_0_data_stream_V_s_U->reset(ap_rst_n_inv);
    img_0_data_stream_V_s_U->if_read_ce(ap_var_for_const0);
    img_0_data_stream_V_s_U->if_write_ce(ap_var_for_const0);
    img_0_data_stream_V_s_U->if_din(Loop_out_proc28_U0_img_0_data_stream_V_s_din);
    img_0_data_stream_V_s_U->if_full_n(img_0_data_stream_V_s_full_n);
    img_0_data_stream_V_s_U->if_write(Loop_out_proc28_U0_img_0_data_stream_V_s_write);
    img_0_data_stream_V_s_U->if_dout(img_0_data_stream_V_s_dout);
    img_0_data_stream_V_s_U->if_empty_n(img_0_data_stream_V_s_empty_n);
    img_0_data_stream_V_s_U->if_read(Mat2AXIvideo_U0_img_0_data_stream_V_s_read);
    img_0_data_stream_V_1_U = new fifo_w8_d2_A("img_0_data_stream_V_1_U");
    img_0_data_stream_V_1_U->clk(ap_clk);
    img_0_data_stream_V_1_U->reset(ap_rst_n_inv);
    img_0_data_stream_V_1_U->if_read_ce(ap_var_for_const0);
    img_0_data_stream_V_1_U->if_write_ce(ap_var_for_const0);
    img_0_data_stream_V_1_U->if_din(Loop_out_proc28_U0_img_0_data_stream_V_1_din);
    img_0_data_stream_V_1_U->if_full_n(img_0_data_stream_V_1_full_n);
    img_0_data_stream_V_1_U->if_write(Loop_out_proc28_U0_img_0_data_stream_V_1_write);
    img_0_data_stream_V_1_U->if_dout(img_0_data_stream_V_1_dout);
    img_0_data_stream_V_1_U->if_empty_n(img_0_data_stream_V_1_empty_n);
    img_0_data_stream_V_1_U->if_read(Mat2AXIvideo_U0_img_0_data_stream_V_1_read);
    img_0_data_stream_V_2_U = new fifo_w8_d2_A("img_0_data_stream_V_2_U");
    img_0_data_stream_V_2_U->clk(ap_clk);
    img_0_data_stream_V_2_U->reset(ap_rst_n_inv);
    img_0_data_stream_V_2_U->if_read_ce(ap_var_for_const0);
    img_0_data_stream_V_2_U->if_write_ce(ap_var_for_const0);
    img_0_data_stream_V_2_U->if_din(Loop_out_proc28_U0_img_0_data_stream_V_2_din);
    img_0_data_stream_V_2_U->if_full_n(img_0_data_stream_V_2_full_n);
    img_0_data_stream_V_2_U->if_write(Loop_out_proc28_U0_img_0_data_stream_V_2_write);
    img_0_data_stream_V_2_U->if_dout(img_0_data_stream_V_2_dout);
    img_0_data_stream_V_2_U->if_empty_n(img_0_data_stream_V_2_empty_n);
    img_0_data_stream_V_2_U->if_read(Mat2AXIvideo_U0_img_0_data_stream_V_2_read);
    start_for_Loop_out_proc28_U0_U = new start_for_Loop_out_proc28_U0("start_for_Loop_out_proc28_U0_U");
    start_for_Loop_out_proc28_U0_U->clk(ap_clk);
    start_for_Loop_out_proc28_U0_U->reset(ap_rst_n_inv);
    start_for_Loop_out_proc28_U0_U->if_read_ce(ap_var_for_const0);
    start_for_Loop_out_proc28_U0_U->if_write_ce(ap_var_for_const0);
    start_for_Loop_out_proc28_U0_U->if_din(start_for_Loop_out_proc28_U0_din);
    start_for_Loop_out_proc28_U0_U->if_full_n(start_for_Loop_out_proc28_U0_full_n);
    start_for_Loop_out_proc28_U0_U->if_write(video_mandelbrot_gen_1_U0_start_write);
    start_for_Loop_out_proc28_U0_U->if_dout(start_for_Loop_out_proc28_U0_dout);
    start_for_Loop_out_proc28_U0_U->if_empty_n(start_for_Loop_out_proc28_U0_empty_n);
    start_for_Loop_out_proc28_U0_U->if_read(Loop_out_proc28_U0_ap_ready);
    start_for_Mat2AXIvideo_U0_U = new start_for_Mat2AXIvideo_U0("start_for_Mat2AXIvideo_U0_U");
    start_for_Mat2AXIvideo_U0_U->clk(ap_clk);
    start_for_Mat2AXIvideo_U0_U->reset(ap_rst_n_inv);
    start_for_Mat2AXIvideo_U0_U->if_read_ce(ap_var_for_const0);
    start_for_Mat2AXIvideo_U0_U->if_write_ce(ap_var_for_const0);
    start_for_Mat2AXIvideo_U0_U->if_din(start_for_Mat2AXIvideo_U0_din);
    start_for_Mat2AXIvideo_U0_U->if_full_n(start_for_Mat2AXIvideo_U0_full_n);
    start_for_Mat2AXIvideo_U0_U->if_write(Loop_out_proc28_U0_start_write);
    start_for_Mat2AXIvideo_U0_U->if_dout(start_for_Mat2AXIvideo_U0_dout);
    start_for_Mat2AXIvideo_U0_U->if_empty_n(start_for_Mat2AXIvideo_U0_empty_n);
    start_for_Mat2AXIvideo_U0_U->if_read(Mat2AXIvideo_U0_ap_ready);

    SC_METHOD(thread_Loop_out_proc28_U0_ap_continue);

    SC_METHOD(thread_Loop_out_proc28_U0_ap_start);
    sensitive << ( start_for_Loop_out_proc28_U0_empty_n );

    SC_METHOD(thread_Mat2AXIvideo_U0_ap_continue);

    SC_METHOD(thread_Mat2AXIvideo_U0_ap_start);
    sensitive << ( start_for_Mat2AXIvideo_U0_empty_n );

    SC_METHOD(thread_Mat2AXIvideo_U0_start_full_n);

    SC_METHOD(thread_Mat2AXIvideo_U0_start_write);

    SC_METHOD(thread_ap_done);
    sensitive << ( Mat2AXIvideo_U0_ap_done );

    SC_METHOD(thread_ap_idle);
    sensitive << ( video_mandelbrot_gen_1_U0_ap_idle );
    sensitive << ( Loop_out_proc28_U0_ap_idle );
    sensitive << ( Mat2AXIvideo_U0_ap_idle );

    SC_METHOD(thread_ap_ready);
    sensitive << ( video_mandelbrot_gen_1_U0_ap_ready );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_ap_sync_continue);

    SC_METHOD(thread_ap_sync_done);
    sensitive << ( Mat2AXIvideo_U0_ap_done );

    SC_METHOD(thread_ap_sync_ready);
    sensitive << ( video_mandelbrot_gen_1_U0_ap_ready );

    SC_METHOD(thread_m_axis_video_TDATA);
    sensitive << ( Mat2AXIvideo_U0_m_axis_video_TDATA );

    SC_METHOD(thread_m_axis_video_TDEST);
    sensitive << ( Mat2AXIvideo_U0_m_axis_video_TDEST );

    SC_METHOD(thread_m_axis_video_TID);
    sensitive << ( Mat2AXIvideo_U0_m_axis_video_TID );

    SC_METHOD(thread_m_axis_video_TKEEP);
    sensitive << ( Mat2AXIvideo_U0_m_axis_video_TKEEP );

    SC_METHOD(thread_m_axis_video_TLAST);
    sensitive << ( Mat2AXIvideo_U0_m_axis_video_TLAST );

    SC_METHOD(thread_m_axis_video_TSTRB);
    sensitive << ( Mat2AXIvideo_U0_m_axis_video_TSTRB );

    SC_METHOD(thread_m_axis_video_TUSER);
    sensitive << ( Mat2AXIvideo_U0_m_axis_video_TUSER );

    SC_METHOD(thread_m_axis_video_TVALID);
    sensitive << ( Mat2AXIvideo_U0_m_axis_video_TVALID );

    SC_METHOD(thread_start_for_Loop_out_proc28_U0_din);

    SC_METHOD(thread_start_for_Mat2AXIvideo_U0_din);

    SC_METHOD(thread_video_mandelbrot_gen_1_U0_ap_continue);

    SC_METHOD(thread_video_mandelbrot_gen_1_U0_ap_start);
    sensitive << ( ap_start );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "video_mandelbrot_generator_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, s_axi_cmd_AWVALID, "(port)s_axi_cmd_AWVALID");
    sc_trace(mVcdFile, s_axi_cmd_AWREADY, "(port)s_axi_cmd_AWREADY");
    sc_trace(mVcdFile, s_axi_cmd_AWADDR, "(port)s_axi_cmd_AWADDR");
    sc_trace(mVcdFile, s_axi_cmd_WVALID, "(port)s_axi_cmd_WVALID");
    sc_trace(mVcdFile, s_axi_cmd_WREADY, "(port)s_axi_cmd_WREADY");
    sc_trace(mVcdFile, s_axi_cmd_WDATA, "(port)s_axi_cmd_WDATA");
    sc_trace(mVcdFile, s_axi_cmd_WSTRB, "(port)s_axi_cmd_WSTRB");
    sc_trace(mVcdFile, s_axi_cmd_ARVALID, "(port)s_axi_cmd_ARVALID");
    sc_trace(mVcdFile, s_axi_cmd_ARREADY, "(port)s_axi_cmd_ARREADY");
    sc_trace(mVcdFile, s_axi_cmd_ARADDR, "(port)s_axi_cmd_ARADDR");
    sc_trace(mVcdFile, s_axi_cmd_RVALID, "(port)s_axi_cmd_RVALID");
    sc_trace(mVcdFile, s_axi_cmd_RREADY, "(port)s_axi_cmd_RREADY");
    sc_trace(mVcdFile, s_axi_cmd_RDATA, "(port)s_axi_cmd_RDATA");
    sc_trace(mVcdFile, s_axi_cmd_RRESP, "(port)s_axi_cmd_RRESP");
    sc_trace(mVcdFile, s_axi_cmd_BVALID, "(port)s_axi_cmd_BVALID");
    sc_trace(mVcdFile, s_axi_cmd_BREADY, "(port)s_axi_cmd_BREADY");
    sc_trace(mVcdFile, s_axi_cmd_BRESP, "(port)s_axi_cmd_BRESP");
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
    sc_trace(mVcdFile, m_axis_video_TDATA, "(port)m_axis_video_TDATA");
    sc_trace(mVcdFile, m_axis_video_TKEEP, "(port)m_axis_video_TKEEP");
    sc_trace(mVcdFile, m_axis_video_TSTRB, "(port)m_axis_video_TSTRB");
    sc_trace(mVcdFile, m_axis_video_TUSER, "(port)m_axis_video_TUSER");
    sc_trace(mVcdFile, m_axis_video_TLAST, "(port)m_axis_video_TLAST");
    sc_trace(mVcdFile, m_axis_video_TID, "(port)m_axis_video_TID");
    sc_trace(mVcdFile, m_axis_video_TDEST, "(port)m_axis_video_TDEST");
    sc_trace(mVcdFile, m_axis_video_TVALID, "(port)m_axis_video_TVALID");
    sc_trace(mVcdFile, m_axis_video_TREADY, "(port)m_axis_video_TREADY");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, re_V, "re_V");
    sc_trace(mVcdFile, im_V, "im_V");
    sc_trace(mVcdFile, zoom_factor_V, "zoom_factor_V");
    sc_trace(mVcdFile, video_mandelbrot_gen_1_U0_ap_start, "video_mandelbrot_gen_1_U0_ap_start");
    sc_trace(mVcdFile, video_mandelbrot_gen_1_U0_ap_done, "video_mandelbrot_gen_1_U0_ap_done");
    sc_trace(mVcdFile, video_mandelbrot_gen_1_U0_ap_continue, "video_mandelbrot_gen_1_U0_ap_continue");
    sc_trace(mVcdFile, video_mandelbrot_gen_1_U0_ap_idle, "video_mandelbrot_gen_1_U0_ap_idle");
    sc_trace(mVcdFile, video_mandelbrot_gen_1_U0_ap_ready, "video_mandelbrot_gen_1_U0_ap_ready");
    sc_trace(mVcdFile, video_mandelbrot_gen_1_U0_start_out, "video_mandelbrot_gen_1_U0_start_out");
    sc_trace(mVcdFile, video_mandelbrot_gen_1_U0_start_write, "video_mandelbrot_gen_1_U0_start_write");
    sc_trace(mVcdFile, video_mandelbrot_gen_1_U0_re_V_out_din, "video_mandelbrot_gen_1_U0_re_V_out_din");
    sc_trace(mVcdFile, video_mandelbrot_gen_1_U0_re_V_out_write, "video_mandelbrot_gen_1_U0_re_V_out_write");
    sc_trace(mVcdFile, video_mandelbrot_gen_1_U0_im_V_out_din, "video_mandelbrot_gen_1_U0_im_V_out_din");
    sc_trace(mVcdFile, video_mandelbrot_gen_1_U0_im_V_out_write, "video_mandelbrot_gen_1_U0_im_V_out_write");
    sc_trace(mVcdFile, video_mandelbrot_gen_1_U0_zoom_factor_V_out_din, "video_mandelbrot_gen_1_U0_zoom_factor_V_out_din");
    sc_trace(mVcdFile, video_mandelbrot_gen_1_U0_zoom_factor_V_out_write, "video_mandelbrot_gen_1_U0_zoom_factor_V_out_write");
    sc_trace(mVcdFile, Loop_out_proc28_U0_ap_start, "Loop_out_proc28_U0_ap_start");
    sc_trace(mVcdFile, Loop_out_proc28_U0_ap_done, "Loop_out_proc28_U0_ap_done");
    sc_trace(mVcdFile, Loop_out_proc28_U0_ap_continue, "Loop_out_proc28_U0_ap_continue");
    sc_trace(mVcdFile, Loop_out_proc28_U0_ap_idle, "Loop_out_proc28_U0_ap_idle");
    sc_trace(mVcdFile, Loop_out_proc28_U0_ap_ready, "Loop_out_proc28_U0_ap_ready");
    sc_trace(mVcdFile, Loop_out_proc28_U0_start_out, "Loop_out_proc28_U0_start_out");
    sc_trace(mVcdFile, Loop_out_proc28_U0_start_write, "Loop_out_proc28_U0_start_write");
    sc_trace(mVcdFile, Loop_out_proc28_U0_im_V_read, "Loop_out_proc28_U0_im_V_read");
    sc_trace(mVcdFile, Loop_out_proc28_U0_re_V_read, "Loop_out_proc28_U0_re_V_read");
    sc_trace(mVcdFile, Loop_out_proc28_U0_zoom_factor_V_read, "Loop_out_proc28_U0_zoom_factor_V_read");
    sc_trace(mVcdFile, Loop_out_proc28_U0_img_0_data_stream_V_s_din, "Loop_out_proc28_U0_img_0_data_stream_V_s_din");
    sc_trace(mVcdFile, Loop_out_proc28_U0_img_0_data_stream_V_s_write, "Loop_out_proc28_U0_img_0_data_stream_V_s_write");
    sc_trace(mVcdFile, Loop_out_proc28_U0_img_0_data_stream_V_1_din, "Loop_out_proc28_U0_img_0_data_stream_V_1_din");
    sc_trace(mVcdFile, Loop_out_proc28_U0_img_0_data_stream_V_1_write, "Loop_out_proc28_U0_img_0_data_stream_V_1_write");
    sc_trace(mVcdFile, Loop_out_proc28_U0_img_0_data_stream_V_2_din, "Loop_out_proc28_U0_img_0_data_stream_V_2_din");
    sc_trace(mVcdFile, Loop_out_proc28_U0_img_0_data_stream_V_2_write, "Loop_out_proc28_U0_img_0_data_stream_V_2_write");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_ap_start, "Mat2AXIvideo_U0_ap_start");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_ap_done, "Mat2AXIvideo_U0_ap_done");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_ap_continue, "Mat2AXIvideo_U0_ap_continue");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_ap_idle, "Mat2AXIvideo_U0_ap_idle");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_ap_ready, "Mat2AXIvideo_U0_ap_ready");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_m_axis_video_TDATA, "Mat2AXIvideo_U0_m_axis_video_TDATA");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_m_axis_video_TVALID, "Mat2AXIvideo_U0_m_axis_video_TVALID");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_m_axis_video_TKEEP, "Mat2AXIvideo_U0_m_axis_video_TKEEP");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_m_axis_video_TSTRB, "Mat2AXIvideo_U0_m_axis_video_TSTRB");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_m_axis_video_TUSER, "Mat2AXIvideo_U0_m_axis_video_TUSER");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_m_axis_video_TLAST, "Mat2AXIvideo_U0_m_axis_video_TLAST");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_m_axis_video_TID, "Mat2AXIvideo_U0_m_axis_video_TID");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_m_axis_video_TDEST, "Mat2AXIvideo_U0_m_axis_video_TDEST");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_img_0_data_stream_V_s_read, "Mat2AXIvideo_U0_img_0_data_stream_V_s_read");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_img_0_data_stream_V_1_read, "Mat2AXIvideo_U0_img_0_data_stream_V_1_read");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_img_0_data_stream_V_2_read, "Mat2AXIvideo_U0_img_0_data_stream_V_2_read");
    sc_trace(mVcdFile, ap_sync_continue, "ap_sync_continue");
    sc_trace(mVcdFile, re_V_c_full_n, "re_V_c_full_n");
    sc_trace(mVcdFile, re_V_c_dout, "re_V_c_dout");
    sc_trace(mVcdFile, re_V_c_empty_n, "re_V_c_empty_n");
    sc_trace(mVcdFile, im_V_c_full_n, "im_V_c_full_n");
    sc_trace(mVcdFile, im_V_c_dout, "im_V_c_dout");
    sc_trace(mVcdFile, im_V_c_empty_n, "im_V_c_empty_n");
    sc_trace(mVcdFile, zoom_factor_V_c_full_n, "zoom_factor_V_c_full_n");
    sc_trace(mVcdFile, zoom_factor_V_c_dout, "zoom_factor_V_c_dout");
    sc_trace(mVcdFile, zoom_factor_V_c_empty_n, "zoom_factor_V_c_empty_n");
    sc_trace(mVcdFile, img_0_data_stream_V_s_full_n, "img_0_data_stream_V_s_full_n");
    sc_trace(mVcdFile, img_0_data_stream_V_s_dout, "img_0_data_stream_V_s_dout");
    sc_trace(mVcdFile, img_0_data_stream_V_s_empty_n, "img_0_data_stream_V_s_empty_n");
    sc_trace(mVcdFile, img_0_data_stream_V_1_full_n, "img_0_data_stream_V_1_full_n");
    sc_trace(mVcdFile, img_0_data_stream_V_1_dout, "img_0_data_stream_V_1_dout");
    sc_trace(mVcdFile, img_0_data_stream_V_1_empty_n, "img_0_data_stream_V_1_empty_n");
    sc_trace(mVcdFile, img_0_data_stream_V_2_full_n, "img_0_data_stream_V_2_full_n");
    sc_trace(mVcdFile, img_0_data_stream_V_2_dout, "img_0_data_stream_V_2_dout");
    sc_trace(mVcdFile, img_0_data_stream_V_2_empty_n, "img_0_data_stream_V_2_empty_n");
    sc_trace(mVcdFile, ap_sync_done, "ap_sync_done");
    sc_trace(mVcdFile, ap_sync_ready, "ap_sync_ready");
    sc_trace(mVcdFile, start_for_Loop_out_proc28_U0_din, "start_for_Loop_out_proc28_U0_din");
    sc_trace(mVcdFile, start_for_Loop_out_proc28_U0_full_n, "start_for_Loop_out_proc28_U0_full_n");
    sc_trace(mVcdFile, start_for_Loop_out_proc28_U0_dout, "start_for_Loop_out_proc28_U0_dout");
    sc_trace(mVcdFile, start_for_Loop_out_proc28_U0_empty_n, "start_for_Loop_out_proc28_U0_empty_n");
    sc_trace(mVcdFile, start_for_Mat2AXIvideo_U0_din, "start_for_Mat2AXIvideo_U0_din");
    sc_trace(mVcdFile, start_for_Mat2AXIvideo_U0_full_n, "start_for_Mat2AXIvideo_U0_full_n");
    sc_trace(mVcdFile, start_for_Mat2AXIvideo_U0_dout, "start_for_Mat2AXIvideo_U0_dout");
    sc_trace(mVcdFile, start_for_Mat2AXIvideo_U0_empty_n, "start_for_Mat2AXIvideo_U0_empty_n");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_start_full_n, "Mat2AXIvideo_U0_start_full_n");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_start_write, "Mat2AXIvideo_U0_start_write");
#endif

    }
    mHdltvinHandle.open("video_mandelbrot_generator.hdltvin.dat");
    mHdltvoutHandle.open("video_mandelbrot_generator.hdltvout.dat");
}

video_mandelbrot_generator::~video_mandelbrot_generator() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete video_mandelbrot_generator_cmd_s_axi_U;
    delete video_mandelbrot_gen_1_U0;
    delete Loop_out_proc28_U0;
    delete Mat2AXIvideo_U0;
    delete re_V_c_U;
    delete im_V_c_U;
    delete zoom_factor_V_c_U;
    delete img_0_data_stream_V_s_U;
    delete img_0_data_stream_V_1_U;
    delete img_0_data_stream_V_2_U;
    delete start_for_Loop_out_proc28_U0_U;
    delete start_for_Mat2AXIvideo_U0_U;
}

void video_mandelbrot_generator::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void video_mandelbrot_generator::thread_Loop_out_proc28_U0_ap_continue() {
    Loop_out_proc28_U0_ap_continue = ap_const_logic_1;
}

void video_mandelbrot_generator::thread_Loop_out_proc28_U0_ap_start() {
    Loop_out_proc28_U0_ap_start = start_for_Loop_out_proc28_U0_empty_n.read();
}

void video_mandelbrot_generator::thread_Mat2AXIvideo_U0_ap_continue() {
    Mat2AXIvideo_U0_ap_continue = ap_const_logic_1;
}

void video_mandelbrot_generator::thread_Mat2AXIvideo_U0_ap_start() {
    Mat2AXIvideo_U0_ap_start = start_for_Mat2AXIvideo_U0_empty_n.read();
}

void video_mandelbrot_generator::thread_Mat2AXIvideo_U0_start_full_n() {
    Mat2AXIvideo_U0_start_full_n = ap_const_logic_1;
}

void video_mandelbrot_generator::thread_Mat2AXIvideo_U0_start_write() {
    Mat2AXIvideo_U0_start_write = ap_const_logic_0;
}

void video_mandelbrot_generator::thread_ap_done() {
    ap_done = Mat2AXIvideo_U0_ap_done.read();
}

void video_mandelbrot_generator::thread_ap_idle() {
    ap_idle = (video_mandelbrot_gen_1_U0_ap_idle.read() & Loop_out_proc28_U0_ap_idle.read() & Mat2AXIvideo_U0_ap_idle.read());
}

void video_mandelbrot_generator::thread_ap_ready() {
    ap_ready = video_mandelbrot_gen_1_U0_ap_ready.read();
}

void video_mandelbrot_generator::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void video_mandelbrot_generator::thread_ap_sync_continue() {
    ap_sync_continue = ap_const_logic_1;
}

void video_mandelbrot_generator::thread_ap_sync_done() {
    ap_sync_done = Mat2AXIvideo_U0_ap_done.read();
}

void video_mandelbrot_generator::thread_ap_sync_ready() {
    ap_sync_ready = video_mandelbrot_gen_1_U0_ap_ready.read();
}

void video_mandelbrot_generator::thread_m_axis_video_TDATA() {
    m_axis_video_TDATA = Mat2AXIvideo_U0_m_axis_video_TDATA.read();
}

void video_mandelbrot_generator::thread_m_axis_video_TDEST() {
    m_axis_video_TDEST = Mat2AXIvideo_U0_m_axis_video_TDEST.read();
}

void video_mandelbrot_generator::thread_m_axis_video_TID() {
    m_axis_video_TID = Mat2AXIvideo_U0_m_axis_video_TID.read();
}

void video_mandelbrot_generator::thread_m_axis_video_TKEEP() {
    m_axis_video_TKEEP = Mat2AXIvideo_U0_m_axis_video_TKEEP.read();
}

void video_mandelbrot_generator::thread_m_axis_video_TLAST() {
    m_axis_video_TLAST = Mat2AXIvideo_U0_m_axis_video_TLAST.read();
}

void video_mandelbrot_generator::thread_m_axis_video_TSTRB() {
    m_axis_video_TSTRB = Mat2AXIvideo_U0_m_axis_video_TSTRB.read();
}

void video_mandelbrot_generator::thread_m_axis_video_TUSER() {
    m_axis_video_TUSER = Mat2AXIvideo_U0_m_axis_video_TUSER.read();
}

void video_mandelbrot_generator::thread_m_axis_video_TVALID() {
    m_axis_video_TVALID = Mat2AXIvideo_U0_m_axis_video_TVALID.read();
}

void video_mandelbrot_generator::thread_start_for_Loop_out_proc28_U0_din() {
    start_for_Loop_out_proc28_U0_din =  (sc_lv<1>) (ap_const_logic_1);
}

void video_mandelbrot_generator::thread_start_for_Mat2AXIvideo_U0_din() {
    start_for_Mat2AXIvideo_U0_din =  (sc_lv<1>) (ap_const_logic_1);
}

void video_mandelbrot_generator::thread_video_mandelbrot_gen_1_U0_ap_continue() {
    video_mandelbrot_gen_1_U0_ap_continue = ap_const_logic_1;
}

void video_mandelbrot_generator::thread_video_mandelbrot_gen_1_U0_ap_start() {
    video_mandelbrot_gen_1_U0_ap_start = ap_start.read();
}

void video_mandelbrot_generator::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"s_axi_cmd_AWVALID\" :  \"" << s_axi_cmd_AWVALID.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"s_axi_cmd_AWREADY\" :  \"" << s_axi_cmd_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_cmd_AWADDR\" :  \"" << s_axi_cmd_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_cmd_WVALID\" :  \"" << s_axi_cmd_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_cmd_WREADY\" :  \"" << s_axi_cmd_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_cmd_WDATA\" :  \"" << s_axi_cmd_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_cmd_WSTRB\" :  \"" << s_axi_cmd_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_cmd_ARVALID\" :  \"" << s_axi_cmd_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_cmd_ARREADY\" :  \"" << s_axi_cmd_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_cmd_ARADDR\" :  \"" << s_axi_cmd_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_cmd_RVALID\" :  \"" << s_axi_cmd_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_cmd_RREADY\" :  \"" << s_axi_cmd_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_cmd_RDATA\" :  \"" << s_axi_cmd_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_cmd_RRESP\" :  \"" << s_axi_cmd_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_cmd_BVALID\" :  \"" << s_axi_cmd_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_cmd_BREADY\" :  \"" << s_axi_cmd_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_cmd_BRESP\" :  \"" << s_axi_cmd_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axis_video_TDATA\" :  \"" << m_axis_video_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axis_video_TKEEP\" :  \"" << m_axis_video_TKEEP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axis_video_TSTRB\" :  \"" << m_axis_video_TSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axis_video_TUSER\" :  \"" << m_axis_video_TUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axis_video_TLAST\" :  \"" << m_axis_video_TLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axis_video_TID\" :  \"" << m_axis_video_TID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axis_video_TDEST\" :  \"" << m_axis_video_TDEST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axis_video_TVALID\" :  \"" << m_axis_video_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axis_video_TREADY\" :  \"" << m_axis_video_TREADY.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

