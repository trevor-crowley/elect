// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "video_mandelbrot_generator.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic video_mandelbrot_generator::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic video_mandelbrot_generator::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<84> video_mandelbrot_generator::ap_ST_fsm_state1 = "1";
const sc_lv<84> video_mandelbrot_generator::ap_ST_fsm_state2 = "10";
const sc_lv<84> video_mandelbrot_generator::ap_ST_fsm_state3 = "100";
const sc_lv<84> video_mandelbrot_generator::ap_ST_fsm_state4 = "1000";
const sc_lv<84> video_mandelbrot_generator::ap_ST_fsm_state5 = "10000";
const sc_lv<84> video_mandelbrot_generator::ap_ST_fsm_state6 = "100000";
const sc_lv<84> video_mandelbrot_generator::ap_ST_fsm_state7 = "1000000";
const sc_lv<84> video_mandelbrot_generator::ap_ST_fsm_state8 = "10000000";
const sc_lv<84> video_mandelbrot_generator::ap_ST_fsm_state9 = "100000000";
const sc_lv<84> video_mandelbrot_generator::ap_ST_fsm_state10 = "1000000000";
const sc_lv<84> video_mandelbrot_generator::ap_ST_fsm_state11 = "10000000000";
const sc_lv<84> video_mandelbrot_generator::ap_ST_fsm_state12 = "100000000000";
const sc_lv<84> video_mandelbrot_generator::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<84> video_mandelbrot_generator::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<84> video_mandelbrot_generator::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<84> video_mandelbrot_generator::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<84> video_mandelbrot_generator::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<84> video_mandelbrot_generator::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<84> video_mandelbrot_generator::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<84> video_mandelbrot_generator::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<84> video_mandelbrot_generator::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<84> video_mandelbrot_generator::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<84> video_mandelbrot_generator::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<84> video_mandelbrot_generator::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<84> video_mandelbrot_generator::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<84> video_mandelbrot_generator::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<84> video_mandelbrot_generator::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<84> video_mandelbrot_generator::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<84> video_mandelbrot_generator::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<84> video_mandelbrot_generator::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<84> video_mandelbrot_generator::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<84> video_mandelbrot_generator::ap_ST_fsm_state32 = "10000000000000000000000000000000";
const sc_lv<84> video_mandelbrot_generator::ap_ST_fsm_state33 = "100000000000000000000000000000000";
const sc_lv<84> video_mandelbrot_generator::ap_ST_fsm_state34 = "1000000000000000000000000000000000";
const sc_lv<84> video_mandelbrot_generator::ap_ST_fsm_state35 = "10000000000000000000000000000000000";
const sc_lv<84> video_mandelbrot_generator::ap_ST_fsm_state36 = "100000000000000000000000000000000000";
const sc_lv<84> video_mandelbrot_generator::ap_ST_fsm_state37 = "1000000000000000000000000000000000000";
const sc_lv<84> video_mandelbrot_generator::ap_ST_fsm_state38 = "10000000000000000000000000000000000000";
const sc_lv<84> video_mandelbrot_generator::ap_ST_fsm_state39 = "100000000000000000000000000000000000000";
const sc_lv<84> video_mandelbrot_generator::ap_ST_fsm_state40 = "1000000000000000000000000000000000000000";
const sc_lv<84> video_mandelbrot_generator::ap_ST_fsm_state41 = "10000000000000000000000000000000000000000";
const sc_lv<84> video_mandelbrot_generator::ap_ST_fsm_state42 = "100000000000000000000000000000000000000000";
const sc_lv<84> video_mandelbrot_generator::ap_ST_fsm_state43 = "1000000000000000000000000000000000000000000";
const sc_lv<84> video_mandelbrot_generator::ap_ST_fsm_state44 = "10000000000000000000000000000000000000000000";
const sc_lv<84> video_mandelbrot_generator::ap_ST_fsm_state45 = "100000000000000000000000000000000000000000000";
const sc_lv<84> video_mandelbrot_generator::ap_ST_fsm_state46 = "1000000000000000000000000000000000000000000000";
const sc_lv<84> video_mandelbrot_generator::ap_ST_fsm_state47 = "10000000000000000000000000000000000000000000000";
const sc_lv<84> video_mandelbrot_generator::ap_ST_fsm_state48 = "100000000000000000000000000000000000000000000000";
const sc_lv<84> video_mandelbrot_generator::ap_ST_fsm_state49 = "1000000000000000000000000000000000000000000000000";
const sc_lv<84> video_mandelbrot_generator::ap_ST_fsm_state50 = "10000000000000000000000000000000000000000000000000";
const sc_lv<84> video_mandelbrot_generator::ap_ST_fsm_state51 = "100000000000000000000000000000000000000000000000000";
const sc_lv<84> video_mandelbrot_generator::ap_ST_fsm_state52 = "1000000000000000000000000000000000000000000000000000";
const sc_lv<84> video_mandelbrot_generator::ap_ST_fsm_state53 = "10000000000000000000000000000000000000000000000000000";
const sc_lv<84> video_mandelbrot_generator::ap_ST_fsm_state54 = "100000000000000000000000000000000000000000000000000000";
const sc_lv<84> video_mandelbrot_generator::ap_ST_fsm_state55 = "1000000000000000000000000000000000000000000000000000000";
const sc_lv<84> video_mandelbrot_generator::ap_ST_fsm_state56 = "10000000000000000000000000000000000000000000000000000000";
const sc_lv<84> video_mandelbrot_generator::ap_ST_fsm_state57 = "100000000000000000000000000000000000000000000000000000000";
const sc_lv<84> video_mandelbrot_generator::ap_ST_fsm_state58 = "1000000000000000000000000000000000000000000000000000000000";
const sc_lv<84> video_mandelbrot_generator::ap_ST_fsm_state59 = "10000000000000000000000000000000000000000000000000000000000";
const sc_lv<84> video_mandelbrot_generator::ap_ST_fsm_state60 = "100000000000000000000000000000000000000000000000000000000000";
const sc_lv<84> video_mandelbrot_generator::ap_ST_fsm_state61 = "1000000000000000000000000000000000000000000000000000000000000";
const sc_lv<84> video_mandelbrot_generator::ap_ST_fsm_state62 = "10000000000000000000000000000000000000000000000000000000000000";
const sc_lv<84> video_mandelbrot_generator::ap_ST_fsm_state63 = "100000000000000000000000000000000000000000000000000000000000000";
const sc_lv<84> video_mandelbrot_generator::ap_ST_fsm_state64 = "1000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<84> video_mandelbrot_generator::ap_ST_fsm_state65 = "10000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<84> video_mandelbrot_generator::ap_ST_fsm_state66 = "100000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<84> video_mandelbrot_generator::ap_ST_fsm_state67 = "1000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<84> video_mandelbrot_generator::ap_ST_fsm_state68 = "10000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<84> video_mandelbrot_generator::ap_ST_fsm_state69 = "100000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<84> video_mandelbrot_generator::ap_ST_fsm_state70 = "1000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<84> video_mandelbrot_generator::ap_ST_fsm_state71 = "10000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<84> video_mandelbrot_generator::ap_ST_fsm_state72 = "100000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<84> video_mandelbrot_generator::ap_ST_fsm_state73 = "1000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<84> video_mandelbrot_generator::ap_ST_fsm_state74 = "10000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<84> video_mandelbrot_generator::ap_ST_fsm_state75 = "100000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<84> video_mandelbrot_generator::ap_ST_fsm_state76 = "1000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<84> video_mandelbrot_generator::ap_ST_fsm_state77 = "10000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<84> video_mandelbrot_generator::ap_ST_fsm_state78 = "100000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<84> video_mandelbrot_generator::ap_ST_fsm_state79 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<84> video_mandelbrot_generator::ap_ST_fsm_state80 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<84> video_mandelbrot_generator::ap_ST_fsm_state81 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<84> video_mandelbrot_generator::ap_ST_fsm_state82 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<84> video_mandelbrot_generator::ap_ST_fsm_state83 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<84> video_mandelbrot_generator::ap_ST_fsm_state84 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<32> video_mandelbrot_generator::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool video_mandelbrot_generator::ap_const_boolean_1 = true;
const sc_lv<1> video_mandelbrot_generator::ap_const_lv1_0 = "0";
const sc_lv<1> video_mandelbrot_generator::ap_const_lv1_1 = "1";
const sc_lv<2> video_mandelbrot_generator::ap_const_lv2_0 = "00";
const sc_lv<2> video_mandelbrot_generator::ap_const_lv2_2 = "10";
const sc_lv<2> video_mandelbrot_generator::ap_const_lv2_3 = "11";
const sc_lv<2> video_mandelbrot_generator::ap_const_lv2_1 = "1";
const sc_lv<32> video_mandelbrot_generator::ap_const_lv32_3B = "111011";
const sc_lv<32> video_mandelbrot_generator::ap_const_lv32_53 = "1010011";
const int video_mandelbrot_generator::C_S_AXI_DATA_WIDTH = "100000";
const sc_lv<32> video_mandelbrot_generator::ap_const_lv32_6 = "110";
const sc_lv<32> video_mandelbrot_generator::ap_const_lv32_1E = "11110";
const sc_lv<32> video_mandelbrot_generator::ap_const_lv32_B = "1011";
const sc_lv<32> video_mandelbrot_generator::ap_const_lv32_18 = "11000";
const sc_lv<32> video_mandelbrot_generator::ap_const_lv32_F = "1111";
const sc_lv<32> video_mandelbrot_generator::ap_const_lv32_13 = "10011";
const sc_lv<32> video_mandelbrot_generator::ap_const_lv32_27 = "100111";
const sc_lv<32> video_mandelbrot_generator::ap_const_lv32_2B = "101011";
const sc_lv<32> video_mandelbrot_generator::ap_const_lv32_2F = "101111";
const sc_lv<32> video_mandelbrot_generator::ap_const_lv32_23 = "100011";
const sc_lv<32> video_mandelbrot_generator::ap_const_lv32_34 = "110100";
const sc_lv<32> video_mandelbrot_generator::ap_const_lv32_39 = "111001";
const sc_lv<32> video_mandelbrot_generator::ap_const_lv32_3F = "111111";
const sc_lv<32> video_mandelbrot_generator::ap_const_lv32_44 = "1000100";
const sc_lv<32> video_mandelbrot_generator::ap_const_lv32_4E = "1001110";
const sc_lv<32> video_mandelbrot_generator::ap_const_lv32_1 = "1";
const sc_lv<32> video_mandelbrot_generator::ap_const_lv32_19 = "11001";
const sc_lv<32> video_mandelbrot_generator::ap_const_lv32_3A = "111010";
const bool video_mandelbrot_generator::ap_const_boolean_0 = false;
const sc_lv<32> video_mandelbrot_generator::ap_const_lv32_49 = "1001001";
const sc_lv<32> video_mandelbrot_generator::ap_const_lv32_4D = "1001101";
const sc_lv<32> video_mandelbrot_generator::ap_const_lv32_52 = "1010010";
const sc_lv<10> video_mandelbrot_generator::ap_const_lv10_0 = "0000000000";
const sc_lv<8> video_mandelbrot_generator::ap_const_lv8_0 = "00000000";
const sc_lv<3> video_mandelbrot_generator::ap_const_lv3_0 = "000";
const sc_lv<32> video_mandelbrot_generator::ap_const_lv32_C3960000 = "11000011100101100000000000000000";
const sc_lv<32> video_mandelbrot_generator::ap_const_lv32_C419D89E = "11000100000110011101100010011110";
const sc_lv<32> video_mandelbrot_generator::ap_const_lv32_7 = "111";
const sc_lv<32> video_mandelbrot_generator::ap_const_lv32_14 = "10100";
const sc_lv<32> video_mandelbrot_generator::ap_const_lv32_1F = "11111";
const sc_lv<32> video_mandelbrot_generator::ap_const_lv32_30 = "110000";
const sc_lv<32> video_mandelbrot_generator::ap_const_lv32_35 = "110101";
const sc_lv<32> video_mandelbrot_generator::ap_const_lv32_40 = "1000000";
const sc_lv<32> video_mandelbrot_generator::ap_const_lv32_45 = "1000101";
const sc_lv<32> video_mandelbrot_generator::ap_const_lv32_4A = "1001010";
const sc_lv<32> video_mandelbrot_generator::ap_const_lv32_3B5A740E = "111011010110100111010000001110";
const sc_lv<32> video_mandelbrot_generator::ap_const_lv32_3B23D70A = "111011001000111101011100001010";
const sc_lv<32> video_mandelbrot_generator::ap_const_lv32_3FC00000 = "111111110000000000000000000000";
const sc_lv<32> video_mandelbrot_generator::ap_const_lv32_C = "1100";
const sc_lv<32> video_mandelbrot_generator::ap_const_lv32_10 = "10000";
const sc_lv<32> video_mandelbrot_generator::ap_const_lv32_24 = "100100";
const sc_lv<32> video_mandelbrot_generator::ap_const_lv32_28 = "101000";
const sc_lv<32> video_mandelbrot_generator::ap_const_lv32_2C = "101100";
const sc_lv<32> video_mandelbrot_generator::ap_const_lv32_4F = "1001111";
const sc_lv<32> video_mandelbrot_generator::ap_const_lv32_40800000 = "1000000100000000000000000000000";
const sc_lv<10> video_mandelbrot_generator::ap_const_lv10_258 = "1001011000";
const sc_lv<10> video_mandelbrot_generator::ap_const_lv10_1 = "1";
const sc_lv<10> video_mandelbrot_generator::ap_const_lv10_31F = "1100011111";
const sc_lv<10> video_mandelbrot_generator::ap_const_lv10_320 = "1100100000";
const sc_lv<32> video_mandelbrot_generator::ap_const_lv32_17 = "10111";
const sc_lv<8> video_mandelbrot_generator::ap_const_lv8_FF = "11111111";
const sc_lv<23> video_mandelbrot_generator::ap_const_lv23_0 = "00000000000000000000000";
const sc_lv<8> video_mandelbrot_generator::ap_const_lv8_1 = "1";
const sc_lv<32> video_mandelbrot_generator::ap_const_lv32_3C = "111100";
const sc_lv<32> video_mandelbrot_generator::ap_const_lv32_3D = "111101";
const sc_lv<32> video_mandelbrot_generator::ap_const_lv32_3E = "111110";
const sc_lv<32> video_mandelbrot_generator::ap_const_lv32_41 = "1000001";
const sc_lv<32> video_mandelbrot_generator::ap_const_lv32_42 = "1000010";
const sc_lv<32> video_mandelbrot_generator::ap_const_lv32_43 = "1000011";
const sc_lv<32> video_mandelbrot_generator::ap_const_lv32_2 = "10";
const sc_lv<32> video_mandelbrot_generator::ap_const_lv32_3 = "11";
const sc_lv<32> video_mandelbrot_generator::ap_const_lv32_4 = "100";
const sc_lv<32> video_mandelbrot_generator::ap_const_lv32_5 = "101";
const sc_lv<32> video_mandelbrot_generator::ap_const_lv32_D = "1101";
const sc_lv<32> video_mandelbrot_generator::ap_const_lv32_E = "1110";
const sc_lv<32> video_mandelbrot_generator::ap_const_lv32_11 = "10001";
const sc_lv<32> video_mandelbrot_generator::ap_const_lv32_12 = "10010";
const sc_lv<32> video_mandelbrot_generator::ap_const_lv32_1A = "11010";
const sc_lv<32> video_mandelbrot_generator::ap_const_lv32_1B = "11011";
const sc_lv<32> video_mandelbrot_generator::ap_const_lv32_1C = "11100";
const sc_lv<32> video_mandelbrot_generator::ap_const_lv32_1D = "11101";
const sc_lv<32> video_mandelbrot_generator::ap_const_lv32_25 = "100101";
const sc_lv<32> video_mandelbrot_generator::ap_const_lv32_26 = "100110";
const sc_lv<32> video_mandelbrot_generator::ap_const_lv32_29 = "101001";
const sc_lv<32> video_mandelbrot_generator::ap_const_lv32_2A = "101010";
const sc_lv<32> video_mandelbrot_generator::ap_const_lv32_2D = "101101";
const sc_lv<32> video_mandelbrot_generator::ap_const_lv32_2E = "101110";
const sc_lv<32> video_mandelbrot_generator::ap_const_lv32_50 = "1010000";
const sc_lv<32> video_mandelbrot_generator::ap_const_lv32_51 = "1010001";
const sc_lv<5> video_mandelbrot_generator::ap_const_lv5_4 = "100";

video_mandelbrot_generator::video_mandelbrot_generator(sc_module_name name) : sc_module(name), mVcdFile(0) {
    video_mandelbrot_generator_cmd_s_axi_U = new video_mandelbrot_generator_cmd_s_axi<C_S_AXI_CMD_ADDR_WIDTH,C_S_AXI_CMD_DATA_WIDTH>("video_mandelbrot_generator_cmd_s_axi_U");
    video_mandelbrot_generator_cmd_s_axi_U->AWVALID(s_axi_cmd_AWVALID);
    video_mandelbrot_generator_cmd_s_axi_U->AWREADY(s_axi_cmd_AWREADY);
    video_mandelbrot_generator_cmd_s_axi_U->AWADDR(s_axi_cmd_AWADDR);
    video_mandelbrot_generator_cmd_s_axi_U->WVALID(s_axi_cmd_WVALID);
    video_mandelbrot_generator_cmd_s_axi_U->WREADY(s_axi_cmd_WREADY);
    video_mandelbrot_generator_cmd_s_axi_U->WDATA(s_axi_cmd_WDATA);
    video_mandelbrot_generator_cmd_s_axi_U->WSTRB(s_axi_cmd_WSTRB);
    video_mandelbrot_generator_cmd_s_axi_U->ARVALID(s_axi_cmd_ARVALID);
    video_mandelbrot_generator_cmd_s_axi_U->ARREADY(s_axi_cmd_ARREADY);
    video_mandelbrot_generator_cmd_s_axi_U->ARADDR(s_axi_cmd_ARADDR);
    video_mandelbrot_generator_cmd_s_axi_U->RVALID(s_axi_cmd_RVALID);
    video_mandelbrot_generator_cmd_s_axi_U->RREADY(s_axi_cmd_RREADY);
    video_mandelbrot_generator_cmd_s_axi_U->RDATA(s_axi_cmd_RDATA);
    video_mandelbrot_generator_cmd_s_axi_U->RRESP(s_axi_cmd_RRESP);
    video_mandelbrot_generator_cmd_s_axi_U->BVALID(s_axi_cmd_BVALID);
    video_mandelbrot_generator_cmd_s_axi_U->BREADY(s_axi_cmd_BREADY);
    video_mandelbrot_generator_cmd_s_axi_U->BRESP(s_axi_cmd_BRESP);
    video_mandelbrot_generator_cmd_s_axi_U->ACLK(ap_clk);
    video_mandelbrot_generator_cmd_s_axi_U->ARESET(ap_rst_n_inv);
    video_mandelbrot_generator_cmd_s_axi_U->ACLK_EN(ap_var_for_const0);
    video_mandelbrot_generator_cmd_s_axi_U->ap_start(ap_start);
    video_mandelbrot_generator_cmd_s_axi_U->interrupt(interrupt);
    video_mandelbrot_generator_cmd_s_axi_U->ap_ready(ap_ready);
    video_mandelbrot_generator_cmd_s_axi_U->ap_done(ap_done);
    video_mandelbrot_generator_cmd_s_axi_U->ap_idle(ap_idle);
    video_mandelbrot_generator_cmd_s_axi_U->moveX(moveX);
    video_mandelbrot_generator_cmd_s_axi_U->moveY(moveY);
    video_mandelbrot_generator_cmd_s_axi_U->zoom(zoom);
    video_mandelbrot_generator_faddfsub_32ns_32ns_32_5_full_dsp_1_U1 = new video_mandelbrot_generator_faddfsub_32ns_32ns_32_5_full_dsp_1<1,5,32,32,32>("video_mandelbrot_generator_faddfsub_32ns_32ns_32_5_full_dsp_1_U1");
    video_mandelbrot_generator_faddfsub_32ns_32ns_32_5_full_dsp_1_U1->clk(ap_clk);
    video_mandelbrot_generator_faddfsub_32ns_32ns_32_5_full_dsp_1_U1->reset(ap_rst_n_inv);
    video_mandelbrot_generator_faddfsub_32ns_32ns_32_5_full_dsp_1_U1->din0(grp_fu_225_p0);
    video_mandelbrot_generator_faddfsub_32ns_32ns_32_5_full_dsp_1_U1->din1(grp_fu_225_p1);
    video_mandelbrot_generator_faddfsub_32ns_32ns_32_5_full_dsp_1_U1->opcode(grp_fu_225_opcode);
    video_mandelbrot_generator_faddfsub_32ns_32ns_32_5_full_dsp_1_U1->ce(grp_fu_225_ce);
    video_mandelbrot_generator_faddfsub_32ns_32ns_32_5_full_dsp_1_U1->dout(grp_fu_225_p2);
    video_mandelbrot_generator_fsub_32ns_32ns_32_5_full_dsp_1_U2 = new video_mandelbrot_generator_fsub_32ns_32ns_32_5_full_dsp_1<1,5,32,32,32>("video_mandelbrot_generator_fsub_32ns_32ns_32_5_full_dsp_1_U2");
    video_mandelbrot_generator_fsub_32ns_32ns_32_5_full_dsp_1_U2->clk(ap_clk);
    video_mandelbrot_generator_fsub_32ns_32ns_32_5_full_dsp_1_U2->reset(ap_rst_n_inv);
    video_mandelbrot_generator_fsub_32ns_32ns_32_5_full_dsp_1_U2->din0(grp_fu_235_p0);
    video_mandelbrot_generator_fsub_32ns_32ns_32_5_full_dsp_1_U2->din1(grp_fu_235_p1);
    video_mandelbrot_generator_fsub_32ns_32ns_32_5_full_dsp_1_U2->ce(grp_fu_235_ce);
    video_mandelbrot_generator_fsub_32ns_32ns_32_5_full_dsp_1_U2->dout(grp_fu_235_p2);
    video_mandelbrot_generator_fmul_32ns_32ns_32_4_max_dsp_1_U3 = new video_mandelbrot_generator_fmul_32ns_32ns_32_4_max_dsp_1<1,4,32,32,32>("video_mandelbrot_generator_fmul_32ns_32ns_32_4_max_dsp_1_U3");
    video_mandelbrot_generator_fmul_32ns_32ns_32_4_max_dsp_1_U3->clk(ap_clk);
    video_mandelbrot_generator_fmul_32ns_32ns_32_4_max_dsp_1_U3->reset(ap_rst_n_inv);
    video_mandelbrot_generator_fmul_32ns_32ns_32_4_max_dsp_1_U3->din0(grp_fu_242_p0);
    video_mandelbrot_generator_fmul_32ns_32ns_32_4_max_dsp_1_U3->din1(grp_fu_242_p1);
    video_mandelbrot_generator_fmul_32ns_32ns_32_4_max_dsp_1_U3->ce(ap_var_for_const0);
    video_mandelbrot_generator_fmul_32ns_32ns_32_4_max_dsp_1_U3->dout(grp_fu_242_p2);
    video_mandelbrot_generator_fmul_32ns_32ns_32_4_max_dsp_1_U4 = new video_mandelbrot_generator_fmul_32ns_32ns_32_4_max_dsp_1<1,4,32,32,32>("video_mandelbrot_generator_fmul_32ns_32ns_32_4_max_dsp_1_U4");
    video_mandelbrot_generator_fmul_32ns_32ns_32_4_max_dsp_1_U4->clk(ap_clk);
    video_mandelbrot_generator_fmul_32ns_32ns_32_4_max_dsp_1_U4->reset(ap_rst_n_inv);
    video_mandelbrot_generator_fmul_32ns_32ns_32_4_max_dsp_1_U4->din0(y_reg_493);
    video_mandelbrot_generator_fmul_32ns_32ns_32_4_max_dsp_1_U4->din1(y_reg_493);
    video_mandelbrot_generator_fmul_32ns_32ns_32_4_max_dsp_1_U4->ce(ap_var_for_const0);
    video_mandelbrot_generator_fmul_32ns_32ns_32_4_max_dsp_1_U4->dout(grp_fu_249_p2);
    video_mandelbrot_generator_uitofp_32ns_32_6_1_U5 = new video_mandelbrot_generator_uitofp_32ns_32_6_1<1,6,32,32>("video_mandelbrot_generator_uitofp_32ns_32_6_1_U5");
    video_mandelbrot_generator_uitofp_32ns_32_6_1_U5->clk(ap_clk);
    video_mandelbrot_generator_uitofp_32ns_32_6_1_U5->reset(ap_rst_n_inv);
    video_mandelbrot_generator_uitofp_32ns_32_6_1_U5->din0(grp_fu_253_p0);
    video_mandelbrot_generator_uitofp_32ns_32_6_1_U5->ce(grp_fu_253_ce);
    video_mandelbrot_generator_uitofp_32ns_32_6_1_U5->dout(grp_fu_253_p1);
    video_mandelbrot_generator_fcmp_32ns_32ns_1_2_1_U6 = new video_mandelbrot_generator_fcmp_32ns_32ns_1_2_1<1,2,32,32,1>("video_mandelbrot_generator_fcmp_32ns_32ns_1_2_1_U6");
    video_mandelbrot_generator_fcmp_32ns_32ns_1_2_1_U6->clk(ap_clk);
    video_mandelbrot_generator_fcmp_32ns_32ns_1_2_1_U6->reset(ap_rst_n_inv);
    video_mandelbrot_generator_fcmp_32ns_32ns_1_2_1_U6->din0(reg_284);
    video_mandelbrot_generator_fcmp_32ns_32ns_1_2_1_U6->din1(ap_var_for_const1);
    video_mandelbrot_generator_fcmp_32ns_32ns_1_2_1_U6->ce(grp_fu_256_ce);
    video_mandelbrot_generator_fcmp_32ns_32ns_1_2_1_U6->opcode(ap_var_for_const2);
    video_mandelbrot_generator_fcmp_32ns_32ns_1_2_1_U6->dout(grp_fu_256_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_VIDEO_OUT_V_data_V_1_ack_in);
    sensitive << ( VIDEO_OUT_V_data_V_1_state );

    SC_METHOD(thread_VIDEO_OUT_V_data_V_1_ack_out);
    sensitive << ( m_axis_video_TREADY );

    SC_METHOD(thread_VIDEO_OUT_V_data_V_1_data_out);
    sensitive << ( VIDEO_OUT_V_data_V_1_payload_A );
    sensitive << ( VIDEO_OUT_V_data_V_1_payload_B );
    sensitive << ( VIDEO_OUT_V_data_V_1_sel );

    SC_METHOD(thread_VIDEO_OUT_V_data_V_1_load_A);
    sensitive << ( VIDEO_OUT_V_data_V_1_sel_wr );
    sensitive << ( VIDEO_OUT_V_data_V_1_state_cmp_full );

    SC_METHOD(thread_VIDEO_OUT_V_data_V_1_load_B);
    sensitive << ( VIDEO_OUT_V_data_V_1_sel_wr );
    sensitive << ( VIDEO_OUT_V_data_V_1_state_cmp_full );

    SC_METHOD(thread_VIDEO_OUT_V_data_V_1_sel);
    sensitive << ( VIDEO_OUT_V_data_V_1_sel_rd );

    SC_METHOD(thread_VIDEO_OUT_V_data_V_1_state_cmp_full);
    sensitive << ( VIDEO_OUT_V_data_V_1_state );

    SC_METHOD(thread_VIDEO_OUT_V_data_V_1_vld_in);
    sensitive << ( ap_CS_fsm_state60 );
    sensitive << ( and_ln51_fu_396_p2 );
    sensitive << ( ap_block_state60_io );

    SC_METHOD(thread_VIDEO_OUT_V_data_V_1_vld_out);
    sensitive << ( VIDEO_OUT_V_data_V_1_state );

    SC_METHOD(thread_VIDEO_OUT_V_dest_V_1_ack_out);
    sensitive << ( m_axis_video_TREADY );

    SC_METHOD(thread_VIDEO_OUT_V_dest_V_1_data_out);
    sensitive << ( VIDEO_OUT_V_dest_V_1_sel );

    SC_METHOD(thread_VIDEO_OUT_V_dest_V_1_sel);
    sensitive << ( VIDEO_OUT_V_dest_V_1_sel_rd );

    SC_METHOD(thread_VIDEO_OUT_V_dest_V_1_vld_in);
    sensitive << ( ap_CS_fsm_state60 );
    sensitive << ( and_ln51_fu_396_p2 );
    sensitive << ( ap_block_state60_io );

    SC_METHOD(thread_VIDEO_OUT_V_dest_V_1_vld_out);
    sensitive << ( VIDEO_OUT_V_dest_V_1_state );

    SC_METHOD(thread_VIDEO_OUT_V_id_V_1_ack_out);
    sensitive << ( m_axis_video_TREADY );

    SC_METHOD(thread_VIDEO_OUT_V_id_V_1_data_out);
    sensitive << ( VIDEO_OUT_V_id_V_1_sel );

    SC_METHOD(thread_VIDEO_OUT_V_id_V_1_sel);
    sensitive << ( VIDEO_OUT_V_id_V_1_sel_rd );

    SC_METHOD(thread_VIDEO_OUT_V_id_V_1_vld_in);
    sensitive << ( ap_CS_fsm_state60 );
    sensitive << ( and_ln51_fu_396_p2 );
    sensitive << ( ap_block_state60_io );

    SC_METHOD(thread_VIDEO_OUT_V_id_V_1_vld_out);
    sensitive << ( VIDEO_OUT_V_id_V_1_state );

    SC_METHOD(thread_VIDEO_OUT_V_keep_V_1_ack_out);
    sensitive << ( m_axis_video_TREADY );

    SC_METHOD(thread_VIDEO_OUT_V_keep_V_1_data_out);
    sensitive << ( VIDEO_OUT_V_keep_V_1_sel );

    SC_METHOD(thread_VIDEO_OUT_V_keep_V_1_sel);
    sensitive << ( VIDEO_OUT_V_keep_V_1_sel_rd );

    SC_METHOD(thread_VIDEO_OUT_V_keep_V_1_vld_in);
    sensitive << ( ap_CS_fsm_state60 );
    sensitive << ( and_ln51_fu_396_p2 );
    sensitive << ( ap_block_state60_io );

    SC_METHOD(thread_VIDEO_OUT_V_keep_V_1_vld_out);
    sensitive << ( VIDEO_OUT_V_keep_V_1_state );

    SC_METHOD(thread_VIDEO_OUT_V_last_V_1_ack_in);
    sensitive << ( VIDEO_OUT_V_last_V_1_state );

    SC_METHOD(thread_VIDEO_OUT_V_last_V_1_ack_out);
    sensitive << ( m_axis_video_TREADY );

    SC_METHOD(thread_VIDEO_OUT_V_last_V_1_data_out);
    sensitive << ( VIDEO_OUT_V_last_V_1_payload_A );
    sensitive << ( VIDEO_OUT_V_last_V_1_payload_B );
    sensitive << ( VIDEO_OUT_V_last_V_1_sel );

    SC_METHOD(thread_VIDEO_OUT_V_last_V_1_load_A);
    sensitive << ( VIDEO_OUT_V_last_V_1_sel_wr );
    sensitive << ( VIDEO_OUT_V_last_V_1_state_cmp_full );

    SC_METHOD(thread_VIDEO_OUT_V_last_V_1_load_B);
    sensitive << ( VIDEO_OUT_V_last_V_1_sel_wr );
    sensitive << ( VIDEO_OUT_V_last_V_1_state_cmp_full );

    SC_METHOD(thread_VIDEO_OUT_V_last_V_1_sel);
    sensitive << ( VIDEO_OUT_V_last_V_1_sel_rd );

    SC_METHOD(thread_VIDEO_OUT_V_last_V_1_state_cmp_full);
    sensitive << ( VIDEO_OUT_V_last_V_1_state );

    SC_METHOD(thread_VIDEO_OUT_V_last_V_1_vld_in);
    sensitive << ( ap_CS_fsm_state60 );
    sensitive << ( and_ln51_fu_396_p2 );
    sensitive << ( ap_block_state60_io );

    SC_METHOD(thread_VIDEO_OUT_V_last_V_1_vld_out);
    sensitive << ( VIDEO_OUT_V_last_V_1_state );

    SC_METHOD(thread_VIDEO_OUT_V_strb_V_1_ack_out);
    sensitive << ( m_axis_video_TREADY );

    SC_METHOD(thread_VIDEO_OUT_V_strb_V_1_data_out);
    sensitive << ( VIDEO_OUT_V_strb_V_1_sel );

    SC_METHOD(thread_VIDEO_OUT_V_strb_V_1_sel);
    sensitive << ( VIDEO_OUT_V_strb_V_1_sel_rd );

    SC_METHOD(thread_VIDEO_OUT_V_strb_V_1_vld_in);
    sensitive << ( ap_CS_fsm_state60 );
    sensitive << ( and_ln51_fu_396_p2 );
    sensitive << ( ap_block_state60_io );

    SC_METHOD(thread_VIDEO_OUT_V_strb_V_1_vld_out);
    sensitive << ( VIDEO_OUT_V_strb_V_1_state );

    SC_METHOD(thread_VIDEO_OUT_V_user_V_1_ack_in);
    sensitive << ( VIDEO_OUT_V_user_V_1_state );

    SC_METHOD(thread_VIDEO_OUT_V_user_V_1_ack_out);
    sensitive << ( m_axis_video_TREADY );

    SC_METHOD(thread_VIDEO_OUT_V_user_V_1_data_out);
    sensitive << ( VIDEO_OUT_V_user_V_1_payload_A );
    sensitive << ( VIDEO_OUT_V_user_V_1_payload_B );
    sensitive << ( VIDEO_OUT_V_user_V_1_sel );

    SC_METHOD(thread_VIDEO_OUT_V_user_V_1_load_A);
    sensitive << ( VIDEO_OUT_V_user_V_1_sel_wr );
    sensitive << ( VIDEO_OUT_V_user_V_1_state_cmp_full );

    SC_METHOD(thread_VIDEO_OUT_V_user_V_1_load_B);
    sensitive << ( VIDEO_OUT_V_user_V_1_sel_wr );
    sensitive << ( VIDEO_OUT_V_user_V_1_state_cmp_full );

    SC_METHOD(thread_VIDEO_OUT_V_user_V_1_sel);
    sensitive << ( VIDEO_OUT_V_user_V_1_sel_rd );

    SC_METHOD(thread_VIDEO_OUT_V_user_V_1_state_cmp_full);
    sensitive << ( VIDEO_OUT_V_user_V_1_state );

    SC_METHOD(thread_VIDEO_OUT_V_user_V_1_vld_in);
    sensitive << ( ap_CS_fsm_state60 );
    sensitive << ( and_ln51_fu_396_p2 );
    sensitive << ( ap_block_state60_io );

    SC_METHOD(thread_VIDEO_OUT_V_user_V_1_vld_out);
    sensitive << ( VIDEO_OUT_V_user_V_1_state );

    SC_METHOD(thread_and_ln51_1_fu_384_p2);
    sensitive << ( or_ln51_fu_380_p2 );
    sensitive << ( grp_fu_256_p2 );

    SC_METHOD(thread_and_ln51_fu_396_p2);
    sensitive << ( and_ln51_1_fu_384_p2 );
    sensitive << ( icmp_ln51_fu_390_p2 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state25);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state26);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state27);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state28);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state29);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state30);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state31);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state32);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state36);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state37);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state38);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state39);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state40);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state41);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state42);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state43);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state44);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state45);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state46);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state47);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state48);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state49);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state53);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state54);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state58);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state59);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state60);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state61);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state62);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state63);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state64);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state65);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state66);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state67);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state68);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state69);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state70);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state74);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state75);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state78);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state79);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state80);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state81);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state82);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state83);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state84);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state2);
    sensitive << ( m_axis_video_TREADY );
    sensitive << ( VIDEO_OUT_V_data_V_1_state );
    sensitive << ( VIDEO_OUT_V_keep_V_1_state );
    sensitive << ( VIDEO_OUT_V_strb_V_1_state );
    sensitive << ( VIDEO_OUT_V_user_V_1_state );
    sensitive << ( VIDEO_OUT_V_last_V_1_state );
    sensitive << ( VIDEO_OUT_V_id_V_1_state );
    sensitive << ( VIDEO_OUT_V_dest_V_1_state );

    SC_METHOD(thread_ap_block_state60_io);
    sensitive << ( VIDEO_OUT_V_data_V_1_ack_in );
    sensitive << ( and_ln51_fu_396_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( m_axis_video_TREADY );
    sensitive << ( VIDEO_OUT_V_data_V_1_state );
    sensitive << ( VIDEO_OUT_V_keep_V_1_state );
    sensitive << ( VIDEO_OUT_V_strb_V_1_state );
    sensitive << ( VIDEO_OUT_V_user_V_1_state );
    sensitive << ( VIDEO_OUT_V_last_V_1_state );
    sensitive << ( VIDEO_OUT_V_id_V_1_state );
    sensitive << ( VIDEO_OUT_V_dest_V_1_state );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln24_fu_298_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_phi_mux_isquare_0_phi_fu_194_p4);
    sensitive << ( isquare_0_reg_190 );

    SC_METHOD(thread_ap_phi_mux_rsquare_0_phi_fu_182_p4);
    sensitive << ( rsquare_0_reg_178 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( m_axis_video_TREADY );
    sensitive << ( VIDEO_OUT_V_data_V_1_state );
    sensitive << ( VIDEO_OUT_V_keep_V_1_state );
    sensitive << ( VIDEO_OUT_V_strb_V_1_state );
    sensitive << ( VIDEO_OUT_V_user_V_1_state );
    sensitive << ( VIDEO_OUT_V_last_V_1_state );
    sensitive << ( VIDEO_OUT_V_id_V_1_state );
    sensitive << ( VIDEO_OUT_V_dest_V_1_state );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln24_fu_298_p2 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_bitcast_ln51_fu_350_p1);
    sensitive << ( reg_284 );

    SC_METHOD(thread_col_fu_327_p2);
    sensitive << ( col_0_reg_167 );

    SC_METHOD(thread_grp_fu_225_ce);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state60 );
    sensitive << ( ap_CS_fsm_state84 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state44 );
    sensitive << ( ap_CS_fsm_state48 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state59 );
    sensitive << ( ap_block_state60_io );
    sensitive << ( ap_CS_fsm_state83 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state80 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state81 );
    sensitive << ( ap_CS_fsm_state82 );

    SC_METHOD(thread_grp_fu_225_opcode);
    sensitive << ( ap_CS_fsm_state60 );
    sensitive << ( and_ln51_fu_396_p2 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state49 );
    sensitive << ( ap_CS_fsm_state54 );
    sensitive << ( ap_CS_fsm_state65 );
    sensitive << ( ap_CS_fsm_state70 );
    sensitive << ( ap_CS_fsm_state75 );

    SC_METHOD(thread_grp_fu_225_p0);
    sensitive << ( ap_CS_fsm_state60 );
    sensitive << ( reg_261 );
    sensitive << ( reg_272 );
    sensitive << ( reg_284 );
    sensitive << ( reg_292 );
    sensitive << ( ap_phi_mux_rsquare_0_phi_fu_182_p4 );
    sensitive << ( rsquare_0_reg_178 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state49 );
    sensitive << ( ap_CS_fsm_state54 );
    sensitive << ( ap_CS_fsm_state65 );
    sensitive << ( ap_CS_fsm_state70 );
    sensitive << ( ap_CS_fsm_state75 );

    SC_METHOD(thread_grp_fu_225_p1);
    sensitive << ( ap_CS_fsm_state60 );
    sensitive << ( reg_266 );
    sensitive << ( reg_278 );
    sensitive << ( moveY_read_reg_424 );
    sensitive << ( moveX_read_reg_429 );
    sensitive << ( y_reg_493 );
    sensitive << ( ap_phi_mux_isquare_0_phi_fu_194_p4 );
    sensitive << ( isquare_0_reg_190 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state49 );
    sensitive << ( ap_CS_fsm_state54 );
    sensitive << ( ap_CS_fsm_state65 );
    sensitive << ( ap_CS_fsm_state70 );
    sensitive << ( ap_CS_fsm_state75 );

    SC_METHOD(thread_grp_fu_235_ce);
    sensitive << ( ap_CS_fsm_state60 );
    sensitive << ( ap_CS_fsm_state64 );
    sensitive << ( ap_CS_fsm_state69 );
    sensitive << ( ap_block_state60_io );
    sensitive << ( ap_CS_fsm_state65 );
    sensitive << ( ap_CS_fsm_state61 );
    sensitive << ( ap_CS_fsm_state62 );
    sensitive << ( ap_CS_fsm_state63 );
    sensitive << ( ap_CS_fsm_state66 );
    sensitive << ( ap_CS_fsm_state67 );
    sensitive << ( ap_CS_fsm_state68 );

    SC_METHOD(thread_grp_fu_235_p0);
    sensitive << ( ap_CS_fsm_state60 );
    sensitive << ( reg_292 );
    sensitive << ( zsquare_0_reg_202 );
    sensitive << ( ap_CS_fsm_state65 );

    SC_METHOD(thread_grp_fu_235_p1);
    sensitive << ( ap_CS_fsm_state60 );
    sensitive << ( rsquare_0_reg_178 );
    sensitive << ( isquare_0_reg_190 );
    sensitive << ( ap_CS_fsm_state65 );

    SC_METHOD(thread_grp_fu_242_p0);
    sensitive << ( reg_266 );
    sensitive << ( reg_272 );
    sensitive << ( reg_278 );
    sensitive << ( reg_284 );
    sensitive << ( ap_CS_fsm_state75 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state80 );

    SC_METHOD(thread_grp_fu_242_p1);
    sensitive << ( reg_284 );
    sensitive << ( zoom_read_reg_419 );
    sensitive << ( ap_CS_fsm_state75 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state80 );

    SC_METHOD(thread_grp_fu_253_ce);
    sensitive << ( m_axis_video_TREADY );
    sensitive << ( VIDEO_OUT_V_data_V_1_state );
    sensitive << ( VIDEO_OUT_V_keep_V_1_state );
    sensitive << ( VIDEO_OUT_V_strb_V_1_state );
    sensitive << ( VIDEO_OUT_V_user_V_1_state );
    sensitive << ( VIDEO_OUT_V_last_V_1_state );
    sensitive << ( VIDEO_OUT_V_id_V_1_state );
    sensitive << ( VIDEO_OUT_V_dest_V_1_state );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state30 );

    SC_METHOD(thread_grp_fu_253_p0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( zext_ln44_fu_310_p1 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( zext_ln40_fu_345_p1 );

    SC_METHOD(thread_grp_fu_256_ce);
    sensitive << ( ap_CS_fsm_state60 );
    sensitive << ( ap_CS_fsm_state59 );
    sensitive << ( ap_block_state60_io );

    SC_METHOD(thread_icmp_ln24_fu_298_p2);
    sensitive << ( m_axis_video_TREADY );
    sensitive << ( VIDEO_OUT_V_data_V_1_state );
    sensitive << ( VIDEO_OUT_V_keep_V_1_state );
    sensitive << ( VIDEO_OUT_V_strb_V_1_state );
    sensitive << ( VIDEO_OUT_V_user_V_1_state );
    sensitive << ( VIDEO_OUT_V_last_V_1_state );
    sensitive << ( VIDEO_OUT_V_id_V_1_state );
    sensitive << ( VIDEO_OUT_V_dest_V_1_state );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( row_0_reg_155 );

    SC_METHOD(thread_icmp_ln26_fu_321_p2);
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( col_0_reg_167 );

    SC_METHOD(thread_icmp_ln51_1_fu_368_p2);
    sensitive << ( ap_CS_fsm_state59 );
    sensitive << ( tmp_1_fu_354_p4 );

    SC_METHOD(thread_icmp_ln51_2_fu_374_p2);
    sensitive << ( ap_CS_fsm_state59 );
    sensitive << ( trunc_ln51_fu_364_p1 );

    SC_METHOD(thread_icmp_ln51_fu_390_p2);
    sensitive << ( ap_CS_fsm_state60 );
    sensitive << ( ap_block_state60_io );
    sensitive << ( pixel_R_reg_214 );

    SC_METHOD(thread_iter_fu_402_p2);
    sensitive << ( pixel_R_reg_214 );

    SC_METHOD(thread_m_axis_video_TDATA);
    sensitive << ( VIDEO_OUT_V_data_V_1_data_out );

    SC_METHOD(thread_m_axis_video_TDATA_blk_n);
    sensitive << ( VIDEO_OUT_V_data_V_1_state );
    sensitive << ( ap_CS_fsm_state60 );
    sensitive << ( and_ln51_fu_396_p2 );
    sensitive << ( ap_CS_fsm_state84 );

    SC_METHOD(thread_m_axis_video_TDEST);
    sensitive << ( VIDEO_OUT_V_dest_V_1_data_out );

    SC_METHOD(thread_m_axis_video_TID);
    sensitive << ( VIDEO_OUT_V_id_V_1_data_out );

    SC_METHOD(thread_m_axis_video_TKEEP);
    sensitive << ( VIDEO_OUT_V_keep_V_1_data_out );

    SC_METHOD(thread_m_axis_video_TLAST);
    sensitive << ( VIDEO_OUT_V_last_V_1_data_out );

    SC_METHOD(thread_m_axis_video_TSTRB);
    sensitive << ( VIDEO_OUT_V_strb_V_1_data_out );

    SC_METHOD(thread_m_axis_video_TUSER);
    sensitive << ( VIDEO_OUT_V_user_V_1_data_out );

    SC_METHOD(thread_m_axis_video_TVALID);
    sensitive << ( VIDEO_OUT_V_dest_V_1_state );

    SC_METHOD(thread_or_ln29_fu_333_p2);
    sensitive << ( row_0_reg_155 );
    sensitive << ( col_0_reg_167 );

    SC_METHOD(thread_or_ln51_fu_380_p2);
    sensitive << ( icmp_ln51_1_reg_470 );
    sensitive << ( icmp_ln51_2_reg_475 );

    SC_METHOD(thread_pixel_out_V_fu_408_p4);
    sensitive << ( pixel_R_reg_214 );

    SC_METHOD(thread_row_fu_304_p2);
    sensitive << ( row_0_reg_155 );

    SC_METHOD(thread_tmp_1_fu_354_p4);
    sensitive << ( bitcast_ln51_fu_350_p1 );

    SC_METHOD(thread_tmp_last_V_fu_315_p2);
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( row_0_reg_155 );

    SC_METHOD(thread_tmp_user_V_fu_339_p2);
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( icmp_ln26_fu_321_p2 );
    sensitive << ( or_ln29_fu_333_p2 );

    SC_METHOD(thread_trunc_ln51_fu_364_p1);
    sensitive << ( bitcast_ln51_fu_350_p1 );

    SC_METHOD(thread_zext_ln40_fu_345_p1);
    sensitive << ( col_0_reg_167 );

    SC_METHOD(thread_zext_ln44_fu_310_p1);
    sensitive << ( row_0_reg_155 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( m_axis_video_TREADY );
    sensitive << ( VIDEO_OUT_V_data_V_1_ack_in );
    sensitive << ( VIDEO_OUT_V_data_V_1_state );
    sensitive << ( VIDEO_OUT_V_keep_V_1_state );
    sensitive << ( VIDEO_OUT_V_strb_V_1_state );
    sensitive << ( VIDEO_OUT_V_user_V_1_state );
    sensitive << ( VIDEO_OUT_V_last_V_1_state );
    sensitive << ( VIDEO_OUT_V_id_V_1_state );
    sensitive << ( VIDEO_OUT_V_dest_V_1_state );
    sensitive << ( ap_CS_fsm_state60 );
    sensitive << ( and_ln51_fu_396_p2 );
    sensitive << ( ap_CS_fsm_state84 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln24_fu_298_p2 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( icmp_ln26_fu_321_p2 );
    sensitive << ( ap_block_state60_io );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const2);

    ap_CS_fsm = "000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    VIDEO_OUT_V_data_V_1_sel_rd = SC_LOGIC_0;
    VIDEO_OUT_V_data_V_1_sel_wr = SC_LOGIC_0;
    VIDEO_OUT_V_data_V_1_state = "00";
    VIDEO_OUT_V_keep_V_1_sel_rd = SC_LOGIC_0;
    VIDEO_OUT_V_keep_V_1_state = "00";
    VIDEO_OUT_V_strb_V_1_sel_rd = SC_LOGIC_0;
    VIDEO_OUT_V_strb_V_1_state = "00";
    VIDEO_OUT_V_user_V_1_sel_rd = SC_LOGIC_0;
    VIDEO_OUT_V_user_V_1_sel_wr = SC_LOGIC_0;
    VIDEO_OUT_V_user_V_1_state = "00";
    VIDEO_OUT_V_last_V_1_sel_rd = SC_LOGIC_0;
    VIDEO_OUT_V_last_V_1_sel_wr = SC_LOGIC_0;
    VIDEO_OUT_V_last_V_1_state = "00";
    VIDEO_OUT_V_id_V_1_sel_rd = SC_LOGIC_0;
    VIDEO_OUT_V_id_V_1_state = "00";
    VIDEO_OUT_V_dest_V_1_sel_rd = SC_LOGIC_0;
    VIDEO_OUT_V_dest_V_1_state = "00";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "video_mandelbrot_generator_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, m_axis_video_TDATA, "(port)m_axis_video_TDATA");
    sc_trace(mVcdFile, m_axis_video_TVALID, "(port)m_axis_video_TVALID");
    sc_trace(mVcdFile, m_axis_video_TREADY, "(port)m_axis_video_TREADY");
    sc_trace(mVcdFile, m_axis_video_TKEEP, "(port)m_axis_video_TKEEP");
    sc_trace(mVcdFile, m_axis_video_TSTRB, "(port)m_axis_video_TSTRB");
    sc_trace(mVcdFile, m_axis_video_TUSER, "(port)m_axis_video_TUSER");
    sc_trace(mVcdFile, m_axis_video_TLAST, "(port)m_axis_video_TLAST");
    sc_trace(mVcdFile, m_axis_video_TID, "(port)m_axis_video_TID");
    sc_trace(mVcdFile, m_axis_video_TDEST, "(port)m_axis_video_TDEST");
    sc_trace(mVcdFile, s_axi_cmd_AWVALID, "(port)s_axi_cmd_AWVALID");
    sc_trace(mVcdFile, s_axi_cmd_AWREADY, "(port)s_axi_cmd_AWREADY");
    sc_trace(mVcdFile, s_axi_cmd_AWADDR, "(port)s_axi_cmd_AWADDR");
    sc_trace(mVcdFile, s_axi_cmd_WVALID, "(port)s_axi_cmd_WVALID");
    sc_trace(mVcdFile, s_axi_cmd_WREADY, "(port)s_axi_cmd_WREADY");
    sc_trace(mVcdFile, s_axi_cmd_WDATA, "(port)s_axi_cmd_WDATA");
    sc_trace(mVcdFile, s_axi_cmd_WSTRB, "(port)s_axi_cmd_WSTRB");
    sc_trace(mVcdFile, s_axi_cmd_ARVALID, "(port)s_axi_cmd_ARVALID");
    sc_trace(mVcdFile, s_axi_cmd_ARREADY, "(port)s_axi_cmd_ARREADY");
    sc_trace(mVcdFile, s_axi_cmd_ARADDR, "(port)s_axi_cmd_ARADDR");
    sc_trace(mVcdFile, s_axi_cmd_RVALID, "(port)s_axi_cmd_RVALID");
    sc_trace(mVcdFile, s_axi_cmd_RREADY, "(port)s_axi_cmd_RREADY");
    sc_trace(mVcdFile, s_axi_cmd_RDATA, "(port)s_axi_cmd_RDATA");
    sc_trace(mVcdFile, s_axi_cmd_RRESP, "(port)s_axi_cmd_RRESP");
    sc_trace(mVcdFile, s_axi_cmd_BVALID, "(port)s_axi_cmd_BVALID");
    sc_trace(mVcdFile, s_axi_cmd_BREADY, "(port)s_axi_cmd_BREADY");
    sc_trace(mVcdFile, s_axi_cmd_BRESP, "(port)s_axi_cmd_BRESP");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, VIDEO_OUT_V_data_V_1_data_out, "VIDEO_OUT_V_data_V_1_data_out");
    sc_trace(mVcdFile, VIDEO_OUT_V_data_V_1_vld_in, "VIDEO_OUT_V_data_V_1_vld_in");
    sc_trace(mVcdFile, VIDEO_OUT_V_data_V_1_vld_out, "VIDEO_OUT_V_data_V_1_vld_out");
    sc_trace(mVcdFile, VIDEO_OUT_V_data_V_1_ack_in, "VIDEO_OUT_V_data_V_1_ack_in");
    sc_trace(mVcdFile, VIDEO_OUT_V_data_V_1_ack_out, "VIDEO_OUT_V_data_V_1_ack_out");
    sc_trace(mVcdFile, VIDEO_OUT_V_data_V_1_payload_A, "VIDEO_OUT_V_data_V_1_payload_A");
    sc_trace(mVcdFile, VIDEO_OUT_V_data_V_1_payload_B, "VIDEO_OUT_V_data_V_1_payload_B");
    sc_trace(mVcdFile, VIDEO_OUT_V_data_V_1_sel_rd, "VIDEO_OUT_V_data_V_1_sel_rd");
    sc_trace(mVcdFile, VIDEO_OUT_V_data_V_1_sel_wr, "VIDEO_OUT_V_data_V_1_sel_wr");
    sc_trace(mVcdFile, VIDEO_OUT_V_data_V_1_sel, "VIDEO_OUT_V_data_V_1_sel");
    sc_trace(mVcdFile, VIDEO_OUT_V_data_V_1_load_A, "VIDEO_OUT_V_data_V_1_load_A");
    sc_trace(mVcdFile, VIDEO_OUT_V_data_V_1_load_B, "VIDEO_OUT_V_data_V_1_load_B");
    sc_trace(mVcdFile, VIDEO_OUT_V_data_V_1_state, "VIDEO_OUT_V_data_V_1_state");
    sc_trace(mVcdFile, VIDEO_OUT_V_data_V_1_state_cmp_full, "VIDEO_OUT_V_data_V_1_state_cmp_full");
    sc_trace(mVcdFile, VIDEO_OUT_V_keep_V_1_data_out, "VIDEO_OUT_V_keep_V_1_data_out");
    sc_trace(mVcdFile, VIDEO_OUT_V_keep_V_1_vld_in, "VIDEO_OUT_V_keep_V_1_vld_in");
    sc_trace(mVcdFile, VIDEO_OUT_V_keep_V_1_vld_out, "VIDEO_OUT_V_keep_V_1_vld_out");
    sc_trace(mVcdFile, VIDEO_OUT_V_keep_V_1_ack_out, "VIDEO_OUT_V_keep_V_1_ack_out");
    sc_trace(mVcdFile, VIDEO_OUT_V_keep_V_1_sel_rd, "VIDEO_OUT_V_keep_V_1_sel_rd");
    sc_trace(mVcdFile, VIDEO_OUT_V_keep_V_1_sel, "VIDEO_OUT_V_keep_V_1_sel");
    sc_trace(mVcdFile, VIDEO_OUT_V_keep_V_1_state, "VIDEO_OUT_V_keep_V_1_state");
    sc_trace(mVcdFile, VIDEO_OUT_V_strb_V_1_data_out, "VIDEO_OUT_V_strb_V_1_data_out");
    sc_trace(mVcdFile, VIDEO_OUT_V_strb_V_1_vld_in, "VIDEO_OUT_V_strb_V_1_vld_in");
    sc_trace(mVcdFile, VIDEO_OUT_V_strb_V_1_vld_out, "VIDEO_OUT_V_strb_V_1_vld_out");
    sc_trace(mVcdFile, VIDEO_OUT_V_strb_V_1_ack_out, "VIDEO_OUT_V_strb_V_1_ack_out");
    sc_trace(mVcdFile, VIDEO_OUT_V_strb_V_1_sel_rd, "VIDEO_OUT_V_strb_V_1_sel_rd");
    sc_trace(mVcdFile, VIDEO_OUT_V_strb_V_1_sel, "VIDEO_OUT_V_strb_V_1_sel");
    sc_trace(mVcdFile, VIDEO_OUT_V_strb_V_1_state, "VIDEO_OUT_V_strb_V_1_state");
    sc_trace(mVcdFile, VIDEO_OUT_V_user_V_1_data_out, "VIDEO_OUT_V_user_V_1_data_out");
    sc_trace(mVcdFile, VIDEO_OUT_V_user_V_1_vld_in, "VIDEO_OUT_V_user_V_1_vld_in");
    sc_trace(mVcdFile, VIDEO_OUT_V_user_V_1_vld_out, "VIDEO_OUT_V_user_V_1_vld_out");
    sc_trace(mVcdFile, VIDEO_OUT_V_user_V_1_ack_in, "VIDEO_OUT_V_user_V_1_ack_in");
    sc_trace(mVcdFile, VIDEO_OUT_V_user_V_1_ack_out, "VIDEO_OUT_V_user_V_1_ack_out");
    sc_trace(mVcdFile, VIDEO_OUT_V_user_V_1_payload_A, "VIDEO_OUT_V_user_V_1_payload_A");
    sc_trace(mVcdFile, VIDEO_OUT_V_user_V_1_payload_B, "VIDEO_OUT_V_user_V_1_payload_B");
    sc_trace(mVcdFile, VIDEO_OUT_V_user_V_1_sel_rd, "VIDEO_OUT_V_user_V_1_sel_rd");
    sc_trace(mVcdFile, VIDEO_OUT_V_user_V_1_sel_wr, "VIDEO_OUT_V_user_V_1_sel_wr");
    sc_trace(mVcdFile, VIDEO_OUT_V_user_V_1_sel, "VIDEO_OUT_V_user_V_1_sel");
    sc_trace(mVcdFile, VIDEO_OUT_V_user_V_1_load_A, "VIDEO_OUT_V_user_V_1_load_A");
    sc_trace(mVcdFile, VIDEO_OUT_V_user_V_1_load_B, "VIDEO_OUT_V_user_V_1_load_B");
    sc_trace(mVcdFile, VIDEO_OUT_V_user_V_1_state, "VIDEO_OUT_V_user_V_1_state");
    sc_trace(mVcdFile, VIDEO_OUT_V_user_V_1_state_cmp_full, "VIDEO_OUT_V_user_V_1_state_cmp_full");
    sc_trace(mVcdFile, VIDEO_OUT_V_last_V_1_data_out, "VIDEO_OUT_V_last_V_1_data_out");
    sc_trace(mVcdFile, VIDEO_OUT_V_last_V_1_vld_in, "VIDEO_OUT_V_last_V_1_vld_in");
    sc_trace(mVcdFile, VIDEO_OUT_V_last_V_1_vld_out, "VIDEO_OUT_V_last_V_1_vld_out");
    sc_trace(mVcdFile, VIDEO_OUT_V_last_V_1_ack_in, "VIDEO_OUT_V_last_V_1_ack_in");
    sc_trace(mVcdFile, VIDEO_OUT_V_last_V_1_ack_out, "VIDEO_OUT_V_last_V_1_ack_out");
    sc_trace(mVcdFile, VIDEO_OUT_V_last_V_1_payload_A, "VIDEO_OUT_V_last_V_1_payload_A");
    sc_trace(mVcdFile, VIDEO_OUT_V_last_V_1_payload_B, "VIDEO_OUT_V_last_V_1_payload_B");
    sc_trace(mVcdFile, VIDEO_OUT_V_last_V_1_sel_rd, "VIDEO_OUT_V_last_V_1_sel_rd");
    sc_trace(mVcdFile, VIDEO_OUT_V_last_V_1_sel_wr, "VIDEO_OUT_V_last_V_1_sel_wr");
    sc_trace(mVcdFile, VIDEO_OUT_V_last_V_1_sel, "VIDEO_OUT_V_last_V_1_sel");
    sc_trace(mVcdFile, VIDEO_OUT_V_last_V_1_load_A, "VIDEO_OUT_V_last_V_1_load_A");
    sc_trace(mVcdFile, VIDEO_OUT_V_last_V_1_load_B, "VIDEO_OUT_V_last_V_1_load_B");
    sc_trace(mVcdFile, VIDEO_OUT_V_last_V_1_state, "VIDEO_OUT_V_last_V_1_state");
    sc_trace(mVcdFile, VIDEO_OUT_V_last_V_1_state_cmp_full, "VIDEO_OUT_V_last_V_1_state_cmp_full");
    sc_trace(mVcdFile, VIDEO_OUT_V_id_V_1_data_out, "VIDEO_OUT_V_id_V_1_data_out");
    sc_trace(mVcdFile, VIDEO_OUT_V_id_V_1_vld_in, "VIDEO_OUT_V_id_V_1_vld_in");
    sc_trace(mVcdFile, VIDEO_OUT_V_id_V_1_vld_out, "VIDEO_OUT_V_id_V_1_vld_out");
    sc_trace(mVcdFile, VIDEO_OUT_V_id_V_1_ack_out, "VIDEO_OUT_V_id_V_1_ack_out");
    sc_trace(mVcdFile, VIDEO_OUT_V_id_V_1_sel_rd, "VIDEO_OUT_V_id_V_1_sel_rd");
    sc_trace(mVcdFile, VIDEO_OUT_V_id_V_1_sel, "VIDEO_OUT_V_id_V_1_sel");
    sc_trace(mVcdFile, VIDEO_OUT_V_id_V_1_state, "VIDEO_OUT_V_id_V_1_state");
    sc_trace(mVcdFile, VIDEO_OUT_V_dest_V_1_data_out, "VIDEO_OUT_V_dest_V_1_data_out");
    sc_trace(mVcdFile, VIDEO_OUT_V_dest_V_1_vld_in, "VIDEO_OUT_V_dest_V_1_vld_in");
    sc_trace(mVcdFile, VIDEO_OUT_V_dest_V_1_vld_out, "VIDEO_OUT_V_dest_V_1_vld_out");
    sc_trace(mVcdFile, VIDEO_OUT_V_dest_V_1_ack_out, "VIDEO_OUT_V_dest_V_1_ack_out");
    sc_trace(mVcdFile, VIDEO_OUT_V_dest_V_1_sel_rd, "VIDEO_OUT_V_dest_V_1_sel_rd");
    sc_trace(mVcdFile, VIDEO_OUT_V_dest_V_1_sel, "VIDEO_OUT_V_dest_V_1_sel");
    sc_trace(mVcdFile, VIDEO_OUT_V_dest_V_1_state, "VIDEO_OUT_V_dest_V_1_state");
    sc_trace(mVcdFile, moveX, "moveX");
    sc_trace(mVcdFile, moveY, "moveY");
    sc_trace(mVcdFile, zoom, "zoom");
    sc_trace(mVcdFile, m_axis_video_TDATA_blk_n, "m_axis_video_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state60, "ap_CS_fsm_state60");
    sc_trace(mVcdFile, and_ln51_fu_396_p2, "and_ln51_fu_396_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state84, "ap_CS_fsm_state84");
    sc_trace(mVcdFile, grp_fu_253_p1, "grp_fu_253_p1");
    sc_trace(mVcdFile, reg_261, "reg_261");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_CS_fsm_state31, "ap_CS_fsm_state31");
    sc_trace(mVcdFile, grp_fu_225_p2, "grp_fu_225_p2");
    sc_trace(mVcdFile, reg_266, "reg_266");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, ap_CS_fsm_state25, "ap_CS_fsm_state25");
    sc_trace(mVcdFile, grp_fu_242_p2, "grp_fu_242_p2");
    sc_trace(mVcdFile, reg_272, "reg_272");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, ap_CS_fsm_state40, "ap_CS_fsm_state40");
    sc_trace(mVcdFile, ap_CS_fsm_state44, "ap_CS_fsm_state44");
    sc_trace(mVcdFile, ap_CS_fsm_state48, "ap_CS_fsm_state48");
    sc_trace(mVcdFile, reg_278, "reg_278");
    sc_trace(mVcdFile, ap_CS_fsm_state36, "ap_CS_fsm_state36");
    sc_trace(mVcdFile, ap_CS_fsm_state53, "ap_CS_fsm_state53");
    sc_trace(mVcdFile, reg_284, "reg_284");
    sc_trace(mVcdFile, ap_CS_fsm_state58, "ap_CS_fsm_state58");
    sc_trace(mVcdFile, ap_CS_fsm_state64, "ap_CS_fsm_state64");
    sc_trace(mVcdFile, ap_CS_fsm_state69, "ap_CS_fsm_state69");
    sc_trace(mVcdFile, ap_CS_fsm_state79, "ap_CS_fsm_state79");
    sc_trace(mVcdFile, grp_fu_235_p2, "grp_fu_235_p2");
    sc_trace(mVcdFile, reg_292, "reg_292");
    sc_trace(mVcdFile, zoom_read_reg_419, "zoom_read_reg_419");
    sc_trace(mVcdFile, moveY_read_reg_424, "moveY_read_reg_424");
    sc_trace(mVcdFile, moveX_read_reg_429, "moveX_read_reg_429");
    sc_trace(mVcdFile, row_fu_304_p2, "row_fu_304_p2");
    sc_trace(mVcdFile, row_reg_437, "row_reg_437");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, ap_block_state2, "ap_block_state2");
    sc_trace(mVcdFile, zext_ln44_fu_310_p1, "zext_ln44_fu_310_p1");
    sc_trace(mVcdFile, icmp_ln24_fu_298_p2, "icmp_ln24_fu_298_p2");
    sc_trace(mVcdFile, tmp_last_V_fu_315_p2, "tmp_last_V_fu_315_p2");
    sc_trace(mVcdFile, tmp_last_V_reg_447, "tmp_last_V_reg_447");
    sc_trace(mVcdFile, col_fu_327_p2, "col_fu_327_p2");
    sc_trace(mVcdFile, col_reg_455, "col_reg_455");
    sc_trace(mVcdFile, ap_CS_fsm_state26, "ap_CS_fsm_state26");
    sc_trace(mVcdFile, tmp_user_V_fu_339_p2, "tmp_user_V_fu_339_p2");
    sc_trace(mVcdFile, tmp_user_V_reg_460, "tmp_user_V_reg_460");
    sc_trace(mVcdFile, icmp_ln26_fu_321_p2, "icmp_ln26_fu_321_p2");
    sc_trace(mVcdFile, zext_ln40_fu_345_p1, "zext_ln40_fu_345_p1");
    sc_trace(mVcdFile, icmp_ln51_1_fu_368_p2, "icmp_ln51_1_fu_368_p2");
    sc_trace(mVcdFile, icmp_ln51_1_reg_470, "icmp_ln51_1_reg_470");
    sc_trace(mVcdFile, ap_CS_fsm_state59, "ap_CS_fsm_state59");
    sc_trace(mVcdFile, icmp_ln51_2_fu_374_p2, "icmp_ln51_2_fu_374_p2");
    sc_trace(mVcdFile, icmp_ln51_2_reg_475, "icmp_ln51_2_reg_475");
    sc_trace(mVcdFile, iter_fu_402_p2, "iter_fu_402_p2");
    sc_trace(mVcdFile, iter_reg_483, "iter_reg_483");
    sc_trace(mVcdFile, ap_block_state60_io, "ap_block_state60_io");
    sc_trace(mVcdFile, pixel_out_V_fu_408_p4, "pixel_out_V_fu_408_p4");
    sc_trace(mVcdFile, y_reg_493, "y_reg_493");
    sc_trace(mVcdFile, ap_CS_fsm_state74, "ap_CS_fsm_state74");
    sc_trace(mVcdFile, rsquare_reg_500, "rsquare_reg_500");
    sc_trace(mVcdFile, ap_CS_fsm_state78, "ap_CS_fsm_state78");
    sc_trace(mVcdFile, grp_fu_249_p2, "grp_fu_249_p2");
    sc_trace(mVcdFile, isquare_reg_505, "isquare_reg_505");
    sc_trace(mVcdFile, ap_CS_fsm_state83, "ap_CS_fsm_state83");
    sc_trace(mVcdFile, row_0_reg_155, "row_0_reg_155");
    sc_trace(mVcdFile, col_0_reg_167, "col_0_reg_167");
    sc_trace(mVcdFile, ap_phi_mux_rsquare_0_phi_fu_182_p4, "ap_phi_mux_rsquare_0_phi_fu_182_p4");
    sc_trace(mVcdFile, rsquare_0_reg_178, "rsquare_0_reg_178");
    sc_trace(mVcdFile, ap_phi_mux_isquare_0_phi_fu_194_p4, "ap_phi_mux_isquare_0_phi_fu_194_p4");
    sc_trace(mVcdFile, isquare_0_reg_190, "isquare_0_reg_190");
    sc_trace(mVcdFile, zsquare_0_reg_202, "zsquare_0_reg_202");
    sc_trace(mVcdFile, pixel_R_reg_214, "pixel_R_reg_214");
    sc_trace(mVcdFile, grp_fu_225_p0, "grp_fu_225_p0");
    sc_trace(mVcdFile, grp_fu_225_p1, "grp_fu_225_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, ap_CS_fsm_state21, "ap_CS_fsm_state21");
    sc_trace(mVcdFile, ap_CS_fsm_state32, "ap_CS_fsm_state32");
    sc_trace(mVcdFile, ap_CS_fsm_state49, "ap_CS_fsm_state49");
    sc_trace(mVcdFile, ap_CS_fsm_state54, "ap_CS_fsm_state54");
    sc_trace(mVcdFile, ap_CS_fsm_state65, "ap_CS_fsm_state65");
    sc_trace(mVcdFile, ap_CS_fsm_state70, "ap_CS_fsm_state70");
    sc_trace(mVcdFile, ap_CS_fsm_state75, "ap_CS_fsm_state75");
    sc_trace(mVcdFile, grp_fu_235_p0, "grp_fu_235_p0");
    sc_trace(mVcdFile, grp_fu_235_p1, "grp_fu_235_p1");
    sc_trace(mVcdFile, grp_fu_242_p0, "grp_fu_242_p0");
    sc_trace(mVcdFile, grp_fu_242_p1, "grp_fu_242_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, ap_CS_fsm_state37, "ap_CS_fsm_state37");
    sc_trace(mVcdFile, ap_CS_fsm_state41, "ap_CS_fsm_state41");
    sc_trace(mVcdFile, ap_CS_fsm_state45, "ap_CS_fsm_state45");
    sc_trace(mVcdFile, ap_CS_fsm_state80, "ap_CS_fsm_state80");
    sc_trace(mVcdFile, grp_fu_253_p0, "grp_fu_253_p0");
    sc_trace(mVcdFile, or_ln29_fu_333_p2, "or_ln29_fu_333_p2");
    sc_trace(mVcdFile, bitcast_ln51_fu_350_p1, "bitcast_ln51_fu_350_p1");
    sc_trace(mVcdFile, tmp_1_fu_354_p4, "tmp_1_fu_354_p4");
    sc_trace(mVcdFile, trunc_ln51_fu_364_p1, "trunc_ln51_fu_364_p1");
    sc_trace(mVcdFile, or_ln51_fu_380_p2, "or_ln51_fu_380_p2");
    sc_trace(mVcdFile, grp_fu_256_p2, "grp_fu_256_p2");
    sc_trace(mVcdFile, and_ln51_1_fu_384_p2, "and_ln51_1_fu_384_p2");
    sc_trace(mVcdFile, icmp_ln51_fu_390_p2, "icmp_ln51_fu_390_p2");
    sc_trace(mVcdFile, grp_fu_225_opcode, "grp_fu_225_opcode");
    sc_trace(mVcdFile, grp_fu_225_ce, "grp_fu_225_ce");
    sc_trace(mVcdFile, ap_CS_fsm_state61, "ap_CS_fsm_state61");
    sc_trace(mVcdFile, ap_CS_fsm_state62, "ap_CS_fsm_state62");
    sc_trace(mVcdFile, ap_CS_fsm_state63, "ap_CS_fsm_state63");
    sc_trace(mVcdFile, ap_CS_fsm_state66, "ap_CS_fsm_state66");
    sc_trace(mVcdFile, ap_CS_fsm_state67, "ap_CS_fsm_state67");
    sc_trace(mVcdFile, ap_CS_fsm_state68, "ap_CS_fsm_state68");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, ap_CS_fsm_state27, "ap_CS_fsm_state27");
    sc_trace(mVcdFile, ap_CS_fsm_state28, "ap_CS_fsm_state28");
    sc_trace(mVcdFile, ap_CS_fsm_state29, "ap_CS_fsm_state29");
    sc_trace(mVcdFile, ap_CS_fsm_state30, "ap_CS_fsm_state30");
    sc_trace(mVcdFile, ap_CS_fsm_state38, "ap_CS_fsm_state38");
    sc_trace(mVcdFile, ap_CS_fsm_state39, "ap_CS_fsm_state39");
    sc_trace(mVcdFile, ap_CS_fsm_state42, "ap_CS_fsm_state42");
    sc_trace(mVcdFile, ap_CS_fsm_state43, "ap_CS_fsm_state43");
    sc_trace(mVcdFile, ap_CS_fsm_state46, "ap_CS_fsm_state46");
    sc_trace(mVcdFile, ap_CS_fsm_state47, "ap_CS_fsm_state47");
    sc_trace(mVcdFile, ap_CS_fsm_state81, "ap_CS_fsm_state81");
    sc_trace(mVcdFile, ap_CS_fsm_state82, "ap_CS_fsm_state82");
    sc_trace(mVcdFile, grp_fu_235_ce, "grp_fu_235_ce");
    sc_trace(mVcdFile, grp_fu_253_ce, "grp_fu_253_ce");
    sc_trace(mVcdFile, grp_fu_256_ce, "grp_fu_256_ce");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("video_mandelbrot_generator.hdltvin.dat");
    mHdltvoutHandle.open("video_mandelbrot_generator.hdltvout.dat");
}

video_mandelbrot_generator::~video_mandelbrot_generator() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete video_mandelbrot_generator_cmd_s_axi_U;
    delete video_mandelbrot_generator_faddfsub_32ns_32ns_32_5_full_dsp_1_U1;
    delete video_mandelbrot_generator_fsub_32ns_32ns_32_5_full_dsp_1_U2;
    delete video_mandelbrot_generator_fmul_32ns_32ns_32_4_max_dsp_1_U3;
    delete video_mandelbrot_generator_fmul_32ns_32ns_32_4_max_dsp_1_U4;
    delete video_mandelbrot_generator_uitofp_32ns_32_6_1_U5;
    delete video_mandelbrot_generator_fcmp_32ns_32ns_1_2_1_U6;
}

void video_mandelbrot_generator::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void video_mandelbrot_generator::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv32_40800000;
}

void video_mandelbrot_generator::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv5_4;
}

void video_mandelbrot_generator::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        VIDEO_OUT_V_data_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, VIDEO_OUT_V_data_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, VIDEO_OUT_V_data_V_1_vld_out.read()))) {
            VIDEO_OUT_V_data_V_1_sel_rd =  (sc_logic) (~VIDEO_OUT_V_data_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        VIDEO_OUT_V_data_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, VIDEO_OUT_V_data_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, VIDEO_OUT_V_data_V_1_ack_in.read()))) {
            VIDEO_OUT_V_data_V_1_sel_wr =  (sc_logic) (~VIDEO_OUT_V_data_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        VIDEO_OUT_V_data_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, VIDEO_OUT_V_data_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, VIDEO_OUT_V_data_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(VIDEO_OUT_V_data_V_1_state.read(), ap_const_lv2_3)) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, VIDEO_OUT_V_data_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(VIDEO_OUT_V_data_V_1_state.read(), ap_const_lv2_2)))) {
            VIDEO_OUT_V_data_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, VIDEO_OUT_V_data_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, m_axis_video_TREADY.read()) && 
                     esl_seteq<1,2,2>(VIDEO_OUT_V_data_V_1_state.read(), ap_const_lv2_3)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, m_axis_video_TREADY.read()) && 
                     esl_seteq<1,2,2>(VIDEO_OUT_V_data_V_1_state.read(), ap_const_lv2_1)))) {
            VIDEO_OUT_V_data_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, VIDEO_OUT_V_data_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(VIDEO_OUT_V_data_V_1_state.read(), ap_const_lv2_2)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, VIDEO_OUT_V_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(VIDEO_OUT_V_data_V_1_state.read(), ap_const_lv2_1)) || 
                    (esl_seteq<1,2,2>(VIDEO_OUT_V_data_V_1_state.read(), ap_const_lv2_3) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, VIDEO_OUT_V_data_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axis_video_TREADY.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, VIDEO_OUT_V_data_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, VIDEO_OUT_V_data_V_1_ack_out.read()))))) {
            VIDEO_OUT_V_data_V_1_state = ap_const_lv2_3;
        } else {
            VIDEO_OUT_V_data_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        VIDEO_OUT_V_dest_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, VIDEO_OUT_V_dest_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, VIDEO_OUT_V_dest_V_1_vld_out.read()))) {
            VIDEO_OUT_V_dest_V_1_sel_rd =  (sc_logic) (~VIDEO_OUT_V_dest_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        VIDEO_OUT_V_dest_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, VIDEO_OUT_V_dest_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, VIDEO_OUT_V_dest_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, VIDEO_OUT_V_dest_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, VIDEO_OUT_V_dest_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, VIDEO_OUT_V_dest_V_1_state.read())))) {
            VIDEO_OUT_V_dest_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, VIDEO_OUT_V_dest_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, m_axis_video_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, VIDEO_OUT_V_dest_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, m_axis_video_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, VIDEO_OUT_V_dest_V_1_state.read())))) {
            VIDEO_OUT_V_dest_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, VIDEO_OUT_V_dest_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, VIDEO_OUT_V_dest_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, VIDEO_OUT_V_dest_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, VIDEO_OUT_V_dest_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, VIDEO_OUT_V_dest_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, VIDEO_OUT_V_dest_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axis_video_TREADY.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, VIDEO_OUT_V_dest_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, VIDEO_OUT_V_dest_V_1_ack_out.read()))))) {
            VIDEO_OUT_V_dest_V_1_state = ap_const_lv2_3;
        } else {
            VIDEO_OUT_V_dest_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        VIDEO_OUT_V_id_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, VIDEO_OUT_V_id_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, VIDEO_OUT_V_id_V_1_vld_out.read()))) {
            VIDEO_OUT_V_id_V_1_sel_rd =  (sc_logic) (~VIDEO_OUT_V_id_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        VIDEO_OUT_V_id_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, VIDEO_OUT_V_id_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, VIDEO_OUT_V_id_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, VIDEO_OUT_V_id_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, VIDEO_OUT_V_id_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, VIDEO_OUT_V_id_V_1_state.read())))) {
            VIDEO_OUT_V_id_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, VIDEO_OUT_V_id_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, m_axis_video_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, VIDEO_OUT_V_id_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, m_axis_video_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, VIDEO_OUT_V_id_V_1_state.read())))) {
            VIDEO_OUT_V_id_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, VIDEO_OUT_V_id_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, VIDEO_OUT_V_id_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, VIDEO_OUT_V_id_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, VIDEO_OUT_V_id_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, VIDEO_OUT_V_id_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, VIDEO_OUT_V_id_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axis_video_TREADY.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, VIDEO_OUT_V_id_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, VIDEO_OUT_V_id_V_1_ack_out.read()))))) {
            VIDEO_OUT_V_id_V_1_state = ap_const_lv2_3;
        } else {
            VIDEO_OUT_V_id_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        VIDEO_OUT_V_keep_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, VIDEO_OUT_V_keep_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, VIDEO_OUT_V_keep_V_1_vld_out.read()))) {
            VIDEO_OUT_V_keep_V_1_sel_rd =  (sc_logic) (~VIDEO_OUT_V_keep_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        VIDEO_OUT_V_keep_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, VIDEO_OUT_V_keep_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, VIDEO_OUT_V_keep_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, VIDEO_OUT_V_keep_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, VIDEO_OUT_V_keep_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, VIDEO_OUT_V_keep_V_1_state.read())))) {
            VIDEO_OUT_V_keep_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, VIDEO_OUT_V_keep_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, m_axis_video_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, VIDEO_OUT_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, m_axis_video_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, VIDEO_OUT_V_keep_V_1_state.read())))) {
            VIDEO_OUT_V_keep_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, VIDEO_OUT_V_keep_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, VIDEO_OUT_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, VIDEO_OUT_V_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, VIDEO_OUT_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, VIDEO_OUT_V_keep_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, VIDEO_OUT_V_keep_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axis_video_TREADY.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, VIDEO_OUT_V_keep_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, VIDEO_OUT_V_keep_V_1_ack_out.read()))))) {
            VIDEO_OUT_V_keep_V_1_state = ap_const_lv2_3;
        } else {
            VIDEO_OUT_V_keep_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        VIDEO_OUT_V_last_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, VIDEO_OUT_V_last_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, VIDEO_OUT_V_last_V_1_vld_out.read()))) {
            VIDEO_OUT_V_last_V_1_sel_rd =  (sc_logic) (~VIDEO_OUT_V_last_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        VIDEO_OUT_V_last_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, VIDEO_OUT_V_last_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, VIDEO_OUT_V_last_V_1_ack_in.read()))) {
            VIDEO_OUT_V_last_V_1_sel_wr =  (sc_logic) (~VIDEO_OUT_V_last_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        VIDEO_OUT_V_last_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, VIDEO_OUT_V_last_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, VIDEO_OUT_V_last_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, VIDEO_OUT_V_last_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, VIDEO_OUT_V_last_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, VIDEO_OUT_V_last_V_1_state.read())))) {
            VIDEO_OUT_V_last_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, VIDEO_OUT_V_last_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, m_axis_video_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, VIDEO_OUT_V_last_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, m_axis_video_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, VIDEO_OUT_V_last_V_1_state.read())))) {
            VIDEO_OUT_V_last_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, VIDEO_OUT_V_last_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, VIDEO_OUT_V_last_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, VIDEO_OUT_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, VIDEO_OUT_V_last_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, VIDEO_OUT_V_last_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, VIDEO_OUT_V_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axis_video_TREADY.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, VIDEO_OUT_V_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, VIDEO_OUT_V_last_V_1_ack_out.read()))))) {
            VIDEO_OUT_V_last_V_1_state = ap_const_lv2_3;
        } else {
            VIDEO_OUT_V_last_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        VIDEO_OUT_V_strb_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, VIDEO_OUT_V_strb_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, VIDEO_OUT_V_strb_V_1_vld_out.read()))) {
            VIDEO_OUT_V_strb_V_1_sel_rd =  (sc_logic) (~VIDEO_OUT_V_strb_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        VIDEO_OUT_V_strb_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, VIDEO_OUT_V_strb_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, VIDEO_OUT_V_strb_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, VIDEO_OUT_V_strb_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, VIDEO_OUT_V_strb_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, VIDEO_OUT_V_strb_V_1_state.read())))) {
            VIDEO_OUT_V_strb_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, VIDEO_OUT_V_strb_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, m_axis_video_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, VIDEO_OUT_V_strb_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, m_axis_video_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, VIDEO_OUT_V_strb_V_1_state.read())))) {
            VIDEO_OUT_V_strb_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, VIDEO_OUT_V_strb_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, VIDEO_OUT_V_strb_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, VIDEO_OUT_V_strb_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, VIDEO_OUT_V_strb_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, VIDEO_OUT_V_strb_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, VIDEO_OUT_V_strb_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axis_video_TREADY.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, VIDEO_OUT_V_strb_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, VIDEO_OUT_V_strb_V_1_ack_out.read()))))) {
            VIDEO_OUT_V_strb_V_1_state = ap_const_lv2_3;
        } else {
            VIDEO_OUT_V_strb_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        VIDEO_OUT_V_user_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, VIDEO_OUT_V_user_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, VIDEO_OUT_V_user_V_1_vld_out.read()))) {
            VIDEO_OUT_V_user_V_1_sel_rd =  (sc_logic) (~VIDEO_OUT_V_user_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        VIDEO_OUT_V_user_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, VIDEO_OUT_V_user_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, VIDEO_OUT_V_user_V_1_ack_in.read()))) {
            VIDEO_OUT_V_user_V_1_sel_wr =  (sc_logic) (~VIDEO_OUT_V_user_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        VIDEO_OUT_V_user_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, VIDEO_OUT_V_user_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, VIDEO_OUT_V_user_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, VIDEO_OUT_V_user_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, VIDEO_OUT_V_user_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, VIDEO_OUT_V_user_V_1_state.read())))) {
            VIDEO_OUT_V_user_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, VIDEO_OUT_V_user_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, m_axis_video_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, VIDEO_OUT_V_user_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, m_axis_video_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, VIDEO_OUT_V_user_V_1_state.read())))) {
            VIDEO_OUT_V_user_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, VIDEO_OUT_V_user_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, VIDEO_OUT_V_user_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, VIDEO_OUT_V_user_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, VIDEO_OUT_V_user_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, VIDEO_OUT_V_user_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, VIDEO_OUT_V_user_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axis_video_TREADY.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, VIDEO_OUT_V_user_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, VIDEO_OUT_V_user_V_1_ack_out.read()))))) {
            VIDEO_OUT_V_user_V_1_state = ap_const_lv2_3;
        } else {
            VIDEO_OUT_V_user_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state84.read()) && 
         esl_seteq<1,1,1>(VIDEO_OUT_V_data_V_1_ack_in.read(), ap_const_logic_1))) {
        col_0_reg_167 = col_reg_455.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) {
        col_0_reg_167 = ap_const_lv10_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state83.read())) {
        isquare_0_reg_190 = isquare_reg_505.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read())) {
        isquare_0_reg_190 = ap_const_lv32_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state83.read())) {
        pixel_R_reg_214 = iter_reg_483.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read())) {
        pixel_R_reg_214 = ap_const_lv8_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln26_fu_321_p2.read()))) {
        row_0_reg_155 = row_reg_437.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        row_0_reg_155 = ap_const_lv10_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state83.read())) {
        rsquare_0_reg_178 = rsquare_reg_500.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read())) {
        rsquare_0_reg_178 = ap_const_lv32_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state83.read())) {
        zsquare_0_reg_202 = grp_fu_242_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read())) {
        zsquare_0_reg_202 = ap_const_lv32_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, VIDEO_OUT_V_data_V_1_load_A.read())) {
        VIDEO_OUT_V_data_V_1_payload_A = pixel_out_V_fu_408_p4.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, VIDEO_OUT_V_data_V_1_load_B.read())) {
        VIDEO_OUT_V_data_V_1_payload_B = pixel_out_V_fu_408_p4.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, VIDEO_OUT_V_last_V_1_load_A.read())) {
        VIDEO_OUT_V_last_V_1_payload_A = tmp_last_V_reg_447.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, VIDEO_OUT_V_last_V_1_load_B.read())) {
        VIDEO_OUT_V_last_V_1_payload_B = tmp_last_V_reg_447.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, VIDEO_OUT_V_user_V_1_load_A.read())) {
        VIDEO_OUT_V_user_V_1_payload_A = tmp_user_V_reg_460.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, VIDEO_OUT_V_user_V_1_load_B.read())) {
        VIDEO_OUT_V_user_V_1_payload_B = tmp_user_V_reg_460.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        col_reg_455 = col_fu_327_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read())) {
        icmp_ln51_1_reg_470 = icmp_ln51_1_fu_368_p2.read();
        icmp_ln51_2_reg_475 = icmp_ln51_2_fu_374_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state78.read())) {
        isquare_reg_505 = grp_fu_249_p2.read();
        rsquare_reg_500 = grp_fu_242_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state60.read()) && esl_seteq<1,1,1>(ap_block_state60_io.read(), ap_const_boolean_0))) {
        iter_reg_483 = iter_fu_402_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        moveX_read_reg_429 = moveX.read();
        moveY_read_reg_424 = moveY.read();
        zoom_read_reg_419 = zoom.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()))) {
        reg_261 = grp_fu_253_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()))) {
        reg_266 = grp_fu_225_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read()))) {
        reg_272 = grp_fu_242_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read()))) {
        reg_278 = grp_fu_225_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state58.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state64.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state69.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state79.read()))) {
        reg_284 = grp_fu_225_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state64.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state69.read()))) {
        reg_292 = grp_fu_235_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && !(esl_seteq<1,2,2>(VIDEO_OUT_V_data_V_1_state.read(), ap_const_lv2_1) || esl_seteq<1,2,2>(ap_const_lv2_1, VIDEO_OUT_V_keep_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, VIDEO_OUT_V_strb_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, VIDEO_OUT_V_user_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, VIDEO_OUT_V_last_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, VIDEO_OUT_V_id_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, VIDEO_OUT_V_dest_V_1_state.read()) || (esl_seteq<1,1,1>(ap_const_logic_0, m_axis_video_TREADY.read()) && 
  esl_seteq<1,2,2>(VIDEO_OUT_V_data_V_1_state.read(), ap_const_lv2_3)) || (esl_seteq<1,1,1>(ap_const_logic_0, m_axis_video_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, VIDEO_OUT_V_keep_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, m_axis_video_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, VIDEO_OUT_V_strb_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, m_axis_video_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, VIDEO_OUT_V_user_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, m_axis_video_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, VIDEO_OUT_V_last_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, m_axis_video_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, VIDEO_OUT_V_id_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, m_axis_video_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, VIDEO_OUT_V_dest_V_1_state.read()))))) {
        row_reg_437 = row_fu_304_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) {
        tmp_last_V_reg_447 = tmp_last_V_fu_315_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln26_fu_321_p2.read()))) {
        tmp_user_V_reg_460 = tmp_user_V_fu_339_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state74.read())) {
        y_reg_493 = grp_fu_225_p2.read();
    }
}

void video_mandelbrot_generator::thread_VIDEO_OUT_V_data_V_1_ack_in() {
    VIDEO_OUT_V_data_V_1_ack_in = VIDEO_OUT_V_data_V_1_state.read()[1];
}

void video_mandelbrot_generator::thread_VIDEO_OUT_V_data_V_1_ack_out() {
    VIDEO_OUT_V_data_V_1_ack_out = m_axis_video_TREADY.read();
}

void video_mandelbrot_generator::thread_VIDEO_OUT_V_data_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, VIDEO_OUT_V_data_V_1_sel.read())) {
        VIDEO_OUT_V_data_V_1_data_out = VIDEO_OUT_V_data_V_1_payload_B.read();
    } else {
        VIDEO_OUT_V_data_V_1_data_out = VIDEO_OUT_V_data_V_1_payload_A.read();
    }
}

void video_mandelbrot_generator::thread_VIDEO_OUT_V_data_V_1_load_A() {
    VIDEO_OUT_V_data_V_1_load_A = (VIDEO_OUT_V_data_V_1_state_cmp_full.read() & ~VIDEO_OUT_V_data_V_1_sel_wr.read());
}

void video_mandelbrot_generator::thread_VIDEO_OUT_V_data_V_1_load_B() {
    VIDEO_OUT_V_data_V_1_load_B = (VIDEO_OUT_V_data_V_1_sel_wr.read() & VIDEO_OUT_V_data_V_1_state_cmp_full.read());
}

void video_mandelbrot_generator::thread_VIDEO_OUT_V_data_V_1_sel() {
    VIDEO_OUT_V_data_V_1_sel = VIDEO_OUT_V_data_V_1_sel_rd.read();
}

void video_mandelbrot_generator::thread_VIDEO_OUT_V_data_V_1_state_cmp_full() {
    VIDEO_OUT_V_data_V_1_state_cmp_full =  (sc_logic) ((!VIDEO_OUT_V_data_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(VIDEO_OUT_V_data_V_1_state.read() != ap_const_lv2_1))[0];
}

void video_mandelbrot_generator::thread_VIDEO_OUT_V_data_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state60.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, and_ln51_fu_396_p2.read()) && 
         esl_seteq<1,1,1>(ap_block_state60_io.read(), ap_const_boolean_0))) {
        VIDEO_OUT_V_data_V_1_vld_in = ap_const_logic_1;
    } else {
        VIDEO_OUT_V_data_V_1_vld_in = ap_const_logic_0;
    }
}

void video_mandelbrot_generator::thread_VIDEO_OUT_V_data_V_1_vld_out() {
    VIDEO_OUT_V_data_V_1_vld_out = VIDEO_OUT_V_data_V_1_state.read()[0];
}

void video_mandelbrot_generator::thread_VIDEO_OUT_V_dest_V_1_ack_out() {
    VIDEO_OUT_V_dest_V_1_ack_out = m_axis_video_TREADY.read();
}

void video_mandelbrot_generator::thread_VIDEO_OUT_V_dest_V_1_data_out() {
    VIDEO_OUT_V_dest_V_1_data_out = ap_const_lv1_0;
}

void video_mandelbrot_generator::thread_VIDEO_OUT_V_dest_V_1_sel() {
    VIDEO_OUT_V_dest_V_1_sel = VIDEO_OUT_V_dest_V_1_sel_rd.read();
}

void video_mandelbrot_generator::thread_VIDEO_OUT_V_dest_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state60.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, and_ln51_fu_396_p2.read()) && 
         esl_seteq<1,1,1>(ap_block_state60_io.read(), ap_const_boolean_0))) {
        VIDEO_OUT_V_dest_V_1_vld_in = ap_const_logic_1;
    } else {
        VIDEO_OUT_V_dest_V_1_vld_in = ap_const_logic_0;
    }
}

void video_mandelbrot_generator::thread_VIDEO_OUT_V_dest_V_1_vld_out() {
    VIDEO_OUT_V_dest_V_1_vld_out = VIDEO_OUT_V_dest_V_1_state.read()[0];
}

void video_mandelbrot_generator::thread_VIDEO_OUT_V_id_V_1_ack_out() {
    VIDEO_OUT_V_id_V_1_ack_out = m_axis_video_TREADY.read();
}

void video_mandelbrot_generator::thread_VIDEO_OUT_V_id_V_1_data_out() {
    VIDEO_OUT_V_id_V_1_data_out = ap_const_lv1_0;
}

void video_mandelbrot_generator::thread_VIDEO_OUT_V_id_V_1_sel() {
    VIDEO_OUT_V_id_V_1_sel = VIDEO_OUT_V_id_V_1_sel_rd.read();
}

void video_mandelbrot_generator::thread_VIDEO_OUT_V_id_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state60.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, and_ln51_fu_396_p2.read()) && 
         esl_seteq<1,1,1>(ap_block_state60_io.read(), ap_const_boolean_0))) {
        VIDEO_OUT_V_id_V_1_vld_in = ap_const_logic_1;
    } else {
        VIDEO_OUT_V_id_V_1_vld_in = ap_const_logic_0;
    }
}

void video_mandelbrot_generator::thread_VIDEO_OUT_V_id_V_1_vld_out() {
    VIDEO_OUT_V_id_V_1_vld_out = VIDEO_OUT_V_id_V_1_state.read()[0];
}

void video_mandelbrot_generator::thread_VIDEO_OUT_V_keep_V_1_ack_out() {
    VIDEO_OUT_V_keep_V_1_ack_out = m_axis_video_TREADY.read();
}

void video_mandelbrot_generator::thread_VIDEO_OUT_V_keep_V_1_data_out() {
    VIDEO_OUT_V_keep_V_1_data_out = ap_const_lv3_0;
}

void video_mandelbrot_generator::thread_VIDEO_OUT_V_keep_V_1_sel() {
    VIDEO_OUT_V_keep_V_1_sel = VIDEO_OUT_V_keep_V_1_sel_rd.read();
}

void video_mandelbrot_generator::thread_VIDEO_OUT_V_keep_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state60.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, and_ln51_fu_396_p2.read()) && 
         esl_seteq<1,1,1>(ap_block_state60_io.read(), ap_const_boolean_0))) {
        VIDEO_OUT_V_keep_V_1_vld_in = ap_const_logic_1;
    } else {
        VIDEO_OUT_V_keep_V_1_vld_in = ap_const_logic_0;
    }
}

void video_mandelbrot_generator::thread_VIDEO_OUT_V_keep_V_1_vld_out() {
    VIDEO_OUT_V_keep_V_1_vld_out = VIDEO_OUT_V_keep_V_1_state.read()[0];
}

void video_mandelbrot_generator::thread_VIDEO_OUT_V_last_V_1_ack_in() {
    VIDEO_OUT_V_last_V_1_ack_in = VIDEO_OUT_V_last_V_1_state.read()[1];
}

void video_mandelbrot_generator::thread_VIDEO_OUT_V_last_V_1_ack_out() {
    VIDEO_OUT_V_last_V_1_ack_out = m_axis_video_TREADY.read();
}

void video_mandelbrot_generator::thread_VIDEO_OUT_V_last_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, VIDEO_OUT_V_last_V_1_sel.read())) {
        VIDEO_OUT_V_last_V_1_data_out = VIDEO_OUT_V_last_V_1_payload_B.read();
    } else {
        VIDEO_OUT_V_last_V_1_data_out = VIDEO_OUT_V_last_V_1_payload_A.read();
    }
}

void video_mandelbrot_generator::thread_VIDEO_OUT_V_last_V_1_load_A() {
    VIDEO_OUT_V_last_V_1_load_A = (VIDEO_OUT_V_last_V_1_state_cmp_full.read() & ~VIDEO_OUT_V_last_V_1_sel_wr.read());
}

void video_mandelbrot_generator::thread_VIDEO_OUT_V_last_V_1_load_B() {
    VIDEO_OUT_V_last_V_1_load_B = (VIDEO_OUT_V_last_V_1_sel_wr.read() & VIDEO_OUT_V_last_V_1_state_cmp_full.read());
}

void video_mandelbrot_generator::thread_VIDEO_OUT_V_last_V_1_sel() {
    VIDEO_OUT_V_last_V_1_sel = VIDEO_OUT_V_last_V_1_sel_rd.read();
}

void video_mandelbrot_generator::thread_VIDEO_OUT_V_last_V_1_state_cmp_full() {
    VIDEO_OUT_V_last_V_1_state_cmp_full =  (sc_logic) ((!VIDEO_OUT_V_last_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(VIDEO_OUT_V_last_V_1_state.read() != ap_const_lv2_1))[0];
}

void video_mandelbrot_generator::thread_VIDEO_OUT_V_last_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state60.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, and_ln51_fu_396_p2.read()) && 
         esl_seteq<1,1,1>(ap_block_state60_io.read(), ap_const_boolean_0))) {
        VIDEO_OUT_V_last_V_1_vld_in = ap_const_logic_1;
    } else {
        VIDEO_OUT_V_last_V_1_vld_in = ap_const_logic_0;
    }
}

void video_mandelbrot_generator::thread_VIDEO_OUT_V_last_V_1_vld_out() {
    VIDEO_OUT_V_last_V_1_vld_out = VIDEO_OUT_V_last_V_1_state.read()[0];
}

void video_mandelbrot_generator::thread_VIDEO_OUT_V_strb_V_1_ack_out() {
    VIDEO_OUT_V_strb_V_1_ack_out = m_axis_video_TREADY.read();
}

void video_mandelbrot_generator::thread_VIDEO_OUT_V_strb_V_1_data_out() {
    VIDEO_OUT_V_strb_V_1_data_out = ap_const_lv3_0;
}

void video_mandelbrot_generator::thread_VIDEO_OUT_V_strb_V_1_sel() {
    VIDEO_OUT_V_strb_V_1_sel = VIDEO_OUT_V_strb_V_1_sel_rd.read();
}

void video_mandelbrot_generator::thread_VIDEO_OUT_V_strb_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state60.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, and_ln51_fu_396_p2.read()) && 
         esl_seteq<1,1,1>(ap_block_state60_io.read(), ap_const_boolean_0))) {
        VIDEO_OUT_V_strb_V_1_vld_in = ap_const_logic_1;
    } else {
        VIDEO_OUT_V_strb_V_1_vld_in = ap_const_logic_0;
    }
}

void video_mandelbrot_generator::thread_VIDEO_OUT_V_strb_V_1_vld_out() {
    VIDEO_OUT_V_strb_V_1_vld_out = VIDEO_OUT_V_strb_V_1_state.read()[0];
}

void video_mandelbrot_generator::thread_VIDEO_OUT_V_user_V_1_ack_in() {
    VIDEO_OUT_V_user_V_1_ack_in = VIDEO_OUT_V_user_V_1_state.read()[1];
}

void video_mandelbrot_generator::thread_VIDEO_OUT_V_user_V_1_ack_out() {
    VIDEO_OUT_V_user_V_1_ack_out = m_axis_video_TREADY.read();
}

void video_mandelbrot_generator::thread_VIDEO_OUT_V_user_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, VIDEO_OUT_V_user_V_1_sel.read())) {
        VIDEO_OUT_V_user_V_1_data_out = VIDEO_OUT_V_user_V_1_payload_B.read();
    } else {
        VIDEO_OUT_V_user_V_1_data_out = VIDEO_OUT_V_user_V_1_payload_A.read();
    }
}

void video_mandelbrot_generator::thread_VIDEO_OUT_V_user_V_1_load_A() {
    VIDEO_OUT_V_user_V_1_load_A = (VIDEO_OUT_V_user_V_1_state_cmp_full.read() & ~VIDEO_OUT_V_user_V_1_sel_wr.read());
}

void video_mandelbrot_generator::thread_VIDEO_OUT_V_user_V_1_load_B() {
    VIDEO_OUT_V_user_V_1_load_B = (VIDEO_OUT_V_user_V_1_sel_wr.read() & VIDEO_OUT_V_user_V_1_state_cmp_full.read());
}

void video_mandelbrot_generator::thread_VIDEO_OUT_V_user_V_1_sel() {
    VIDEO_OUT_V_user_V_1_sel = VIDEO_OUT_V_user_V_1_sel_rd.read();
}

void video_mandelbrot_generator::thread_VIDEO_OUT_V_user_V_1_state_cmp_full() {
    VIDEO_OUT_V_user_V_1_state_cmp_full =  (sc_logic) ((!VIDEO_OUT_V_user_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(VIDEO_OUT_V_user_V_1_state.read() != ap_const_lv2_1))[0];
}

void video_mandelbrot_generator::thread_VIDEO_OUT_V_user_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state60.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, and_ln51_fu_396_p2.read()) && 
         esl_seteq<1,1,1>(ap_block_state60_io.read(), ap_const_boolean_0))) {
        VIDEO_OUT_V_user_V_1_vld_in = ap_const_logic_1;
    } else {
        VIDEO_OUT_V_user_V_1_vld_in = ap_const_logic_0;
    }
}

void video_mandelbrot_generator::thread_VIDEO_OUT_V_user_V_1_vld_out() {
    VIDEO_OUT_V_user_V_1_vld_out = VIDEO_OUT_V_user_V_1_state.read()[0];
}

void video_mandelbrot_generator::thread_and_ln51_1_fu_384_p2() {
    and_ln51_1_fu_384_p2 = (or_ln51_fu_380_p2.read() & grp_fu_256_p2.read());
}

void video_mandelbrot_generator::thread_and_ln51_fu_396_p2() {
    and_ln51_fu_396_p2 = (and_ln51_1_fu_384_p2.read() & icmp_ln51_fu_390_p2.read());
}

void video_mandelbrot_generator::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void video_mandelbrot_generator::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void video_mandelbrot_generator::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void video_mandelbrot_generator::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void video_mandelbrot_generator::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void video_mandelbrot_generator::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void video_mandelbrot_generator::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void video_mandelbrot_generator::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void video_mandelbrot_generator::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[18];
}

void video_mandelbrot_generator::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void video_mandelbrot_generator::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read()[19];
}

void video_mandelbrot_generator::thread_ap_CS_fsm_state21() {
    ap_CS_fsm_state21 = ap_CS_fsm.read()[20];
}

void video_mandelbrot_generator::thread_ap_CS_fsm_state25() {
    ap_CS_fsm_state25 = ap_CS_fsm.read()[24];
}

void video_mandelbrot_generator::thread_ap_CS_fsm_state26() {
    ap_CS_fsm_state26 = ap_CS_fsm.read()[25];
}

void video_mandelbrot_generator::thread_ap_CS_fsm_state27() {
    ap_CS_fsm_state27 = ap_CS_fsm.read()[26];
}

void video_mandelbrot_generator::thread_ap_CS_fsm_state28() {
    ap_CS_fsm_state28 = ap_CS_fsm.read()[27];
}

void video_mandelbrot_generator::thread_ap_CS_fsm_state29() {
    ap_CS_fsm_state29 = ap_CS_fsm.read()[28];
}

void video_mandelbrot_generator::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void video_mandelbrot_generator::thread_ap_CS_fsm_state30() {
    ap_CS_fsm_state30 = ap_CS_fsm.read()[29];
}

void video_mandelbrot_generator::thread_ap_CS_fsm_state31() {
    ap_CS_fsm_state31 = ap_CS_fsm.read()[30];
}

void video_mandelbrot_generator::thread_ap_CS_fsm_state32() {
    ap_CS_fsm_state32 = ap_CS_fsm.read()[31];
}

void video_mandelbrot_generator::thread_ap_CS_fsm_state36() {
    ap_CS_fsm_state36 = ap_CS_fsm.read()[35];
}

void video_mandelbrot_generator::thread_ap_CS_fsm_state37() {
    ap_CS_fsm_state37 = ap_CS_fsm.read()[36];
}

void video_mandelbrot_generator::thread_ap_CS_fsm_state38() {
    ap_CS_fsm_state38 = ap_CS_fsm.read()[37];
}

void video_mandelbrot_generator::thread_ap_CS_fsm_state39() {
    ap_CS_fsm_state39 = ap_CS_fsm.read()[38];
}

void video_mandelbrot_generator::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void video_mandelbrot_generator::thread_ap_CS_fsm_state40() {
    ap_CS_fsm_state40 = ap_CS_fsm.read()[39];
}

void video_mandelbrot_generator::thread_ap_CS_fsm_state41() {
    ap_CS_fsm_state41 = ap_CS_fsm.read()[40];
}

void video_mandelbrot_generator::thread_ap_CS_fsm_state42() {
    ap_CS_fsm_state42 = ap_CS_fsm.read()[41];
}

void video_mandelbrot_generator::thread_ap_CS_fsm_state43() {
    ap_CS_fsm_state43 = ap_CS_fsm.read()[42];
}

void video_mandelbrot_generator::thread_ap_CS_fsm_state44() {
    ap_CS_fsm_state44 = ap_CS_fsm.read()[43];
}

void video_mandelbrot_generator::thread_ap_CS_fsm_state45() {
    ap_CS_fsm_state45 = ap_CS_fsm.read()[44];
}

void video_mandelbrot_generator::thread_ap_CS_fsm_state46() {
    ap_CS_fsm_state46 = ap_CS_fsm.read()[45];
}

void video_mandelbrot_generator::thread_ap_CS_fsm_state47() {
    ap_CS_fsm_state47 = ap_CS_fsm.read()[46];
}

void video_mandelbrot_generator::thread_ap_CS_fsm_state48() {
    ap_CS_fsm_state48 = ap_CS_fsm.read()[47];
}

void video_mandelbrot_generator::thread_ap_CS_fsm_state49() {
    ap_CS_fsm_state49 = ap_CS_fsm.read()[48];
}

void video_mandelbrot_generator::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void video_mandelbrot_generator::thread_ap_CS_fsm_state53() {
    ap_CS_fsm_state53 = ap_CS_fsm.read()[52];
}

void video_mandelbrot_generator::thread_ap_CS_fsm_state54() {
    ap_CS_fsm_state54 = ap_CS_fsm.read()[53];
}

void video_mandelbrot_generator::thread_ap_CS_fsm_state58() {
    ap_CS_fsm_state58 = ap_CS_fsm.read()[57];
}

void video_mandelbrot_generator::thread_ap_CS_fsm_state59() {
    ap_CS_fsm_state59 = ap_CS_fsm.read()[58];
}

void video_mandelbrot_generator::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void video_mandelbrot_generator::thread_ap_CS_fsm_state60() {
    ap_CS_fsm_state60 = ap_CS_fsm.read()[59];
}

void video_mandelbrot_generator::thread_ap_CS_fsm_state61() {
    ap_CS_fsm_state61 = ap_CS_fsm.read()[60];
}

void video_mandelbrot_generator::thread_ap_CS_fsm_state62() {
    ap_CS_fsm_state62 = ap_CS_fsm.read()[61];
}

void video_mandelbrot_generator::thread_ap_CS_fsm_state63() {
    ap_CS_fsm_state63 = ap_CS_fsm.read()[62];
}

void video_mandelbrot_generator::thread_ap_CS_fsm_state64() {
    ap_CS_fsm_state64 = ap_CS_fsm.read()[63];
}

void video_mandelbrot_generator::thread_ap_CS_fsm_state65() {
    ap_CS_fsm_state65 = ap_CS_fsm.read()[64];
}

void video_mandelbrot_generator::thread_ap_CS_fsm_state66() {
    ap_CS_fsm_state66 = ap_CS_fsm.read()[65];
}

void video_mandelbrot_generator::thread_ap_CS_fsm_state67() {
    ap_CS_fsm_state67 = ap_CS_fsm.read()[66];
}

void video_mandelbrot_generator::thread_ap_CS_fsm_state68() {
    ap_CS_fsm_state68 = ap_CS_fsm.read()[67];
}

void video_mandelbrot_generator::thread_ap_CS_fsm_state69() {
    ap_CS_fsm_state69 = ap_CS_fsm.read()[68];
}

void video_mandelbrot_generator::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void video_mandelbrot_generator::thread_ap_CS_fsm_state70() {
    ap_CS_fsm_state70 = ap_CS_fsm.read()[69];
}

void video_mandelbrot_generator::thread_ap_CS_fsm_state74() {
    ap_CS_fsm_state74 = ap_CS_fsm.read()[73];
}

void video_mandelbrot_generator::thread_ap_CS_fsm_state75() {
    ap_CS_fsm_state75 = ap_CS_fsm.read()[74];
}

void video_mandelbrot_generator::thread_ap_CS_fsm_state78() {
    ap_CS_fsm_state78 = ap_CS_fsm.read()[77];
}

void video_mandelbrot_generator::thread_ap_CS_fsm_state79() {
    ap_CS_fsm_state79 = ap_CS_fsm.read()[78];
}

void video_mandelbrot_generator::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void video_mandelbrot_generator::thread_ap_CS_fsm_state80() {
    ap_CS_fsm_state80 = ap_CS_fsm.read()[79];
}

void video_mandelbrot_generator::thread_ap_CS_fsm_state81() {
    ap_CS_fsm_state81 = ap_CS_fsm.read()[80];
}

void video_mandelbrot_generator::thread_ap_CS_fsm_state82() {
    ap_CS_fsm_state82 = ap_CS_fsm.read()[81];
}

void video_mandelbrot_generator::thread_ap_CS_fsm_state83() {
    ap_CS_fsm_state83 = ap_CS_fsm.read()[82];
}

void video_mandelbrot_generator::thread_ap_CS_fsm_state84() {
    ap_CS_fsm_state84 = ap_CS_fsm.read()[83];
}

void video_mandelbrot_generator::thread_ap_block_state2() {
    ap_block_state2 = (esl_seteq<1,2,2>(VIDEO_OUT_V_data_V_1_state.read(), ap_const_lv2_1) || esl_seteq<1,2,2>(ap_const_lv2_1, VIDEO_OUT_V_keep_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, VIDEO_OUT_V_strb_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, VIDEO_OUT_V_user_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, VIDEO_OUT_V_last_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, VIDEO_OUT_V_id_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, VIDEO_OUT_V_dest_V_1_state.read()) || (esl_seteq<1,1,1>(ap_const_logic_0, m_axis_video_TREADY.read()) && 
  esl_seteq<1,2,2>(VIDEO_OUT_V_data_V_1_state.read(), ap_const_lv2_3)) || (esl_seteq<1,1,1>(ap_const_logic_0, m_axis_video_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, VIDEO_OUT_V_keep_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, m_axis_video_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, VIDEO_OUT_V_strb_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, m_axis_video_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, VIDEO_OUT_V_user_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, m_axis_video_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, VIDEO_OUT_V_last_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, m_axis_video_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, VIDEO_OUT_V_id_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, m_axis_video_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, VIDEO_OUT_V_dest_V_1_state.read())));
}

void video_mandelbrot_generator::thread_ap_block_state60_io() {
    ap_block_state60_io = (esl_seteq<1,1,1>(ap_const_lv1_0, and_ln51_fu_396_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, VIDEO_OUT_V_data_V_1_ack_in.read()));
}

void video_mandelbrot_generator::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,2,2>(VIDEO_OUT_V_data_V_1_state.read(), ap_const_lv2_1) || esl_seteq<1,2,2>(ap_const_lv2_1, VIDEO_OUT_V_keep_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, VIDEO_OUT_V_strb_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, VIDEO_OUT_V_user_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, VIDEO_OUT_V_last_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, VIDEO_OUT_V_id_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, VIDEO_OUT_V_dest_V_1_state.read()) || (esl_seteq<1,1,1>(ap_const_logic_0, m_axis_video_TREADY.read()) && 
  esl_seteq<1,2,2>(VIDEO_OUT_V_data_V_1_state.read(), ap_const_lv2_3)) || (esl_seteq<1,1,1>(ap_const_logic_0, m_axis_video_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, VIDEO_OUT_V_keep_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, m_axis_video_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, VIDEO_OUT_V_strb_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, m_axis_video_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, VIDEO_OUT_V_user_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, m_axis_video_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, VIDEO_OUT_V_last_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, m_axis_video_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, VIDEO_OUT_V_id_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, m_axis_video_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, VIDEO_OUT_V_dest_V_1_state.read()))) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln24_fu_298_p2.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void video_mandelbrot_generator::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void video_mandelbrot_generator::thread_ap_phi_mux_isquare_0_phi_fu_194_p4() {
    ap_phi_mux_isquare_0_phi_fu_194_p4 = isquare_0_reg_190.read();
}

void video_mandelbrot_generator::thread_ap_phi_mux_rsquare_0_phi_fu_182_p4() {
    ap_phi_mux_rsquare_0_phi_fu_182_p4 = rsquare_0_reg_178.read();
}

void video_mandelbrot_generator::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,2,2>(VIDEO_OUT_V_data_V_1_state.read(), ap_const_lv2_1) || esl_seteq<1,2,2>(ap_const_lv2_1, VIDEO_OUT_V_keep_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, VIDEO_OUT_V_strb_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, VIDEO_OUT_V_user_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, VIDEO_OUT_V_last_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, VIDEO_OUT_V_id_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, VIDEO_OUT_V_dest_V_1_state.read()) || (esl_seteq<1,1,1>(ap_const_logic_0, m_axis_video_TREADY.read()) && 
  esl_seteq<1,2,2>(VIDEO_OUT_V_data_V_1_state.read(), ap_const_lv2_3)) || (esl_seteq<1,1,1>(ap_const_logic_0, m_axis_video_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, VIDEO_OUT_V_keep_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, m_axis_video_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, VIDEO_OUT_V_strb_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, m_axis_video_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, VIDEO_OUT_V_user_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, m_axis_video_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, VIDEO_OUT_V_last_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, m_axis_video_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, VIDEO_OUT_V_id_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, m_axis_video_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, VIDEO_OUT_V_dest_V_1_state.read()))) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln24_fu_298_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void video_mandelbrot_generator::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void video_mandelbrot_generator::thread_bitcast_ln51_fu_350_p1() {
    bitcast_ln51_fu_350_p1 = reg_284.read();
}

void video_mandelbrot_generator::thread_col_fu_327_p2() {
    col_fu_327_p2 = (!col_0_reg_167.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(col_0_reg_167.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void video_mandelbrot_generator::thread_grp_fu_225_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state84.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state83.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state80.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state60.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state60_io.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state81.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state82.read()))) {
        grp_fu_225_ce = ap_const_logic_0;
    } else {
        grp_fu_225_ce = ap_const_logic_1;
    }
}

void video_mandelbrot_generator::thread_grp_fu_225_opcode() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state60.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, and_ln51_fu_396_p2.read()))) {
        grp_fu_225_opcode = ap_const_lv2_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state54.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state70.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state75.read()))) {
        grp_fu_225_opcode = ap_const_lv2_0;
    } else {
        grp_fu_225_opcode = "XX";
    }
}

void video_mandelbrot_generator::thread_grp_fu_225_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state70.read())) {
        grp_fu_225_p0 = reg_292.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state75.read()))) {
        grp_fu_225_p0 = reg_284.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state60.read())) {
        grp_fu_225_p0 = rsquare_0_reg_178.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state54.read())) {
        grp_fu_225_p0 = ap_phi_mux_rsquare_0_phi_fu_182_p4.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read()))) {
        grp_fu_225_p0 = reg_272.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()))) {
        grp_fu_225_p0 = reg_261.read();
    } else {
        grp_fu_225_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void video_mandelbrot_generator::thread_grp_fu_225_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state75.read())) {
        grp_fu_225_p1 = y_reg_493.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state70.read())) {
        grp_fu_225_p1 = reg_266.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read())) {
        grp_fu_225_p1 = reg_278.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state60.read())) {
        grp_fu_225_p1 = isquare_0_reg_190.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state54.read())) {
        grp_fu_225_p1 = ap_phi_mux_isquare_0_phi_fu_194_p4.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read())) {
        grp_fu_225_p1 = moveX_read_reg_429.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        grp_fu_225_p1 = ap_const_lv32_C419D89E;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        grp_fu_225_p1 = moveY_read_reg_424.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        grp_fu_225_p1 = ap_const_lv32_C3960000;
    } else {
        grp_fu_225_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void video_mandelbrot_generator::thread_grp_fu_235_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state64.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state69.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state60.read()) && 
          esl_seteq<1,1,1>(ap_block_state60_io.read(), ap_const_boolean_0)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state61.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state66.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state67.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state68.read()))) {
        grp_fu_235_ce = ap_const_logic_1;
    } else {
        grp_fu_235_ce = ap_const_logic_0;
    }
}

void video_mandelbrot_generator::thread_grp_fu_235_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read())) {
        grp_fu_235_p0 = reg_292.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state60.read())) {
        grp_fu_235_p0 = zsquare_0_reg_202.read();
    } else {
        grp_fu_235_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void video_mandelbrot_generator::thread_grp_fu_235_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read())) {
        grp_fu_235_p1 = isquare_0_reg_190.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state60.read())) {
        grp_fu_235_p1 = rsquare_0_reg_178.read();
    } else {
        grp_fu_235_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void video_mandelbrot_generator::thread_grp_fu_242_p0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state75.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state80.read()))) {
        grp_fu_242_p0 = reg_284.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read())) {
        grp_fu_242_p0 = reg_278.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()))) {
        grp_fu_242_p0 = reg_272.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        grp_fu_242_p0 = reg_266.read();
    } else {
        grp_fu_242_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void video_mandelbrot_generator::thread_grp_fu_242_p1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state75.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state80.read()))) {
        grp_fu_242_p1 = reg_284.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read())) {
        grp_fu_242_p1 = ap_const_lv32_3FC00000;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read())) {
        grp_fu_242_p1 = ap_const_lv32_3B23D70A;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()))) {
        grp_fu_242_p1 = zoom_read_reg_419.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        grp_fu_242_p1 = ap_const_lv32_3B5A740E;
    } else {
        grp_fu_242_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void video_mandelbrot_generator::thread_grp_fu_253_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          !(esl_seteq<1,2,2>(VIDEO_OUT_V_data_V_1_state.read(), ap_const_lv2_1) || esl_seteq<1,2,2>(ap_const_lv2_1, VIDEO_OUT_V_keep_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, VIDEO_OUT_V_strb_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, VIDEO_OUT_V_user_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, VIDEO_OUT_V_last_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, VIDEO_OUT_V_id_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, VIDEO_OUT_V_dest_V_1_state.read()) || (esl_seteq<1,1,1>(ap_const_logic_0, m_axis_video_TREADY.read()) && 
  esl_seteq<1,2,2>(VIDEO_OUT_V_data_V_1_state.read(), ap_const_lv2_3)) || (esl_seteq<1,1,1>(ap_const_logic_0, m_axis_video_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, VIDEO_OUT_V_keep_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, m_axis_video_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, VIDEO_OUT_V_strb_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, m_axis_video_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, VIDEO_OUT_V_user_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, m_axis_video_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, VIDEO_OUT_V_last_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, m_axis_video_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, VIDEO_OUT_V_id_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, m_axis_video_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, VIDEO_OUT_V_dest_V_1_state.read())))) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()))) {
        grp_fu_253_ce = ap_const_logic_1;
    } else {
        grp_fu_253_ce = ap_const_logic_0;
    }
}

void video_mandelbrot_generator::thread_grp_fu_253_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        grp_fu_253_p0 = zext_ln40_fu_345_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        grp_fu_253_p0 = zext_ln44_fu_310_p1.read();
    } else {
        grp_fu_253_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void video_mandelbrot_generator::thread_grp_fu_256_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state60.read()) && 
          esl_seteq<1,1,1>(ap_block_state60_io.read(), ap_const_boolean_0)))) {
        grp_fu_256_ce = ap_const_logic_1;
    } else {
        grp_fu_256_ce = ap_const_logic_0;
    }
}

void video_mandelbrot_generator::thread_icmp_ln24_fu_298_p2() {
    icmp_ln24_fu_298_p2 = (!row_0_reg_155.read().is_01() || !ap_const_lv10_258.is_01())? sc_lv<1>(): sc_lv<1>(row_0_reg_155.read() == ap_const_lv10_258);
}

void video_mandelbrot_generator::thread_icmp_ln26_fu_321_p2() {
    icmp_ln26_fu_321_p2 = (!col_0_reg_167.read().is_01() || !ap_const_lv10_320.is_01())? sc_lv<1>(): sc_lv<1>(col_0_reg_167.read() == ap_const_lv10_320);
}

void video_mandelbrot_generator::thread_icmp_ln51_1_fu_368_p2() {
    icmp_ln51_1_fu_368_p2 = (!tmp_1_fu_354_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_1_fu_354_p4.read() != ap_const_lv8_FF);
}

void video_mandelbrot_generator::thread_icmp_ln51_2_fu_374_p2() {
    icmp_ln51_2_fu_374_p2 = (!trunc_ln51_fu_364_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln51_fu_364_p1.read() == ap_const_lv23_0);
}

void video_mandelbrot_generator::thread_icmp_ln51_fu_390_p2() {
    icmp_ln51_fu_390_p2 = (!pixel_R_reg_214.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(pixel_R_reg_214.read() != ap_const_lv8_FF);
}

void video_mandelbrot_generator::thread_iter_fu_402_p2() {
    iter_fu_402_p2 = (!ap_const_lv8_1.is_01() || !pixel_R_reg_214.read().is_01())? sc_lv<8>(): (sc_biguint<8>(ap_const_lv8_1) + sc_biguint<8>(pixel_R_reg_214.read()));
}

void video_mandelbrot_generator::thread_m_axis_video_TDATA() {
    m_axis_video_TDATA = VIDEO_OUT_V_data_V_1_data_out.read();
}

void video_mandelbrot_generator::thread_m_axis_video_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state60.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, and_ln51_fu_396_p2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state84.read()))) {
        m_axis_video_TDATA_blk_n = VIDEO_OUT_V_data_V_1_state.read()[1];
    } else {
        m_axis_video_TDATA_blk_n = ap_const_logic_1;
    }
}

void video_mandelbrot_generator::thread_m_axis_video_TDEST() {
    m_axis_video_TDEST = VIDEO_OUT_V_dest_V_1_data_out.read();
}

void video_mandelbrot_generator::thread_m_axis_video_TID() {
    m_axis_video_TID = VIDEO_OUT_V_id_V_1_data_out.read();
}

void video_mandelbrot_generator::thread_m_axis_video_TKEEP() {
    m_axis_video_TKEEP = VIDEO_OUT_V_keep_V_1_data_out.read();
}

void video_mandelbrot_generator::thread_m_axis_video_TLAST() {
    m_axis_video_TLAST = VIDEO_OUT_V_last_V_1_data_out.read();
}

void video_mandelbrot_generator::thread_m_axis_video_TSTRB() {
    m_axis_video_TSTRB = VIDEO_OUT_V_strb_V_1_data_out.read();
}

void video_mandelbrot_generator::thread_m_axis_video_TUSER() {
    m_axis_video_TUSER = VIDEO_OUT_V_user_V_1_data_out.read();
}

void video_mandelbrot_generator::thread_m_axis_video_TVALID() {
    m_axis_video_TVALID = VIDEO_OUT_V_dest_V_1_state.read()[0];
}

void video_mandelbrot_generator::thread_or_ln29_fu_333_p2() {
    or_ln29_fu_333_p2 = (col_0_reg_167.read() | row_0_reg_155.read());
}

void video_mandelbrot_generator::thread_or_ln51_fu_380_p2() {
    or_ln51_fu_380_p2 = (icmp_ln51_2_reg_475.read() | icmp_ln51_1_reg_470.read());
}

void video_mandelbrot_generator::thread_pixel_out_V_fu_408_p4() {
    pixel_out_V_fu_408_p4 = esl_concat<16,8>(esl_concat<8,8>(pixel_R_reg_214.read(), pixel_R_reg_214.read()), ap_const_lv8_FF);
}

void video_mandelbrot_generator::thread_row_fu_304_p2() {
    row_fu_304_p2 = (!row_0_reg_155.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(row_0_reg_155.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void video_mandelbrot_generator::thread_tmp_1_fu_354_p4() {
    tmp_1_fu_354_p4 = bitcast_ln51_fu_350_p1.read().range(30, 23);
}

void video_mandelbrot_generator::thread_tmp_last_V_fu_315_p2() {
    tmp_last_V_fu_315_p2 = (!row_0_reg_155.read().is_01() || !ap_const_lv10_31F.is_01())? sc_lv<1>(): sc_lv<1>(row_0_reg_155.read() == ap_const_lv10_31F);
}

void video_mandelbrot_generator::thread_tmp_user_V_fu_339_p2() {
    tmp_user_V_fu_339_p2 = (!or_ln29_fu_333_p2.read().is_01() || !ap_const_lv10_0.is_01())? sc_lv<1>(): sc_lv<1>(or_ln29_fu_333_p2.read() == ap_const_lv10_0);
}

void video_mandelbrot_generator::thread_trunc_ln51_fu_364_p1() {
    trunc_ln51_fu_364_p1 = bitcast_ln51_fu_350_p1.read().range(23-1, 0);
}

void video_mandelbrot_generator::thread_zext_ln40_fu_345_p1() {
    zext_ln40_fu_345_p1 = esl_zext<32,10>(col_0_reg_167.read());
}

void video_mandelbrot_generator::thread_zext_ln44_fu_310_p1() {
    zext_ln44_fu_310_p1 = esl_zext<32,10>(row_0_reg_155.read());
}

void video_mandelbrot_generator::thread_ap_NS_fsm() {
    if (esl_seteq<1,84,84>(ap_CS_fsm.read(), ap_ST_fsm_state1))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state2;
        } else {
            ap_NS_fsm = ap_ST_fsm_state1;
        }
    }
    else if (esl_seteq<1,84,84>(ap_CS_fsm.read(), ap_ST_fsm_state2))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && !(esl_seteq<1,2,2>(VIDEO_OUT_V_data_V_1_state.read(), ap_const_lv2_1) || esl_seteq<1,2,2>(ap_const_lv2_1, VIDEO_OUT_V_keep_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, VIDEO_OUT_V_strb_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, VIDEO_OUT_V_user_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, VIDEO_OUT_V_last_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, VIDEO_OUT_V_id_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, VIDEO_OUT_V_dest_V_1_state.read()) || (esl_seteq<1,1,1>(ap_const_logic_0, m_axis_video_TREADY.read()) && 
  esl_seteq<1,2,2>(VIDEO_OUT_V_data_V_1_state.read(), ap_const_lv2_3)) || (esl_seteq<1,1,1>(ap_const_logic_0, m_axis_video_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, VIDEO_OUT_V_keep_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, m_axis_video_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, VIDEO_OUT_V_strb_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, m_axis_video_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, VIDEO_OUT_V_user_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, m_axis_video_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, VIDEO_OUT_V_last_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, m_axis_video_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, VIDEO_OUT_V_id_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, m_axis_video_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, VIDEO_OUT_V_dest_V_1_state.read()))) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln24_fu_298_p2.read()))) {
            ap_NS_fsm = ap_ST_fsm_state1;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && !(esl_seteq<1,2,2>(VIDEO_OUT_V_data_V_1_state.read(), ap_const_lv2_1) || esl_seteq<1,2,2>(ap_const_lv2_1, VIDEO_OUT_V_keep_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, VIDEO_OUT_V_strb_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, VIDEO_OUT_V_user_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, VIDEO_OUT_V_last_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, VIDEO_OUT_V_id_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, VIDEO_OUT_V_dest_V_1_state.read()) || (esl_seteq<1,1,1>(ap_const_logic_0, m_axis_video_TREADY.read()) && 
  esl_seteq<1,2,2>(VIDEO_OUT_V_data_V_1_state.read(), ap_const_lv2_3)) || (esl_seteq<1,1,1>(ap_const_logic_0, m_axis_video_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, VIDEO_OUT_V_keep_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, m_axis_video_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, VIDEO_OUT_V_strb_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, m_axis_video_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, VIDEO_OUT_V_user_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, m_axis_video_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, VIDEO_OUT_V_last_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, m_axis_video_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, VIDEO_OUT_V_id_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, m_axis_video_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, VIDEO_OUT_V_dest_V_1_state.read()))) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln24_fu_298_p2.read()))) {
            ap_NS_fsm = ap_ST_fsm_state3;
        } else {
            ap_NS_fsm = ap_ST_fsm_state2;
        }
    }
    else if (esl_seteq<1,84,84>(ap_CS_fsm.read(), ap_ST_fsm_state3))
    {
        ap_NS_fsm = ap_ST_fsm_state4;
    }
    else if (esl_seteq<1,84,84>(ap_CS_fsm.read(), ap_ST_fsm_state4))
    {
        ap_NS_fsm = ap_ST_fsm_state5;
    }
    else if (esl_seteq<1,84,84>(ap_CS_fsm.read(), ap_ST_fsm_state5))
    {
        ap_NS_fsm = ap_ST_fsm_state6;
    }
    else if (esl_seteq<1,84,84>(ap_CS_fsm.read(), ap_ST_fsm_state6))
    {
        ap_NS_fsm = ap_ST_fsm_state7;
    }
    else if (esl_seteq<1,84,84>(ap_CS_fsm.read(), ap_ST_fsm_state7))
    {
        ap_NS_fsm = ap_ST_fsm_state8;
    }
    else if (esl_seteq<1,84,84>(ap_CS_fsm.read(), ap_ST_fsm_state8))
    {
        ap_NS_fsm = ap_ST_fsm_state9;
    }
    else if (esl_seteq<1,84,84>(ap_CS_fsm.read(), ap_ST_fsm_state9))
    {
        ap_NS_fsm = ap_ST_fsm_state10;
    }
    else if (esl_seteq<1,84,84>(ap_CS_fsm.read(), ap_ST_fsm_state10))
    {
        ap_NS_fsm = ap_ST_fsm_state11;
    }
    else if (esl_seteq<1,84,84>(ap_CS_fsm.read(), ap_ST_fsm_state11))
    {
        ap_NS_fsm = ap_ST_fsm_state12;
    }
    else if (esl_seteq<1,84,84>(ap_CS_fsm.read(), ap_ST_fsm_state12))
    {
        ap_NS_fsm = ap_ST_fsm_state13;
    }
    else if (esl_seteq<1,84,84>(ap_CS_fsm.read(), ap_ST_fsm_state13))
    {
        ap_NS_fsm = ap_ST_fsm_state14;
    }
    else if (esl_seteq<1,84,84>(ap_CS_fsm.read(), ap_ST_fsm_state14))
    {
        ap_NS_fsm = ap_ST_fsm_state15;
    }
    else if (esl_seteq<1,84,84>(ap_CS_fsm.read(), ap_ST_fsm_state15))
    {
        ap_NS_fsm = ap_ST_fsm_state16;
    }
    else if (esl_seteq<1,84,84>(ap_CS_fsm.read(), ap_ST_fsm_state16))
    {
        ap_NS_fsm = ap_ST_fsm_state17;
    }
    else if (esl_seteq<1,84,84>(ap_CS_fsm.read(), ap_ST_fsm_state17))
    {
        ap_NS_fsm = ap_ST_fsm_state18;
    }
    else if (esl_seteq<1,84,84>(ap_CS_fsm.read(), ap_ST_fsm_state18))
    {
        ap_NS_fsm = ap_ST_fsm_state19;
    }
    else if (esl_seteq<1,84,84>(ap_CS_fsm.read(), ap_ST_fsm_state19))
    {
        ap_NS_fsm = ap_ST_fsm_state20;
    }
    else if (esl_seteq<1,84,84>(ap_CS_fsm.read(), ap_ST_fsm_state20))
    {
        ap_NS_fsm = ap_ST_fsm_state21;
    }
    else if (esl_seteq<1,84,84>(ap_CS_fsm.read(), ap_ST_fsm_state21))
    {
        ap_NS_fsm = ap_ST_fsm_state22;
    }
    else if (esl_seteq<1,84,84>(ap_CS_fsm.read(), ap_ST_fsm_state22))
    {
        ap_NS_fsm = ap_ST_fsm_state23;
    }
    else if (esl_seteq<1,84,84>(ap_CS_fsm.read(), ap_ST_fsm_state23))
    {
        ap_NS_fsm = ap_ST_fsm_state24;
    }
    else if (esl_seteq<1,84,84>(ap_CS_fsm.read(), ap_ST_fsm_state24))
    {
        ap_NS_fsm = ap_ST_fsm_state25;
    }
    else if (esl_seteq<1,84,84>(ap_CS_fsm.read(), ap_ST_fsm_state25))
    {
        ap_NS_fsm = ap_ST_fsm_state26;
    }
    else if (esl_seteq<1,84,84>(ap_CS_fsm.read(), ap_ST_fsm_state26))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln26_fu_321_p2.read()))) {
            ap_NS_fsm = ap_ST_fsm_state2;
        } else {
            ap_NS_fsm = ap_ST_fsm_state27;
        }
    }
    else if (esl_seteq<1,84,84>(ap_CS_fsm.read(), ap_ST_fsm_state27))
    {
        ap_NS_fsm = ap_ST_fsm_state28;
    }
    else if (esl_seteq<1,84,84>(ap_CS_fsm.read(), ap_ST_fsm_state28))
    {
        ap_NS_fsm = ap_ST_fsm_state29;
    }
    else if (esl_seteq<1,84,84>(ap_CS_fsm.read(), ap_ST_fsm_state29))
    {
        ap_NS_fsm = ap_ST_fsm_state30;
    }
    else if (esl_seteq<1,84,84>(ap_CS_fsm.read(), ap_ST_fsm_state30))
    {
        ap_NS_fsm = ap_ST_fsm_state31;
    }
    else if (esl_seteq<1,84,84>(ap_CS_fsm.read(), ap_ST_fsm_state31))
    {
        ap_NS_fsm = ap_ST_fsm_state32;
    }
    else if (esl_seteq<1,84,84>(ap_CS_fsm.read(), ap_ST_fsm_state32))
    {
        ap_NS_fsm = ap_ST_fsm_state33;
    }
    else if (esl_seteq<1,84,84>(ap_CS_fsm.read(), ap_ST_fsm_state33))
    {
        ap_NS_fsm = ap_ST_fsm_state34;
    }
    else if (esl_seteq<1,84,84>(ap_CS_fsm.read(), ap_ST_fsm_state34))
    {
        ap_NS_fsm = ap_ST_fsm_state35;
    }
    else if (esl_seteq<1,84,84>(ap_CS_fsm.read(), ap_ST_fsm_state35))
    {
        ap_NS_fsm = ap_ST_fsm_state36;
    }
    else if (esl_seteq<1,84,84>(ap_CS_fsm.read(), ap_ST_fsm_state36))
    {
        ap_NS_fsm = ap_ST_fsm_state37;
    }
    else if (esl_seteq<1,84,84>(ap_CS_fsm.read(), ap_ST_fsm_state37))
    {
        ap_NS_fsm = ap_ST_fsm_state38;
    }
    else if (esl_seteq<1,84,84>(ap_CS_fsm.read(), ap_ST_fsm_state38))
    {
        ap_NS_fsm = ap_ST_fsm_state39;
    }
    else if (esl_seteq<1,84,84>(ap_CS_fsm.read(), ap_ST_fsm_state39))
    {
        ap_NS_fsm = ap_ST_fsm_state40;
    }
    else if (esl_seteq<1,84,84>(ap_CS_fsm.read(), ap_ST_fsm_state40))
    {
        ap_NS_fsm = ap_ST_fsm_state41;
    }
    else if (esl_seteq<1,84,84>(ap_CS_fsm.read(), ap_ST_fsm_state41))
    {
        ap_NS_fsm = ap_ST_fsm_state42;
    }
    else if (esl_seteq<1,84,84>(ap_CS_fsm.read(), ap_ST_fsm_state42))
    {
        ap_NS_fsm = ap_ST_fsm_state43;
    }
    else if (esl_seteq<1,84,84>(ap_CS_fsm.read(), ap_ST_fsm_state43))
    {
        ap_NS_fsm = ap_ST_fsm_state44;
    }
    else if (esl_seteq<1,84,84>(ap_CS_fsm.read(), ap_ST_fsm_state44))
    {
        ap_NS_fsm = ap_ST_fsm_state45;
    }
    else if (esl_seteq<1,84,84>(ap_CS_fsm.read(), ap_ST_fsm_state45))
    {
        ap_NS_fsm = ap_ST_fsm_state46;
    }
    else if (esl_seteq<1,84,84>(ap_CS_fsm.read(), ap_ST_fsm_state46))
    {
        ap_NS_fsm = ap_ST_fsm_state47;
    }
    else if (esl_seteq<1,84,84>(ap_CS_fsm.read(), ap_ST_fsm_state47))
    {
        ap_NS_fsm = ap_ST_fsm_state48;
    }
    else if (esl_seteq<1,84,84>(ap_CS_fsm.read(), ap_ST_fsm_state48))
    {
        ap_NS_fsm = ap_ST_fsm_state49;
    }
    else if (esl_seteq<1,84,84>(ap_CS_fsm.read(), ap_ST_fsm_state49))
    {
        ap_NS_fsm = ap_ST_fsm_state50;
    }
    else if (esl_seteq<1,84,84>(ap_CS_fsm.read(), ap_ST_fsm_state50))
    {
        ap_NS_fsm = ap_ST_fsm_state51;
    }
    else if (esl_seteq<1,84,84>(ap_CS_fsm.read(), ap_ST_fsm_state51))
    {
        ap_NS_fsm = ap_ST_fsm_state52;
    }
    else if (esl_seteq<1,84,84>(ap_CS_fsm.read(), ap_ST_fsm_state52))
    {
        ap_NS_fsm = ap_ST_fsm_state53;
    }
    else if (esl_seteq<1,84,84>(ap_CS_fsm.read(), ap_ST_fsm_state53))
    {
        ap_NS_fsm = ap_ST_fsm_state54;
    }
    else if (esl_seteq<1,84,84>(ap_CS_fsm.read(), ap_ST_fsm_state54))
    {
        ap_NS_fsm = ap_ST_fsm_state55;
    }
    else if (esl_seteq<1,84,84>(ap_CS_fsm.read(), ap_ST_fsm_state55))
    {
        ap_NS_fsm = ap_ST_fsm_state56;
    }
    else if (esl_seteq<1,84,84>(ap_CS_fsm.read(), ap_ST_fsm_state56))
    {
        ap_NS_fsm = ap_ST_fsm_state57;
    }
    else if (esl_seteq<1,84,84>(ap_CS_fsm.read(), ap_ST_fsm_state57))
    {
        ap_NS_fsm = ap_ST_fsm_state58;
    }
    else if (esl_seteq<1,84,84>(ap_CS_fsm.read(), ap_ST_fsm_state58))
    {
        ap_NS_fsm = ap_ST_fsm_state59;
    }
    else if (esl_seteq<1,84,84>(ap_CS_fsm.read(), ap_ST_fsm_state59))
    {
        ap_NS_fsm = ap_ST_fsm_state60;
    }
    else if (esl_seteq<1,84,84>(ap_CS_fsm.read(), ap_ST_fsm_state60))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state60.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, and_ln51_fu_396_p2.read()) && esl_seteq<1,1,1>(ap_block_state60_io.read(), ap_const_boolean_0))) {
            ap_NS_fsm = ap_ST_fsm_state84;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state60.read()) && esl_seteq<1,1,1>(ap_block_state60_io.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, and_ln51_fu_396_p2.read()))) {
            ap_NS_fsm = ap_ST_fsm_state61;
        } else {
            ap_NS_fsm = ap_ST_fsm_state60;
        }
    }
    else if (esl_seteq<1,84,84>(ap_CS_fsm.read(), ap_ST_fsm_state61))
    {
        ap_NS_fsm = ap_ST_fsm_state62;
    }
    else if (esl_seteq<1,84,84>(ap_CS_fsm.read(), ap_ST_fsm_state62))
    {
        ap_NS_fsm = ap_ST_fsm_state63;
    }
    else if (esl_seteq<1,84,84>(ap_CS_fsm.read(), ap_ST_fsm_state63))
    {
        ap_NS_fsm = ap_ST_fsm_state64;
    }
    else if (esl_seteq<1,84,84>(ap_CS_fsm.read(), ap_ST_fsm_state64))
    {
        ap_NS_fsm = ap_ST_fsm_state65;
    }
    else if (esl_seteq<1,84,84>(ap_CS_fsm.read(), ap_ST_fsm_state65))
    {
        ap_NS_fsm = ap_ST_fsm_state66;
    }
    else if (esl_seteq<1,84,84>(ap_CS_fsm.read(), ap_ST_fsm_state66))
    {
        ap_NS_fsm = ap_ST_fsm_state67;
    }
    else if (esl_seteq<1,84,84>(ap_CS_fsm.read(), ap_ST_fsm_state67))
    {
        ap_NS_fsm = ap_ST_fsm_state68;
    }
    else if (esl_seteq<1,84,84>(ap_CS_fsm.read(), ap_ST_fsm_state68))
    {
        ap_NS_fsm = ap_ST_fsm_state69;
    }
    else if (esl_seteq<1,84,84>(ap_CS_fsm.read(), ap_ST_fsm_state69))
    {
        ap_NS_fsm = ap_ST_fsm_state70;
    }
    else if (esl_seteq<1,84,84>(ap_CS_fsm.read(), ap_ST_fsm_state70))
    {
        ap_NS_fsm = ap_ST_fsm_state71;
    }
    else if (esl_seteq<1,84,84>(ap_CS_fsm.read(), ap_ST_fsm_state71))
    {
        ap_NS_fsm = ap_ST_fsm_state72;
    }
    else if (esl_seteq<1,84,84>(ap_CS_fsm.read(), ap_ST_fsm_state72))
    {
        ap_NS_fsm = ap_ST_fsm_state73;
    }
    else if (esl_seteq<1,84,84>(ap_CS_fsm.read(), ap_ST_fsm_state73))
    {
        ap_NS_fsm = ap_ST_fsm_state74;
    }
    else if (esl_seteq<1,84,84>(ap_CS_fsm.read(), ap_ST_fsm_state74))
    {
        ap_NS_fsm = ap_ST_fsm_state75;
    }
    else if (esl_seteq<1,84,84>(ap_CS_fsm.read(), ap_ST_fsm_state75))
    {
        ap_NS_fsm = ap_ST_fsm_state76;
    }
    else if (esl_seteq<1,84,84>(ap_CS_fsm.read(), ap_ST_fsm_state76))
    {
        ap_NS_fsm = ap_ST_fsm_state77;
    }
    else if (esl_seteq<1,84,84>(ap_CS_fsm.read(), ap_ST_fsm_state77))
    {
        ap_NS_fsm = ap_ST_fsm_state78;
    }
    else if (esl_seteq<1,84,84>(ap_CS_fsm.read(), ap_ST_fsm_state78))
    {
        ap_NS_fsm = ap_ST_fsm_state79;
    }
    else if (esl_seteq<1,84,84>(ap_CS_fsm.read(), ap_ST_fsm_state79))
    {
        ap_NS_fsm = ap_ST_fsm_state80;
    }
    else if (esl_seteq<1,84,84>(ap_CS_fsm.read(), ap_ST_fsm_state80))
    {
        ap_NS_fsm = ap_ST_fsm_state81;
    }
    else if (esl_seteq<1,84,84>(ap_CS_fsm.read(), ap_ST_fsm_state81))
    {
        ap_NS_fsm = ap_ST_fsm_state82;
    }
    else if (esl_seteq<1,84,84>(ap_CS_fsm.read(), ap_ST_fsm_state82))
    {
        ap_NS_fsm = ap_ST_fsm_state83;
    }
    else if (esl_seteq<1,84,84>(ap_CS_fsm.read(), ap_ST_fsm_state83))
    {
        ap_NS_fsm = ap_ST_fsm_state54;
    }
    else if (esl_seteq<1,84,84>(ap_CS_fsm.read(), ap_ST_fsm_state84))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state84.read()) && esl_seteq<1,1,1>(VIDEO_OUT_V_data_V_1_ack_in.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state26;
        } else {
            ap_NS_fsm = ap_ST_fsm_state84;
        }
    }
    else
    {
        ap_NS_fsm =  (sc_lv<84>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}
void video_mandelbrot_generator::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"m_axis_video_TDATA\" :  \"" << m_axis_video_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axis_video_TVALID\" :  \"" << m_axis_video_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axis_video_TREADY\" :  \"" << m_axis_video_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axis_video_TKEEP\" :  \"" << m_axis_video_TKEEP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axis_video_TSTRB\" :  \"" << m_axis_video_TSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axis_video_TUSER\" :  \"" << m_axis_video_TUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axis_video_TLAST\" :  \"" << m_axis_video_TLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axis_video_TID\" :  \"" << m_axis_video_TID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axis_video_TDEST\" :  \"" << m_axis_video_TDEST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_cmd_AWVALID\" :  \"" << s_axi_cmd_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_cmd_AWREADY\" :  \"" << s_axi_cmd_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_cmd_AWADDR\" :  \"" << s_axi_cmd_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_cmd_WVALID\" :  \"" << s_axi_cmd_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_cmd_WREADY\" :  \"" << s_axi_cmd_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_cmd_WDATA\" :  \"" << s_axi_cmd_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_cmd_WSTRB\" :  \"" << s_axi_cmd_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_cmd_ARVALID\" :  \"" << s_axi_cmd_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_cmd_ARREADY\" :  \"" << s_axi_cmd_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_cmd_ARADDR\" :  \"" << s_axi_cmd_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_cmd_RVALID\" :  \"" << s_axi_cmd_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_cmd_RREADY\" :  \"" << s_axi_cmd_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_cmd_RDATA\" :  \"" << s_axi_cmd_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_cmd_RRESP\" :  \"" << s_axi_cmd_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_cmd_BVALID\" :  \"" << s_axi_cmd_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_cmd_BREADY\" :  \"" << s_axi_cmd_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_cmd_BRESP\" :  \"" << s_axi_cmd_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

