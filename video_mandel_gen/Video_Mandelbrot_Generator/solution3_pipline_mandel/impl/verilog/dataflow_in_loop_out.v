// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dataflow_in_loop_out (
        v_assign,
        m_axis_video_TDATA,
        m_axis_video_TKEEP,
        m_axis_video_TSTRB,
        m_axis_video_TUSER,
        m_axis_video_TLAST,
        m_axis_video_TID,
        m_axis_video_TDEST,
        im_V,
        re_V,
        zoom_factor_V,
        ap_clk,
        ap_rst,
        v_assign_ap_vld,
        m_axis_video_TVALID,
        m_axis_video_TREADY,
        im_V_ap_vld,
        re_V_ap_vld,
        zoom_factor_V_ap_vld,
        ap_start,
        ap_done,
        ap_ready,
        ap_idle,
        ap_continue
);


input  [2:0] v_assign;
output  [23:0] m_axis_video_TDATA;
output  [2:0] m_axis_video_TKEEP;
output  [2:0] m_axis_video_TSTRB;
output  [0:0] m_axis_video_TUSER;
output  [0:0] m_axis_video_TLAST;
output  [0:0] m_axis_video_TID;
output  [0:0] m_axis_video_TDEST;
input  [17:0] im_V;
input  [17:0] re_V;
input  [17:0] zoom_factor_V;
input   ap_clk;
input   ap_rst;
input   v_assign_ap_vld;
output   m_axis_video_TVALID;
input   m_axis_video_TREADY;
input   im_V_ap_vld;
input   re_V_ap_vld;
input   zoom_factor_V_ap_vld;
input   ap_start;
output   ap_done;
output   ap_ready;
output   ap_idle;
input   ap_continue;

wire    inner_proc_U0_ap_start;
wire    inner_proc_U0_ap_done;
wire    inner_proc_U0_ap_continue;
wire    inner_proc_U0_ap_idle;
wire    inner_proc_U0_ap_ready;
wire   [23:0] inner_proc_U0_m_axis_video_TDATA;
wire    inner_proc_U0_m_axis_video_TVALID;
wire   [2:0] inner_proc_U0_m_axis_video_TKEEP;
wire   [2:0] inner_proc_U0_m_axis_video_TSTRB;
wire   [0:0] inner_proc_U0_m_axis_video_TUSER;
wire   [0:0] inner_proc_U0_m_axis_video_TLAST;
wire   [0:0] inner_proc_U0_m_axis_video_TID;
wire   [0:0] inner_proc_U0_m_axis_video_TDEST;
wire    ap_sync_continue;
wire    ap_sync_done;
wire    ap_sync_ready;
wire    inner_proc_U0_start_full_n;
wire    inner_proc_U0_start_write;

inner_proc inner_proc_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(inner_proc_U0_ap_start),
    .ap_done(inner_proc_U0_ap_done),
    .ap_continue(inner_proc_U0_ap_continue),
    .ap_idle(inner_proc_U0_ap_idle),
    .ap_ready(inner_proc_U0_ap_ready),
    .v_assign(v_assign),
    .m_axis_video_TDATA(inner_proc_U0_m_axis_video_TDATA),
    .m_axis_video_TVALID(inner_proc_U0_m_axis_video_TVALID),
    .m_axis_video_TREADY(m_axis_video_TREADY),
    .m_axis_video_TKEEP(inner_proc_U0_m_axis_video_TKEEP),
    .m_axis_video_TSTRB(inner_proc_U0_m_axis_video_TSTRB),
    .m_axis_video_TUSER(inner_proc_U0_m_axis_video_TUSER),
    .m_axis_video_TLAST(inner_proc_U0_m_axis_video_TLAST),
    .m_axis_video_TID(inner_proc_U0_m_axis_video_TID),
    .m_axis_video_TDEST(inner_proc_U0_m_axis_video_TDEST),
    .im_V(im_V),
    .re_V(re_V),
    .zoom_factor_V(zoom_factor_V)
);

assign ap_done = inner_proc_U0_ap_done;

assign ap_idle = inner_proc_U0_ap_idle;

assign ap_ready = inner_proc_U0_ap_ready;

assign ap_sync_continue = ap_continue;

assign ap_sync_done = inner_proc_U0_ap_done;

assign ap_sync_ready = inner_proc_U0_ap_ready;

assign inner_proc_U0_ap_continue = ap_continue;

assign inner_proc_U0_ap_start = ap_start;

assign inner_proc_U0_start_full_n = 1'b1;

assign inner_proc_U0_start_write = 1'b0;

assign m_axis_video_TDATA = inner_proc_U0_m_axis_video_TDATA;

assign m_axis_video_TDEST = inner_proc_U0_m_axis_video_TDEST;

assign m_axis_video_TID = inner_proc_U0_m_axis_video_TID;

assign m_axis_video_TKEEP = inner_proc_U0_m_axis_video_TKEEP;

assign m_axis_video_TLAST = inner_proc_U0_m_axis_video_TLAST;

assign m_axis_video_TSTRB = inner_proc_U0_m_axis_video_TSTRB;

assign m_axis_video_TUSER = inner_proc_U0_m_axis_video_TUSER;

assign m_axis_video_TVALID = inner_proc_U0_m_axis_video_TVALID;

endmodule //dataflow_in_loop_out
