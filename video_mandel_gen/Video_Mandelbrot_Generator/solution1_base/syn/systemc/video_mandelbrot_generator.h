// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _video_mandelbrot_generator_HH_
#define _video_mandelbrot_generator_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "video_mandelbrot_generator_cmd_s_axi.h"

namespace ap_rtl {

template<unsigned int C_S_AXI_CMD_ADDR_WIDTH = 6,
         unsigned int C_S_AXI_CMD_DATA_WIDTH = 32>
struct video_mandelbrot_generator : public sc_module {
    // Port declarations 29
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_out< sc_lv<24> > m_axis_video_TDATA;
    sc_out< sc_logic > m_axis_video_TVALID;
    sc_in< sc_logic > m_axis_video_TREADY;
    sc_out< sc_lv<3> > m_axis_video_TKEEP;
    sc_out< sc_lv<3> > m_axis_video_TSTRB;
    sc_out< sc_lv<1> > m_axis_video_TUSER;
    sc_out< sc_lv<1> > m_axis_video_TLAST;
    sc_out< sc_lv<1> > m_axis_video_TID;
    sc_out< sc_lv<1> > m_axis_video_TDEST;
    sc_in< sc_logic > s_axi_cmd_AWVALID;
    sc_out< sc_logic > s_axi_cmd_AWREADY;
    sc_in< sc_uint<C_S_AXI_CMD_ADDR_WIDTH> > s_axi_cmd_AWADDR;
    sc_in< sc_logic > s_axi_cmd_WVALID;
    sc_out< sc_logic > s_axi_cmd_WREADY;
    sc_in< sc_uint<C_S_AXI_CMD_DATA_WIDTH> > s_axi_cmd_WDATA;
    sc_in< sc_uint<C_S_AXI_CMD_DATA_WIDTH/8> > s_axi_cmd_WSTRB;
    sc_in< sc_logic > s_axi_cmd_ARVALID;
    sc_out< sc_logic > s_axi_cmd_ARREADY;
    sc_in< sc_uint<C_S_AXI_CMD_ADDR_WIDTH> > s_axi_cmd_ARADDR;
    sc_out< sc_logic > s_axi_cmd_RVALID;
    sc_in< sc_logic > s_axi_cmd_RREADY;
    sc_out< sc_uint<C_S_AXI_CMD_DATA_WIDTH> > s_axi_cmd_RDATA;
    sc_out< sc_lv<2> > s_axi_cmd_RRESP;
    sc_out< sc_logic > s_axi_cmd_BVALID;
    sc_in< sc_logic > s_axi_cmd_BREADY;
    sc_out< sc_lv<2> > s_axi_cmd_BRESP;
    sc_out< sc_logic > interrupt;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    video_mandelbrot_generator(sc_module_name name);
    SC_HAS_PROCESS(video_mandelbrot_generator);

    ~video_mandelbrot_generator();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    video_mandelbrot_generator_cmd_s_axi<C_S_AXI_CMD_ADDR_WIDTH,C_S_AXI_CMD_DATA_WIDTH>* video_mandelbrot_generator_cmd_s_axi_U;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_logic > ap_start;
    sc_signal< sc_logic > ap_done;
    sc_signal< sc_logic > ap_idle;
    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > ap_ready;
    sc_signal< sc_lv<24> > VIDEO_OUT_V_data_V_1_data_out;
    sc_signal< sc_logic > VIDEO_OUT_V_data_V_1_vld_in;
    sc_signal< sc_logic > VIDEO_OUT_V_data_V_1_vld_out;
    sc_signal< sc_logic > VIDEO_OUT_V_data_V_1_ack_in;
    sc_signal< sc_logic > VIDEO_OUT_V_data_V_1_ack_out;
    sc_signal< sc_lv<24> > VIDEO_OUT_V_data_V_1_payload_A;
    sc_signal< sc_lv<24> > VIDEO_OUT_V_data_V_1_payload_B;
    sc_signal< sc_logic > VIDEO_OUT_V_data_V_1_sel_rd;
    sc_signal< sc_logic > VIDEO_OUT_V_data_V_1_sel_wr;
    sc_signal< sc_logic > VIDEO_OUT_V_data_V_1_sel;
    sc_signal< sc_logic > VIDEO_OUT_V_data_V_1_load_A;
    sc_signal< sc_logic > VIDEO_OUT_V_data_V_1_load_B;
    sc_signal< sc_lv<2> > VIDEO_OUT_V_data_V_1_state;
    sc_signal< sc_logic > VIDEO_OUT_V_data_V_1_state_cmp_full;
    sc_signal< sc_lv<3> > VIDEO_OUT_V_keep_V_1_data_out;
    sc_signal< sc_logic > VIDEO_OUT_V_keep_V_1_vld_in;
    sc_signal< sc_logic > VIDEO_OUT_V_keep_V_1_vld_out;
    sc_signal< sc_logic > VIDEO_OUT_V_keep_V_1_ack_out;
    sc_signal< sc_logic > VIDEO_OUT_V_keep_V_1_sel_rd;
    sc_signal< sc_logic > VIDEO_OUT_V_keep_V_1_sel;
    sc_signal< sc_lv<2> > VIDEO_OUT_V_keep_V_1_state;
    sc_signal< sc_lv<3> > VIDEO_OUT_V_strb_V_1_data_out;
    sc_signal< sc_logic > VIDEO_OUT_V_strb_V_1_vld_in;
    sc_signal< sc_logic > VIDEO_OUT_V_strb_V_1_vld_out;
    sc_signal< sc_logic > VIDEO_OUT_V_strb_V_1_ack_out;
    sc_signal< sc_logic > VIDEO_OUT_V_strb_V_1_sel_rd;
    sc_signal< sc_logic > VIDEO_OUT_V_strb_V_1_sel;
    sc_signal< sc_lv<2> > VIDEO_OUT_V_strb_V_1_state;
    sc_signal< sc_lv<1> > VIDEO_OUT_V_user_V_1_data_out;
    sc_signal< sc_logic > VIDEO_OUT_V_user_V_1_vld_in;
    sc_signal< sc_logic > VIDEO_OUT_V_user_V_1_vld_out;
    sc_signal< sc_logic > VIDEO_OUT_V_user_V_1_ack_in;
    sc_signal< sc_logic > VIDEO_OUT_V_user_V_1_ack_out;
    sc_signal< sc_lv<1> > VIDEO_OUT_V_user_V_1_payload_A;
    sc_signal< sc_lv<1> > VIDEO_OUT_V_user_V_1_payload_B;
    sc_signal< sc_logic > VIDEO_OUT_V_user_V_1_sel_rd;
    sc_signal< sc_logic > VIDEO_OUT_V_user_V_1_sel_wr;
    sc_signal< sc_logic > VIDEO_OUT_V_user_V_1_sel;
    sc_signal< sc_logic > VIDEO_OUT_V_user_V_1_load_A;
    sc_signal< sc_logic > VIDEO_OUT_V_user_V_1_load_B;
    sc_signal< sc_lv<2> > VIDEO_OUT_V_user_V_1_state;
    sc_signal< sc_logic > VIDEO_OUT_V_user_V_1_state_cmp_full;
    sc_signal< sc_lv<1> > VIDEO_OUT_V_last_V_1_data_out;
    sc_signal< sc_logic > VIDEO_OUT_V_last_V_1_vld_in;
    sc_signal< sc_logic > VIDEO_OUT_V_last_V_1_vld_out;
    sc_signal< sc_logic > VIDEO_OUT_V_last_V_1_ack_in;
    sc_signal< sc_logic > VIDEO_OUT_V_last_V_1_ack_out;
    sc_signal< sc_lv<1> > VIDEO_OUT_V_last_V_1_payload_A;
    sc_signal< sc_lv<1> > VIDEO_OUT_V_last_V_1_payload_B;
    sc_signal< sc_logic > VIDEO_OUT_V_last_V_1_sel_rd;
    sc_signal< sc_logic > VIDEO_OUT_V_last_V_1_sel_wr;
    sc_signal< sc_logic > VIDEO_OUT_V_last_V_1_sel;
    sc_signal< sc_logic > VIDEO_OUT_V_last_V_1_load_A;
    sc_signal< sc_logic > VIDEO_OUT_V_last_V_1_load_B;
    sc_signal< sc_lv<2> > VIDEO_OUT_V_last_V_1_state;
    sc_signal< sc_logic > VIDEO_OUT_V_last_V_1_state_cmp_full;
    sc_signal< sc_lv<1> > VIDEO_OUT_V_id_V_1_data_out;
    sc_signal< sc_logic > VIDEO_OUT_V_id_V_1_vld_in;
    sc_signal< sc_logic > VIDEO_OUT_V_id_V_1_vld_out;
    sc_signal< sc_logic > VIDEO_OUT_V_id_V_1_ack_out;
    sc_signal< sc_logic > VIDEO_OUT_V_id_V_1_sel_rd;
    sc_signal< sc_logic > VIDEO_OUT_V_id_V_1_sel;
    sc_signal< sc_lv<2> > VIDEO_OUT_V_id_V_1_state;
    sc_signal< sc_lv<1> > VIDEO_OUT_V_dest_V_1_data_out;
    sc_signal< sc_logic > VIDEO_OUT_V_dest_V_1_vld_in;
    sc_signal< sc_logic > VIDEO_OUT_V_dest_V_1_vld_out;
    sc_signal< sc_logic > VIDEO_OUT_V_dest_V_1_ack_out;
    sc_signal< sc_logic > VIDEO_OUT_V_dest_V_1_sel_rd;
    sc_signal< sc_logic > VIDEO_OUT_V_dest_V_1_sel;
    sc_signal< sc_lv<2> > VIDEO_OUT_V_dest_V_1_state;
    sc_signal< sc_lv<18> > re_V;
    sc_signal< sc_lv<18> > im_V;
    sc_signal< sc_lv<18> > zoom_factor_V;
    sc_signal< sc_logic > m_axis_video_TDATA_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > icmp_ln27_fu_152_p2;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<3> > row_fu_142_p2;
    sc_signal< sc_lv<3> > row_reg_200;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< bool > ap_block_state2;
    sc_signal< sc_lv<4> > col_fu_158_p2;
    sc_signal< sc_lv<4> > col_reg_208;
    sc_signal< bool > ap_block_state3_io;
    sc_signal< sc_lv<1> > tmp_user_V_fu_170_p2;
    sc_signal< sc_lv<1> > tmp_last_V_fu_177_p2;
    sc_signal< sc_lv<24> > pixel_out_V_fu_188_p3;
    sc_signal< sc_lv<3> > p_Val2_1_reg_113;
    sc_signal< sc_lv<4> > p_Val2_s_reg_125;
    sc_signal< sc_lv<1> > icmp_ln25_fu_136_p2;
    sc_signal< sc_lv<3> > trunc_ln27_fu_148_p1;
    sc_signal< sc_lv<3> > or_ln30_fu_164_p2;
    sc_signal< sc_lv<8> > pixel_G_fu_184_p1;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_fsm_state1;
    static const sc_lv<4> ap_ST_fsm_state2;
    static const sc_lv<4> ap_ST_fsm_state3;
    static const sc_lv<4> ap_ST_fsm_state4;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const int C_S_AXI_DATA_WIDTH;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<3> ap_const_lv3_6;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<4> ap_const_lv4_8;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<4> ap_const_lv4_7;
    static const sc_lv<16> ap_const_lv16_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_VIDEO_OUT_V_data_V_1_ack_in();
    void thread_VIDEO_OUT_V_data_V_1_ack_out();
    void thread_VIDEO_OUT_V_data_V_1_data_out();
    void thread_VIDEO_OUT_V_data_V_1_load_A();
    void thread_VIDEO_OUT_V_data_V_1_load_B();
    void thread_VIDEO_OUT_V_data_V_1_sel();
    void thread_VIDEO_OUT_V_data_V_1_state_cmp_full();
    void thread_VIDEO_OUT_V_data_V_1_vld_in();
    void thread_VIDEO_OUT_V_data_V_1_vld_out();
    void thread_VIDEO_OUT_V_dest_V_1_ack_out();
    void thread_VIDEO_OUT_V_dest_V_1_data_out();
    void thread_VIDEO_OUT_V_dest_V_1_sel();
    void thread_VIDEO_OUT_V_dest_V_1_vld_in();
    void thread_VIDEO_OUT_V_dest_V_1_vld_out();
    void thread_VIDEO_OUT_V_id_V_1_ack_out();
    void thread_VIDEO_OUT_V_id_V_1_data_out();
    void thread_VIDEO_OUT_V_id_V_1_sel();
    void thread_VIDEO_OUT_V_id_V_1_vld_in();
    void thread_VIDEO_OUT_V_id_V_1_vld_out();
    void thread_VIDEO_OUT_V_keep_V_1_ack_out();
    void thread_VIDEO_OUT_V_keep_V_1_data_out();
    void thread_VIDEO_OUT_V_keep_V_1_sel();
    void thread_VIDEO_OUT_V_keep_V_1_vld_in();
    void thread_VIDEO_OUT_V_keep_V_1_vld_out();
    void thread_VIDEO_OUT_V_last_V_1_ack_in();
    void thread_VIDEO_OUT_V_last_V_1_ack_out();
    void thread_VIDEO_OUT_V_last_V_1_data_out();
    void thread_VIDEO_OUT_V_last_V_1_load_A();
    void thread_VIDEO_OUT_V_last_V_1_load_B();
    void thread_VIDEO_OUT_V_last_V_1_sel();
    void thread_VIDEO_OUT_V_last_V_1_state_cmp_full();
    void thread_VIDEO_OUT_V_last_V_1_vld_in();
    void thread_VIDEO_OUT_V_last_V_1_vld_out();
    void thread_VIDEO_OUT_V_strb_V_1_ack_out();
    void thread_VIDEO_OUT_V_strb_V_1_data_out();
    void thread_VIDEO_OUT_V_strb_V_1_sel();
    void thread_VIDEO_OUT_V_strb_V_1_vld_in();
    void thread_VIDEO_OUT_V_strb_V_1_vld_out();
    void thread_VIDEO_OUT_V_user_V_1_ack_in();
    void thread_VIDEO_OUT_V_user_V_1_ack_out();
    void thread_VIDEO_OUT_V_user_V_1_data_out();
    void thread_VIDEO_OUT_V_user_V_1_load_A();
    void thread_VIDEO_OUT_V_user_V_1_load_B();
    void thread_VIDEO_OUT_V_user_V_1_sel();
    void thread_VIDEO_OUT_V_user_V_1_state_cmp_full();
    void thread_VIDEO_OUT_V_user_V_1_vld_in();
    void thread_VIDEO_OUT_V_user_V_1_vld_out();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_block_state2();
    void thread_ap_block_state3_io();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_col_fu_158_p2();
    void thread_icmp_ln25_fu_136_p2();
    void thread_icmp_ln27_fu_152_p2();
    void thread_m_axis_video_TDATA();
    void thread_m_axis_video_TDATA_blk_n();
    void thread_m_axis_video_TDEST();
    void thread_m_axis_video_TID();
    void thread_m_axis_video_TKEEP();
    void thread_m_axis_video_TLAST();
    void thread_m_axis_video_TSTRB();
    void thread_m_axis_video_TUSER();
    void thread_m_axis_video_TVALID();
    void thread_or_ln30_fu_164_p2();
    void thread_pixel_G_fu_184_p1();
    void thread_pixel_out_V_fu_188_p3();
    void thread_row_fu_142_p2();
    void thread_tmp_last_V_fu_177_p2();
    void thread_tmp_user_V_fu_170_p2();
    void thread_trunc_ln27_fu_148_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
