// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module inner_proc (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        v_assign,
        m_axis_video_TDATA,
        m_axis_video_TVALID,
        m_axis_video_TREADY,
        m_axis_video_TKEEP,
        m_axis_video_TSTRB,
        m_axis_video_TUSER,
        m_axis_video_TLAST,
        m_axis_video_TID,
        m_axis_video_TDEST,
        im_V,
        re_V,
        zoom_factor_V
);

parameter    ap_ST_fsm_state1 = 10'd1;
parameter    ap_ST_fsm_state2 = 10'd2;
parameter    ap_ST_fsm_state3 = 10'd4;
parameter    ap_ST_fsm_state4 = 10'd8;
parameter    ap_ST_fsm_state5 = 10'd16;
parameter    ap_ST_fsm_pp0_stage0 = 10'd32;
parameter    ap_ST_fsm_pp0_stage1 = 10'd64;
parameter    ap_ST_fsm_pp0_stage2 = 10'd128;
parameter    ap_ST_fsm_pp0_stage3 = 10'd256;
parameter    ap_ST_fsm_state11 = 10'd512;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [2:0] v_assign;
output  [23:0] m_axis_video_TDATA;
output   m_axis_video_TVALID;
input   m_axis_video_TREADY;
output  [2:0] m_axis_video_TKEEP;
output  [2:0] m_axis_video_TSTRB;
output  [0:0] m_axis_video_TUSER;
output  [0:0] m_axis_video_TLAST;
output  [0:0] m_axis_video_TID;
output  [0:0] m_axis_video_TDEST;
input  [17:0] im_V;
input  [17:0] re_V;
input  [17:0] zoom_factor_V;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg m_axis_video_TVALID;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [9:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    m_axis_video_TDATA_blk_n;
wire    ap_CS_fsm_state11;
reg   [17:0] p_Val2_21_reg_279;
reg  signed [17:0] p_Val2_22_reg_290;
reg   [17:0] p_Val2_27_reg_302;
reg   [7:0] pixel_R_reg_313;
reg    ap_block_state1;
wire   [35:0] r_V_11_fu_383_p2;
reg   [35:0] r_V_11_reg_2936;
wire   [0:0] p_Result_2_fu_389_p3;
reg   [0:0] p_Result_2_reg_2943;
reg   [17:0] p_Val2_3_reg_2949;
reg   [0:0] p_Result_3_reg_2954;
wire   [0:0] xor_ln779_fu_423_p2;
reg   [0:0] xor_ln779_reg_2959;
wire   [0:0] xor_ln785_fu_429_p2;
reg   [0:0] xor_ln785_reg_2964;
wire  signed [35:0] sext_ln728_fu_443_p1;
reg  signed [35:0] sext_ln728_reg_2970;
wire   [34:0] r_V_14_fu_459_p2;
reg   [34:0] r_V_14_reg_2975;
wire   [0:0] p_Result_12_fu_466_p3;
reg   [0:0] p_Result_12_reg_2985;
wire   [0:0] grp_fu_325_p3;
reg   [0:0] p_Result_13_reg_2991;
wire   [0:0] xor_ln779_1_fu_482_p2;
reg   [0:0] xor_ln779_1_reg_2996;
wire   [0:0] xor_ln785_1_fu_488_p2;
reg   [0:0] xor_ln785_1_reg_3001;
wire  signed [18:0] sext_ln703_fu_494_p1;
reg  signed [18:0] sext_ln703_reg_3007;
wire   [29:0] ret_V_11_fu_513_p2;
reg   [29:0] ret_V_11_reg_3012;
wire   [0:0] tmp_12_fu_520_p3;
reg   [0:0] tmp_12_reg_3018;
wire   [0:0] p_Result_9_fu_527_p2;
reg   [0:0] p_Result_9_reg_3024;
wire  signed [15:0] sext_ln713_fu_543_p1;
reg  signed [15:0] sext_ln713_reg_3030;
wire   [0:0] grp_fu_332_p3;
reg   [0:0] p_Result_10_reg_3035;
reg   [0:0] tmp_14_reg_3041;
reg   [0:0] tmp_15_reg_3046;
wire   [3:0] col_fu_567_p2;
reg   [3:0] col_reg_3054;
wire    ap_CS_fsm_state2;
wire   [17:0] real_top_V_fu_683_p3;
reg  signed [17:0] real_top_V_reg_3059;
wire   [0:0] icmp_ln27_fu_561_p2;
wire   [17:0] p_Val2_4_fu_709_p2;
reg   [17:0] p_Val2_4_reg_3064;
wire   [0:0] and_ln781_fu_798_p2;
reg   [0:0] and_ln781_reg_3070;
wire   [0:0] and_ln786_fu_821_p2;
reg   [0:0] and_ln786_reg_3075;
wire   [0:0] underflow_fu_839_p2;
reg   [0:0] underflow_reg_3080;
wire   [0:0] or_ln340_fu_844_p2;
reg   [0:0] or_ln340_reg_3085;
wire  signed [15:0] p_Val2_12_fu_875_p2;
reg  signed [15:0] p_Val2_12_reg_3090;
wire   [0:0] carry_6_fu_894_p2;
reg   [0:0] carry_6_reg_3095;
wire   [0:0] p_Result_11_fu_899_p3;
reg   [0:0] p_Result_11_reg_3100;
reg   [0:0] Range2_all_ones_8_reg_3105;
wire   [0:0] and_ln781_2_fu_923_p2;
reg   [0:0] and_ln781_2_reg_3110;
wire   [0:0] and_ln786_5_fu_935_p2;
reg   [0:0] and_ln786_5_reg_3115;
wire   [0:0] underflow_2_fu_953_p2;
reg   [0:0] underflow_2_reg_3120;
wire   [17:0] imag_btm_V_fu_1135_p3;
reg  signed [17:0] imag_btm_V_reg_3126;
wire  signed [35:0] r_V_12_fu_2879_p2;
reg  signed [35:0] r_V_12_reg_3131;
wire    ap_CS_fsm_state3;
wire   [14:0] trunc_ln414_1_fu_1179_p1;
reg   [14:0] trunc_ln414_1_reg_3136;
wire  signed [35:0] r_V_15_fu_2886_p2;
reg  signed [35:0] r_V_15_reg_3141;
reg   [0:0] p_Result_15_reg_3148;
wire   [14:0] trunc_ln414_2_fu_1250_p1;
reg   [14:0] trunc_ln414_2_reg_3155;
reg   [1:0] p_Result_106_i_i_reg_3160;
reg   [2:0] p_Result_107_i_i_reg_3165;
wire   [0:0] p_Result_5_fu_1275_p3;
reg   [0:0] p_Result_5_reg_3171;
wire    ap_CS_fsm_state4;
wire   [17:0] p_Val2_8_fu_1316_p2;
reg   [17:0] p_Val2_8_reg_3177;
wire   [0:0] carry_4_fu_1336_p2;
reg   [0:0] carry_4_reg_3183;
wire   [0:0] p_Result_7_fu_1342_p3;
reg   [0:0] p_Result_7_reg_3189;
wire   [0:0] Range1_all_ones_1_fu_1376_p2;
reg   [0:0] Range1_all_ones_1_reg_3194;
wire   [0:0] Range1_all_zeros_1_fu_1382_p2;
reg   [0:0] Range1_all_zeros_1_reg_3200;
wire   [0:0] and_ln786_2_fu_1416_p2;
reg   [0:0] and_ln786_2_reg_3205;
wire   [17:0] p_Val2_17_fu_1452_p2;
reg   [17:0] p_Val2_17_reg_3211;
wire   [0:0] and_ln781_4_fu_1536_p2;
reg   [0:0] and_ln781_4_reg_3217;
wire   [0:0] xor_ln785_8_fu_1554_p2;
reg   [0:0] xor_ln785_8_reg_3222;
wire   [0:0] and_ln786_9_fu_1565_p2;
reg   [0:0] and_ln786_9_reg_3227;
wire   [0:0] underflow_4_fu_1583_p2;
reg   [0:0] underflow_4_reg_3232;
wire   [0:0] or_ln340_12_fu_1588_p2;
reg   [0:0] or_ln340_12_reg_3237;
wire   [2:0] trunc_ln27_fu_1594_p1;
reg   [2:0] trunc_ln27_reg_3242;
wire    ap_CS_fsm_state5;
wire  signed [17:0] x0_V_fu_1676_p3;
reg  signed [17:0] x0_V_reg_3247;
wire  signed [17:0] y0_V_fu_1789_p3;
reg  signed [17:0] y0_V_reg_3252;
wire  signed [19:0] sext_ln64_fu_1797_p1;
reg  signed [19:0] sext_ln64_reg_3257;
wire  signed [19:0] rhs_V_2_fu_1801_p1;
reg  signed [19:0] rhs_V_2_reg_3262;
wire   [0:0] icmp_ln64_fu_1805_p2;
reg   [0:0] icmp_ln64_reg_3267;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state6_pp0_stage0_iter0;
wire    ap_block_state10_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [7:0] iter_fu_1811_p2;
reg   [7:0] iter_reg_3271;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] icmp_ln1497_fu_1841_p2;
reg   [0:0] icmp_ln1497_reg_3276;
reg   [0:0] p_Result_20_reg_3280;
wire   [17:0] p_Val2_26_fu_1874_p2;
reg   [17:0] p_Val2_26_reg_3286;
reg   [0:0] p_Result_21_reg_3292;
reg   [1:0] p_Result_112_i_i_reg_3298;
wire   [18:0] ret_V_15_fu_1901_p2;
reg   [18:0] ret_V_15_reg_3304;
wire  signed [17:0] x_V_fu_1981_p3;
reg  signed [17:0] x_V_reg_3309;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state7_pp0_stage1_iter0;
wire    ap_block_pp0_stage1_11001;
wire  signed [17:0] y_V_fu_2124_p3;
reg  signed [17:0] y_V_reg_3315;
wire  signed [35:0] r_V_16_fu_2896_p2;
reg  signed [35:0] r_V_16_reg_3321;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state8_pp0_stage2_iter0;
wire    ap_block_pp0_stage2_11001;
reg   [0:0] p_Result_24_reg_3328;
wire   [14:0] trunc_ln414_3_fu_2142_p1;
reg   [14:0] trunc_ln414_3_reg_3335;
wire   [0:0] Range2_all_ones_5_fu_2154_p2;
reg   [0:0] Range2_all_ones_5_reg_3340;
reg   [2:0] p_Result_120_i_i_reg_3345;
wire  signed [35:0] r_V_17_fu_2906_p2;
reg  signed [35:0] r_V_17_reg_3351;
reg   [0:0] p_Result_27_reg_3358;
wire   [14:0] trunc_ln414_4_fu_2179_p1;
reg   [14:0] trunc_ln414_4_reg_3365;
wire   [0:0] Range2_all_ones_6_fu_2191_p2;
reg   [0:0] Range2_all_ones_6_reg_3370;
reg   [2:0] p_Result_125_i_i_reg_3375;
wire  signed [37:0] r_V_18_fu_2916_p2;
reg  signed [37:0] r_V_18_reg_3381;
reg   [0:0] p_Result_30_reg_3388;
wire   [14:0] trunc_ln414_5_fu_2229_p1;
reg   [14:0] trunc_ln414_5_reg_3395;
reg   [3:0] p_Result_129_i_i_reg_3400;
reg   [4:0] p_Result_130_i_i_reg_3405;
wire   [17:0] p_Val2_35_fu_2280_p2;
reg   [17:0] p_Val2_35_reg_3411;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state9_pp0_stage3_iter0;
wire    ap_block_pp0_stage3_11001;
wire   [0:0] and_ln781_5_fu_2358_p2;
reg   [0:0] and_ln781_5_reg_3417;
wire   [0:0] xor_ln785_12_fu_2376_p2;
reg   [0:0] xor_ln785_12_reg_3422;
wire   [0:0] and_ln786_14_fu_2387_p2;
reg   [0:0] and_ln786_14_reg_3427;
wire   [0:0] underflow_8_fu_2405_p2;
reg   [0:0] underflow_8_reg_3432;
wire   [0:0] or_ln340_20_fu_2410_p2;
reg   [0:0] or_ln340_20_reg_3437;
wire   [17:0] p_Val2_38_fu_2446_p2;
reg   [17:0] p_Val2_38_reg_3442;
wire   [0:0] and_ln781_6_fu_2524_p2;
reg   [0:0] and_ln781_6_reg_3448;
wire   [0:0] xor_ln785_14_fu_2542_p2;
reg   [0:0] xor_ln785_14_reg_3453;
wire   [0:0] and_ln786_16_fu_2553_p2;
reg   [0:0] and_ln786_16_reg_3458;
wire   [0:0] underflow_9_fu_2571_p2;
reg   [0:0] underflow_9_reg_3463;
wire   [0:0] or_ln340_23_fu_2576_p2;
reg   [0:0] or_ln340_23_reg_3468;
wire   [17:0] p_Val2_43_fu_2612_p2;
reg   [17:0] p_Val2_43_reg_3473;
wire   [0:0] carry_16_fu_2632_p2;
reg   [0:0] carry_16_reg_3479;
wire   [0:0] p_Result_32_fu_2638_p3;
reg   [0:0] p_Result_32_reg_3485;
wire   [0:0] Range1_all_ones_8_fu_2651_p2;
reg   [0:0] Range1_all_ones_8_reg_3490;
wire   [0:0] Range1_all_zeros_6_fu_2656_p2;
reg   [0:0] Range1_all_zeros_6_reg_3496;
wire   [0:0] xor_ln785_16_fu_2688_p2;
reg   [0:0] xor_ln785_16_reg_3501;
wire   [0:0] and_ln786_18_fu_2693_p2;
reg   [0:0] and_ln786_18_reg_3507;
wire   [17:0] rsquare_V_fu_2720_p3;
reg    ap_enable_reg_pp0_iter1;
wire   [17:0] isquare_V_fu_2749_p3;
wire   [17:0] zsquare_V_fu_2828_p3;
wire    ap_block_pp0_stage0_subdone;
reg    ap_predicate_tran6to11_state6;
reg    ap_condition_pp0_exit_iter0_state6;
wire    ap_block_pp0_stage3_subdone;
reg   [3:0] p_Val2_s_reg_267;
reg   [17:0] ap_phi_mux_p_Val2_21_phi_fu_283_p4;
wire    ap_block_pp0_stage0;
reg  signed [17:0] ap_phi_mux_p_Val2_22_phi_fu_294_p4;
reg   [17:0] ap_phi_mux_p_Val2_27_phi_fu_306_p4;
reg   [7:0] ap_phi_mux_pixel_R_phi_fu_317_p4;
reg   [34:0] grp_fu_325_p1;
reg   [29:0] grp_fu_332_p1;
wire   [1:0] trunc_ln746_fu_339_p1;
wire   [34:0] shl_ln1_fu_359_p3;
wire   [32:0] shl_ln1118_1_fu_371_p3;
wire  signed [35:0] sext_ln1118_fu_367_p1;
wire  signed [35:0] sext_ln1118_1_fu_379_p1;
wire   [0:0] tmp_5_fu_415_p3;
wire   [32:0] rhs_V_fu_435_p3;
wire   [33:0] shl_ln1118_2_fu_447_p3;
wire  signed [34:0] sext_ln1118_2_fu_455_p1;
wire   [0:0] tmp_11_fu_474_p3;
wire  signed [17:0] sext_ln703_fu_494_p0;
wire   [0:0] p_Result_8_fu_351_p3;
wire   [16:0] shl_ln_fu_343_p3;
wire   [16:0] p_Val2_9_fu_498_p3;
wire   [30:0] r_V_13_fu_2869_p2;
wire   [29:0] trunc_ln703_fu_510_p1;
wire   [14:0] trunc_ln2_fu_533_p4;
wire   [1:0] trunc_ln746_1_fu_573_p1;
wire   [0:0] p_Result_s_fu_585_p3;
wire   [16:0] trunc_ln4_fu_577_p3;
wire   [16:0] select_ln340_12_fu_593_p3;
wire   [13:0] tmp_9_fu_601_p4;
wire   [14:0] trunc_ln708_2_fu_611_p3;
wire   [2:0] trunc_ln414_fu_623_p1;
wire   [14:0] tmp_3_i_fu_627_p3;
wire   [0:0] icmp_ln414_8_fu_635_p2;
wire  signed [15:0] sext_ln718_fu_619_p1;
wire   [15:0] zext_ln415_fu_641_p1;
wire  signed [15:0] p_Val2_1_fu_645_p2;
wire   [0:0] tmp_17_fu_655_p3;
wire   [0:0] p_Result_1_fu_669_p3;
wire   [0:0] carry_fu_663_p2;
wire   [0:0] or_ln786_3_fu_677_p2;
wire  signed [17:0] sext_ln415_fu_651_p1;
wire   [13:0] trunc_ln718_fu_691_p1;
wire   [0:0] icmp_ln414_fu_694_p2;
wire   [0:0] and_ln414_fu_700_p2;
wire   [17:0] zext_ln415_1_fu_705_p1;
wire   [0:0] tmp_19_fu_714_p3;
wire   [0:0] xor_ln416_2_fu_722_p2;
wire   [1:0] p_Result_84_i_i_fu_741_p4;
wire   [2:0] p_Result_85_i_i_fu_756_p4;
wire   [0:0] carry_2_fu_728_p2;
wire   [0:0] Range1_all_ones_fu_765_p2;
wire   [0:0] Range1_all_zeros_fu_771_p2;
wire   [0:0] Range2_all_ones_fu_750_p2;
wire   [0:0] and_ln779_fu_785_p2;
wire   [0:0] deleted_zeros_fu_777_p3;
wire   [0:0] p_Result_4_fu_733_p3;
wire   [0:0] xor_ln785_2_fu_804_p2;
wire   [0:0] or_ln785_fu_810_p2;
wire   [0:0] deleted_ones_fu_790_p3;
wire   [0:0] or_ln786_fu_827_p2;
wire   [0:0] xor_ln786_fu_833_p2;
wire   [0:0] overflow_1_fu_816_p2;
wire   [13:0] trunc_ln718_1_fu_850_p1;
wire   [14:0] tmp_9_i_fu_853_p3;
wire   [0:0] icmp_ln414_2_fu_860_p2;
wire   [0:0] and_ln700_1_fu_866_p2;
wire   [15:0] zext_ln402_fu_871_p1;
wire   [0:0] tmp_26_fu_880_p3;
wire   [0:0] xor_ln416_4_fu_888_p2;
wire   [0:0] xor_ln416_5_fu_907_p2;
wire   [0:0] or_ln416_1_fu_912_p2;
wire   [0:0] or_ln416_fu_918_p2;
wire   [0:0] and_ln786_4_fu_929_p2;
wire   [0:0] or_ln786_5_fu_941_p2;
wire   [0:0] xor_ln786_2_fu_947_p2;
wire   [13:0] trunc_ln718_2_fu_958_p1;
wire   [0:0] icmp_ln414_3_fu_961_p2;
wire   [16:0] tmp_10_i_fu_972_p4;
wire   [0:0] and_ln414_1_fu_967_p2;
wire   [0:0] tmp_29_fu_989_p3;
wire   [0:0] xor_ln416_fu_996_p2;
wire   [1:0] tmp_6_fu_1014_p4;
wire   [0:0] carry_8_fu_1002_p2;
wire   [0:0] Range1_all_ones_3_fu_1023_p2;
wire   [0:0] Range1_all_zeros_2_fu_1029_p2;
wire   [0:0] Range2_all_ones_3_fu_1007_p3;
wire   [0:0] and_ln779_2_fu_1043_p2;
wire   [0:0] deleted_zeros_2_fu_1035_p3;
wire   [0:0] xor_ln785_6_fu_1062_p2;
wire   [0:0] or_ln785_3_fu_1068_p2;
wire   [0:0] deleted_ones_2_fu_1048_p3;
wire   [0:0] and_ln781_3_fu_1056_p2;
wire   [0:0] and_ln786_7_fu_1079_p2;
wire   [0:0] or_ln786_6_fu_1085_p2;
wire   [0:0] xor_ln786_3_fu_1091_p2;
wire   [0:0] underflow_3_fu_1097_p2;
wire   [0:0] overflow_5_fu_1074_p2;
wire   [0:0] or_ln340_11_fu_1108_p2;
wire   [0:0] or_ln340_9_fu_1102_p2;
wire   [17:0] p_Val2_14_fu_981_p3;
wire   [0:0] or_ln340_10_fu_1113_p2;
wire   [17:0] select_ln340_4_fu_1119_p3;
wire   [17:0] select_ln388_3_fu_1127_p3;
wire   [0:0] or_ln340_2_fu_1143_p2;
wire   [0:0] or_ln340_1_fu_1147_p2;
wire   [17:0] select_ln340_fu_1152_p3;
wire   [17:0] select_ln388_fu_1158_p3;
wire  signed [17:0] real_btm_V_fu_1164_p3;
wire   [0:0] xor_ln785_5_fu_1185_p2;
wire   [0:0] or_ln785_2_fu_1189_p2;
wire   [0:0] overflow_4_fu_1194_p2;
wire   [0:0] or_ln340_8_fu_1204_p2;
wire   [0:0] or_ln340_6_fu_1199_p2;
wire  signed [17:0] sext_ln415_1_fu_1182_p1;
wire   [0:0] or_ln340_7_fu_1208_p2;
wire   [17:0] select_ln340_3_fu_1213_p3;
wire   [17:0] select_ln388_2_fu_1221_p3;
wire  signed [17:0] imag_top_V_fu_1228_p3;
(* use_dsp48 = "no" *) wire   [35:0] ret_V_10_fu_1271_p2;
wire   [0:0] icmp_ln414_1_fu_1301_p2;
wire   [0:0] and_ln700_fu_1306_p2;
wire   [17:0] p_Val2_7_fu_1283_p4;
wire   [17:0] zext_ln415_2_fu_1312_p1;
wire   [0:0] tmp_23_fu_1322_p3;
wire   [0:0] p_Result_6_fu_1293_p3;
wire   [0:0] xor_ln416_3_fu_1330_p2;
wire   [1:0] tmp_fu_1350_p4;
wire   [2:0] tmp_3_fu_1366_p4;
wire   [0:0] tmp_25_fu_1388_p3;
wire   [0:0] Range2_all_ones_1_fu_1360_p2;
wire   [0:0] xor_ln779_2_fu_1396_p2;
wire   [0:0] and_ln779_1_fu_1402_p2;
wire   [0:0] deleted_ones_1_fu_1408_p3;
wire   [0:0] icmp_ln414_4_fu_1438_p2;
wire   [0:0] and_ln700_2_fu_1443_p2;
wire   [17:0] p_Val2_16_fu_1422_p4;
wire   [17:0] zext_ln415_3_fu_1448_p1;
wire   [0:0] tmp_34_fu_1458_p3;
wire   [0:0] p_Result_16_fu_1431_p3;
wire   [0:0] xor_ln416_6_fu_1466_p2;
wire   [0:0] carry_10_fu_1472_p2;
wire   [0:0] Range1_all_ones_4_fu_1491_p2;
wire   [0:0] Range1_all_zeros_3_fu_1496_p2;
wire   [0:0] tmp_36_fu_1509_p3;
wire   [0:0] Range2_all_ones_4_fu_1486_p2;
wire   [0:0] xor_ln779_3_fu_1516_p2;
wire   [0:0] and_ln779_3_fu_1522_p2;
wire   [0:0] deleted_zeros_3_fu_1501_p3;
wire   [0:0] p_Result_17_fu_1478_p3;
wire   [0:0] xor_ln785_7_fu_1542_p2;
wire   [0:0] or_ln785_4_fu_1548_p2;
wire   [0:0] deleted_ones_3_fu_1528_p3;
wire   [0:0] or_ln786_7_fu_1571_p2;
wire   [0:0] xor_ln786_4_fu_1577_p2;
wire   [0:0] overflow_6_fu_1559_p2;
wire   [0:0] deleted_zeros_1_fu_1598_p3;
wire   [0:0] xor_ln785_3_fu_1607_p2;
wire   [0:0] or_ln785_1_fu_1613_p2;
wire   [0:0] xor_ln785_4_fu_1618_p2;
wire   [0:0] and_ln781_1_fu_1603_p2;
wire   [0:0] or_ln786_4_fu_1629_p2;
wire   [0:0] xor_ln786_1_fu_1634_p2;
wire   [0:0] underflow_1_fu_1640_p2;
wire   [0:0] overflow_2_fu_1623_p2;
wire   [0:0] or_ln340_5_fu_1651_p2;
wire   [0:0] or_ln340_3_fu_1645_p2;
wire   [0:0] or_ln340_4_fu_1656_p2;
wire   [17:0] select_ln340_1_fu_1662_p3;
wire   [17:0] select_ln388_1_fu_1669_p3;
wire   [0:0] or_ln340_14_fu_1684_p2;
wire   [0:0] or_ln340_13_fu_1688_p2;
wire   [17:0] select_ln340_5_fu_1693_p3;
wire   [17:0] select_ln388_4_fu_1699_p3;
wire  signed [17:0] p_Val2_18_fu_1705_p3;
wire  signed [18:0] lhs_V_fu_1713_p1;
wire   [18:0] ret_V_12_fu_1717_p2;
wire  signed [17:0] p_Val2_20_fu_1730_p1;
wire   [17:0] p_Val2_20_fu_1730_p2;
wire   [0:0] p_Result_19_fu_1735_p3;
wire   [0:0] p_Result_18_fu_1722_p3;
wire   [0:0] xor_ln786_5_fu_1743_p2;
wire   [0:0] xor_ln340_1_fu_1761_p2;
wire   [0:0] xor_ln340_fu_1755_p2;
wire   [0:0] underflow_5_fu_1749_p2;
wire   [0:0] or_ln340_15_fu_1767_p2;
wire   [17:0] select_ln340_6_fu_1773_p3;
wire   [17:0] select_ln388_5_fu_1781_p3;
wire  signed [18:0] rhs_V_1_fu_1821_p1;
wire  signed [18:0] lhs_V_4_fu_1817_p1;
wire   [18:0] ret_V_fu_1825_p2;
wire   [1:0] tmp_39_fu_1831_p4;
wire  signed [18:0] ret_V_13_fu_1847_p2;
wire  signed [19:0] lhs_V_2_fu_1857_p1;
wire   [19:0] ret_V_14_fu_1861_p2;
wire   [17:0] trunc_ln1192_fu_1853_p1;
wire  signed [18:0] sext_ln703_6_fu_1897_p1;
wire    ap_block_pp0_stage1;
wire   [0:0] icmp_ln785_fu_1907_p2;
wire   [0:0] or_ln785_5_fu_1912_p2;
wire   [0:0] xor_ln785_9_fu_1917_p2;
wire   [0:0] icmp_ln786_fu_1933_p2;
wire   [0:0] xor_ln786_6_fu_1928_p2;
wire   [0:0] or_ln786_1_fu_1938_p2;
wire   [0:0] underflow_6_fu_1944_p2;
wire   [0:0] overflow_7_fu_1922_p2;
wire   [0:0] xor_ln340_2_fu_1955_p2;
wire   [0:0] or_ln340_16_fu_1949_p2;
wire   [0:0] or_ln340_17_fu_1961_p2;
wire   [17:0] select_ln340_7_fu_1967_p3;
wire   [17:0] select_ln388_6_fu_1974_p3;
wire  signed [19:0] lhs_V_3_fu_1989_p1;
wire  signed [19:0] sext_ln703_8_fu_1992_p1;
wire   [19:0] ret_V_16_fu_1996_p2;
wire   [19:0] ret_V_17_fu_2006_p2;
wire   [17:0] trunc_ln1192_1_fu_2002_p1;
wire   [17:0] p_Val2_32_fu_2019_p2;
wire   [1:0] tmp_7_fu_2032_p4;
wire   [0:0] p_Result_23_fu_2024_p3;
wire   [0:0] icmp_ln785_1_fu_2042_p2;
wire   [0:0] p_Result_22_fu_2011_p3;
wire   [0:0] or_ln785_6_fu_2048_p2;
wire   [0:0] xor_ln785_10_fu_2054_p2;
wire   [0:0] icmp_ln786_1_fu_2072_p2;
wire   [0:0] xor_ln786_7_fu_2066_p2;
wire   [0:0] or_ln786_2_fu_2078_p2;
wire   [0:0] underflow_7_fu_2084_p2;
wire   [0:0] overflow_8_fu_2060_p2;
wire   [0:0] xor_ln340_3_fu_2096_p2;
wire   [0:0] or_ln340_18_fu_2090_p2;
wire   [0:0] or_ln340_19_fu_2102_p2;
wire   [17:0] select_ln340_8_fu_2108_p3;
wire   [17:0] select_ln388_7_fu_2116_p3;
wire    ap_block_pp0_stage2;
wire   [1:0] p_Result_119_i_i_fu_2145_p4;
wire   [1:0] p_Result_124_i_i_fu_2182_p4;
wire  signed [18:0] sext_ln703_9_fu_2206_p1;
wire  signed [18:0] sext_ln703_10_fu_2209_p1;
wire   [18:0] ret_V_9_fu_2212_p2;
wire    ap_block_pp0_stage3;
wire   [0:0] icmp_ln414_5_fu_2266_p2;
wire   [0:0] and_ln700_3_fu_2271_p2;
wire   [17:0] p_Val2_34_fu_2250_p4;
wire   [17:0] zext_ln415_4_fu_2276_p1;
wire   [0:0] tmp_46_fu_2286_p3;
wire   [0:0] p_Result_25_fu_2259_p3;
wire   [0:0] xor_ln416_7_fu_2294_p2;
wire   [0:0] carry_12_fu_2300_p2;
wire   [0:0] Range1_all_ones_6_fu_2314_p2;
wire   [0:0] Range1_all_zeros_4_fu_2319_p2;
wire   [0:0] tmp_48_fu_2332_p3;
wire   [0:0] xor_ln779_4_fu_2339_p2;
wire   [0:0] and_ln779_4_fu_2345_p2;
wire   [0:0] deleted_zeros_4_fu_2324_p3;
wire   [0:0] p_Result_26_fu_2306_p3;
wire   [0:0] xor_ln785_11_fu_2364_p2;
wire   [0:0] or_ln785_7_fu_2370_p2;
wire   [0:0] deleted_ones_5_fu_2350_p3;
wire   [0:0] or_ln786_8_fu_2393_p2;
wire   [0:0] xor_ln786_8_fu_2399_p2;
wire   [0:0] overflow_9_fu_2381_p2;
wire   [0:0] icmp_ln414_6_fu_2432_p2;
wire   [0:0] and_ln700_4_fu_2437_p2;
wire   [17:0] p_Val2_37_fu_2416_p4;
wire   [17:0] zext_ln415_5_fu_2442_p1;
wire   [0:0] tmp_51_fu_2452_p3;
wire   [0:0] p_Result_28_fu_2425_p3;
wire   [0:0] xor_ln416_8_fu_2460_p2;
wire   [0:0] carry_14_fu_2466_p2;
wire   [0:0] Range1_all_ones_7_fu_2480_p2;
wire   [0:0] Range1_all_zeros_5_fu_2485_p2;
wire   [0:0] tmp_53_fu_2498_p3;
wire   [0:0] xor_ln779_5_fu_2505_p2;
wire   [0:0] and_ln779_5_fu_2511_p2;
wire   [0:0] deleted_zeros_5_fu_2490_p3;
wire   [0:0] p_Result_29_fu_2472_p3;
wire   [0:0] xor_ln785_13_fu_2530_p2;
wire   [0:0] or_ln785_8_fu_2536_p2;
wire   [0:0] deleted_ones_6_fu_2516_p3;
wire   [0:0] or_ln786_9_fu_2559_p2;
wire   [0:0] xor_ln786_9_fu_2565_p2;
wire   [0:0] overflow_10_fu_2547_p2;
wire   [0:0] icmp_ln414_7_fu_2598_p2;
wire   [0:0] and_ln700_5_fu_2603_p2;
wire   [17:0] p_Val2_42_fu_2582_p4;
wire   [17:0] zext_ln415_6_fu_2608_p1;
wire   [0:0] tmp_56_fu_2618_p3;
wire   [0:0] p_Result_31_fu_2591_p3;
wire   [0:0] xor_ln416_9_fu_2626_p2;
wire   [0:0] tmp_58_fu_2661_p3;
wire   [0:0] Range2_all_ones_7_fu_2646_p2;
wire   [0:0] xor_ln779_6_fu_2668_p2;
wire   [0:0] and_ln779_6_fu_2674_p2;
wire   [0:0] deleted_ones_7_fu_2680_p3;
wire   [0:0] or_ln340_21_fu_2699_p2;
wire   [0:0] or_ln340_22_fu_2703_p2;
wire   [17:0] select_ln340_9_fu_2708_p3;
wire   [17:0] select_ln388_8_fu_2714_p3;
wire   [0:0] or_ln340_24_fu_2728_p2;
wire   [0:0] or_ln340_25_fu_2732_p2;
wire   [17:0] select_ln340_10_fu_2737_p3;
wire   [17:0] select_ln388_9_fu_2743_p3;
wire   [0:0] deleted_zeros_6_fu_2757_p3;
wire   [0:0] xor_ln785_15_fu_2766_p2;
wire   [0:0] or_ln785_9_fu_2772_p2;
wire   [0:0] and_ln781_7_fu_2762_p2;
wire   [0:0] or_ln786_10_fu_2782_p2;
wire   [0:0] xor_ln786_10_fu_2787_p2;
wire   [0:0] underflow_10_fu_2793_p2;
wire   [0:0] overflow_11_fu_2777_p2;
wire   [0:0] or_ln340_27_fu_2804_p2;
wire   [0:0] or_ln340_26_fu_2798_p2;
wire   [0:0] or_ln340_28_fu_2808_p2;
wire   [17:0] select_ln340_11_fu_2814_p3;
wire   [17:0] select_ln388_10_fu_2821_p3;
wire   [2:0] or_ln93_fu_2836_p2;
wire   [7:0] zext_ln85_fu_2854_p1;
wire   [13:0] r_V_13_fu_2869_p0;
wire   [16:0] r_V_13_fu_2869_p1;
wire  signed [17:0] r_V_16_fu_2896_p0;
wire  signed [35:0] r_V_fu_2132_p1;
wire  signed [17:0] r_V_16_fu_2896_p1;
wire  signed [17:0] r_V_17_fu_2906_p0;
wire  signed [35:0] r_V_7_fu_2169_p1;
wire  signed [17:0] r_V_17_fu_2906_p1;
wire  signed [18:0] r_V_18_fu_2916_p0;
wire  signed [37:0] r_V_9_fu_2218_p1;
wire  signed [18:0] r_V_18_fu_2916_p1;
reg   [9:0] ap_NS_fsm;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [30:0] r_V_13_fu_2869_p10;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 10'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

video_mandelbrot_generator_mul_mul_14ns_17ns_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 31 ))
video_mandelbrot_generator_mul_mul_14ns_17ns_31_1_1_U1(
    .din0(r_V_13_fu_2869_p0),
    .din1(r_V_13_fu_2869_p1),
    .dout(r_V_13_fu_2869_p2)
);

video_mandelbrot_generator_mul_mul_18s_18s_36_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 36 ))
video_mandelbrot_generator_mul_mul_18s_18s_36_1_1_U2(
    .din0(real_btm_V_fu_1164_p3),
    .din1(real_top_V_reg_3059),
    .dout(r_V_12_fu_2879_p2)
);

video_mandelbrot_generator_mul_mul_18s_18s_36_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 36 ))
video_mandelbrot_generator_mul_mul_18s_18s_36_1_1_U3(
    .din0(imag_top_V_fu_1228_p3),
    .din1(imag_btm_V_reg_3126),
    .dout(r_V_15_fu_2886_p2)
);

video_mandelbrot_generator_mul_mul_18s_18s_36_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 36 ))
video_mandelbrot_generator_mul_mul_18s_18s_36_1_1_U4(
    .din0(r_V_16_fu_2896_p0),
    .din1(r_V_16_fu_2896_p1),
    .dout(r_V_16_fu_2896_p2)
);

video_mandelbrot_generator_mul_mul_18s_18s_36_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 36 ))
video_mandelbrot_generator_mul_mul_18s_18s_36_1_1_U5(
    .din0(r_V_17_fu_2906_p0),
    .din1(r_V_17_fu_2906_p1),
    .dout(r_V_17_fu_2906_p2)
);

video_mandelbrot_generator_mul_mul_19s_19s_38_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 38 ))
video_mandelbrot_generator_mul_mul_19s_19s_38_1_1_U6(
    .din0(r_V_18_fu_2916_p0),
    .din1(r_V_18_fu_2916_p1),
    .dout(r_V_18_fu_2916_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln27_fu_561_p2 == 1'd1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state6) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state5)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((1'b1 == ap_CS_fsm_state5)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1497_reg_3276 == 1'd0) & (icmp_ln64_reg_3267 == 1'd0))) begin
        p_Val2_21_reg_279 <= rsquare_V_fu_2720_p3;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        p_Val2_21_reg_279 <= 18'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1497_reg_3276 == 1'd0) & (icmp_ln64_reg_3267 == 1'd0))) begin
        p_Val2_22_reg_290 <= isquare_V_fu_2749_p3;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        p_Val2_22_reg_290 <= 18'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1497_reg_3276 == 1'd0) & (icmp_ln64_reg_3267 == 1'd0))) begin
        p_Val2_27_reg_302 <= zsquare_V_fu_2828_p3;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        p_Val2_27_reg_302 <= 18'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((m_axis_video_TREADY == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
        p_Val2_s_reg_267 <= col_reg_3054;
    end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_Val2_s_reg_267 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1497_reg_3276 == 1'd0) & (icmp_ln64_reg_3267 == 1'd0))) begin
        pixel_R_reg_313 <= iter_reg_3271;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        pixel_R_reg_313 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        Range1_all_ones_1_reg_3194 <= Range1_all_ones_1_fu_1376_p2;
        Range1_all_zeros_1_reg_3200 <= Range1_all_zeros_1_fu_1382_p2;
        and_ln781_4_reg_3217 <= and_ln781_4_fu_1536_p2;
        and_ln786_2_reg_3205 <= and_ln786_2_fu_1416_p2;
        and_ln786_9_reg_3227 <= and_ln786_9_fu_1565_p2;
        carry_4_reg_3183 <= carry_4_fu_1336_p2;
        or_ln340_12_reg_3237 <= or_ln340_12_fu_1588_p2;
        p_Result_5_reg_3171 <= ret_V_10_fu_1271_p2[32'd35];
        p_Result_7_reg_3189 <= p_Val2_8_fu_1316_p2[32'd17];
        p_Val2_17_reg_3211 <= p_Val2_17_fu_1452_p2;
        p_Val2_8_reg_3177 <= p_Val2_8_fu_1316_p2;
        underflow_4_reg_3232 <= underflow_4_fu_1583_p2;
        xor_ln785_8_reg_3222 <= xor_ln785_8_fu_1554_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln1497_reg_3276 == 1'd0) & (icmp_ln64_reg_3267 == 1'd0))) begin
        Range1_all_ones_8_reg_3490 <= Range1_all_ones_8_fu_2651_p2;
        Range1_all_zeros_6_reg_3496 <= Range1_all_zeros_6_fu_2656_p2;
        and_ln781_5_reg_3417 <= and_ln781_5_fu_2358_p2;
        and_ln781_6_reg_3448 <= and_ln781_6_fu_2524_p2;
        and_ln786_14_reg_3427 <= and_ln786_14_fu_2387_p2;
        and_ln786_16_reg_3458 <= and_ln786_16_fu_2553_p2;
        and_ln786_18_reg_3507 <= and_ln786_18_fu_2693_p2;
        carry_16_reg_3479 <= carry_16_fu_2632_p2;
        or_ln340_20_reg_3437 <= or_ln340_20_fu_2410_p2;
        or_ln340_23_reg_3468 <= or_ln340_23_fu_2576_p2;
        p_Result_32_reg_3485 <= p_Val2_43_fu_2612_p2[32'd17];
        p_Val2_35_reg_3411 <= p_Val2_35_fu_2280_p2;
        p_Val2_38_reg_3442 <= p_Val2_38_fu_2446_p2;
        p_Val2_43_reg_3473 <= p_Val2_43_fu_2612_p2;
        underflow_8_reg_3432 <= underflow_8_fu_2405_p2;
        underflow_9_reg_3463 <= underflow_9_fu_2571_p2;
        xor_ln785_12_reg_3422 <= xor_ln785_12_fu_2376_p2;
        xor_ln785_14_reg_3453 <= xor_ln785_14_fu_2542_p2;
        xor_ln785_16_reg_3501 <= xor_ln785_16_fu_2688_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln1497_reg_3276 == 1'd0) & (icmp_ln64_reg_3267 == 1'd0))) begin
        Range2_all_ones_5_reg_3340 <= Range2_all_ones_5_fu_2154_p2;
        Range2_all_ones_6_reg_3370 <= Range2_all_ones_6_fu_2191_p2;
        p_Result_120_i_i_reg_3345 <= {{r_V_16_fu_2896_p2[35:33]}};
        p_Result_125_i_i_reg_3375 <= {{r_V_17_fu_2906_p2[35:33]}};
        p_Result_129_i_i_reg_3400 <= {{r_V_18_fu_2916_p2[37:34]}};
        p_Result_130_i_i_reg_3405 <= {{r_V_18_fu_2916_p2[37:33]}};
        p_Result_24_reg_3328 <= r_V_16_fu_2896_p2[32'd35];
        p_Result_27_reg_3358 <= r_V_17_fu_2906_p2[32'd35];
        p_Result_30_reg_3388 <= r_V_18_fu_2916_p2[32'd37];
        r_V_16_reg_3321 <= r_V_16_fu_2896_p2;
        r_V_17_reg_3351 <= r_V_17_fu_2906_p2;
        r_V_18_reg_3381 <= r_V_18_fu_2916_p2;
        trunc_ln414_3_reg_3335 <= trunc_ln414_3_fu_2142_p1;
        trunc_ln414_4_reg_3365 <= trunc_ln414_4_fu_2179_p1;
        trunc_ln414_5_reg_3395 <= trunc_ln414_5_fu_2229_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln27_fu_561_p2 == 1'd0))) begin
        Range2_all_ones_8_reg_3105 <= grp_fu_332_p1[32'd29];
        and_ln781_2_reg_3110 <= and_ln781_2_fu_923_p2;
        and_ln781_reg_3070 <= and_ln781_fu_798_p2;
        and_ln786_5_reg_3115 <= and_ln786_5_fu_935_p2;
        and_ln786_reg_3075 <= and_ln786_fu_821_p2;
        carry_6_reg_3095 <= carry_6_fu_894_p2;
        imag_btm_V_reg_3126 <= imag_btm_V_fu_1135_p3;
        or_ln340_reg_3085 <= or_ln340_fu_844_p2;
        p_Result_11_reg_3100 <= p_Val2_12_fu_875_p2[32'd15];
        p_Val2_12_reg_3090 <= p_Val2_12_fu_875_p2;
        p_Val2_4_reg_3064 <= p_Val2_4_fu_709_p2;
        real_top_V_reg_3059 <= real_top_V_fu_683_p3;
        underflow_2_reg_3120 <= underflow_2_fu_953_p2;
        underflow_reg_3080 <= underflow_fu_839_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        col_reg_3054 <= col_fu_567_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln64_fu_1805_p2 == 1'd0))) begin
        icmp_ln1497_reg_3276 <= icmp_ln1497_fu_1841_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln64_reg_3267 <= icmp_ln64_fu_1805_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        iter_reg_3271 <= iter_fu_1811_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        p_Result_106_i_i_reg_3160 <= {{r_V_15_fu_2886_p2[35:34]}};
        p_Result_107_i_i_reg_3165 <= {{r_V_15_fu_2886_p2[35:33]}};
        p_Result_15_reg_3148 <= r_V_15_fu_2886_p2[32'd35];
        r_V_12_reg_3131 <= r_V_12_fu_2879_p2;
        r_V_15_reg_3141 <= r_V_15_fu_2886_p2;
        trunc_ln414_1_reg_3136 <= trunc_ln414_1_fu_1179_p1;
        trunc_ln414_2_reg_3155 <= trunc_ln414_2_fu_1250_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_Result_10_reg_3035 <= grp_fu_332_p1[32'd29];
        p_Result_12_reg_2985 <= r_V_14_fu_459_p2[32'd34];
        p_Result_13_reg_2991 <= grp_fu_325_p1[32'd32];
        p_Result_2_reg_2943 <= r_V_11_fu_383_p2[32'd35];
        p_Result_3_reg_2954 <= r_V_11_fu_383_p2[32'd32];
        p_Result_9_reg_3024 <= p_Result_9_fu_527_p2;
        p_Val2_3_reg_2949 <= {{r_V_11_fu_383_p2[32:15]}};
        r_V_11_reg_2936[35 : 15] <= r_V_11_fu_383_p2[35 : 15];
        r_V_14_reg_2975[34 : 16] <= r_V_14_fu_459_p2[34 : 16];
        ret_V_11_reg_3012 <= ret_V_11_fu_513_p2;
        sext_ln703_reg_3007 <= sext_ln703_fu_494_p1;
        sext_ln713_reg_3030 <= sext_ln713_fu_543_p1;
        sext_ln728_reg_2970[35 : 15] <= sext_ln728_fu_443_p1[35 : 15];
        tmp_12_reg_3018 <= r_V_13_fu_2869_p2[32'd29];
        tmp_14_reg_3041 <= r_V_13_fu_2869_p2[32'd14];
        tmp_15_reg_3046 <= r_V_13_fu_2869_p2[32'd29];
        xor_ln779_1_reg_2996 <= xor_ln779_1_fu_482_p2;
        xor_ln779_reg_2959 <= xor_ln779_fu_423_p2;
        xor_ln785_1_reg_3001 <= xor_ln785_1_fu_488_p2;
        xor_ln785_reg_2964 <= xor_ln785_fu_429_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1497_fu_1841_p2 == 1'd0) & (icmp_ln64_fu_1805_p2 == 1'd0))) begin
        p_Result_112_i_i_reg_3298 <= {{ret_V_14_fu_1861_p2[19:18]}};
        p_Result_20_reg_3280 <= ret_V_14_fu_1861_p2[32'd19];
        p_Result_21_reg_3292 <= p_Val2_26_fu_1874_p2[32'd17];
        p_Val2_26_reg_3286 <= p_Val2_26_fu_1874_p2;
        ret_V_15_reg_3304 <= ret_V_15_fu_1901_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        rhs_V_2_reg_3262 <= rhs_V_2_fu_1801_p1;
        sext_ln64_reg_3257 <= sext_ln64_fu_1797_p1;
        trunc_ln27_reg_3242 <= trunc_ln27_fu_1594_p1;
        x0_V_reg_3247 <= x0_V_fu_1676_p3;
        y0_V_reg_3252 <= y0_V_fu_1789_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln1497_reg_3276 == 1'd0) & (icmp_ln64_reg_3267 == 1'd0))) begin
        x_V_reg_3309 <= x_V_fu_1981_p3;
        y_V_reg_3315 <= y_V_fu_2124_p3;
    end
end

always @ (*) begin
    if ((ap_predicate_tran6to11_state6 == 1'b1)) begin
        ap_condition_pp0_exit_iter0_state6 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state6 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln27_fu_561_p2 == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1497_reg_3276 == 1'd0) & (icmp_ln64_reg_3267 == 1'd0))) begin
        ap_phi_mux_p_Val2_21_phi_fu_283_p4 = rsquare_V_fu_2720_p3;
    end else begin
        ap_phi_mux_p_Val2_21_phi_fu_283_p4 = p_Val2_21_reg_279;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1497_reg_3276 == 1'd0) & (icmp_ln64_reg_3267 == 1'd0))) begin
        ap_phi_mux_p_Val2_22_phi_fu_294_p4 = isquare_V_fu_2749_p3;
    end else begin
        ap_phi_mux_p_Val2_22_phi_fu_294_p4 = p_Val2_22_reg_290;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1497_reg_3276 == 1'd0) & (icmp_ln64_reg_3267 == 1'd0))) begin
        ap_phi_mux_p_Val2_27_phi_fu_306_p4 = zsquare_V_fu_2828_p3;
    end else begin
        ap_phi_mux_p_Val2_27_phi_fu_306_p4 = p_Val2_27_reg_302;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1497_reg_3276 == 1'd0) & (icmp_ln64_reg_3267 == 1'd0))) begin
        ap_phi_mux_pixel_R_phi_fu_317_p4 = iter_reg_3271;
    end else begin
        ap_phi_mux_pixel_R_phi_fu_317_p4 = pixel_R_reg_313;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln27_fu_561_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_325_p1 = r_V_14_reg_2975;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_fu_325_p1 = r_V_14_fu_459_p2;
    end else begin
        grp_fu_325_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_332_p1 = ret_V_11_reg_3012;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_fu_332_p1 = ret_V_11_fu_513_p2;
    end else begin
        grp_fu_332_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        m_axis_video_TDATA_blk_n = m_axis_video_TREADY;
    end else begin
        m_axis_video_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((m_axis_video_TREADY == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
        m_axis_video_TVALID = 1'b1;
    end else begin
        m_axis_video_TVALID = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln27_fu_561_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_predicate_tran6to11_state6 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_predicate_tran6to11_state6 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_state11 : begin
            if (((m_axis_video_TREADY == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Range1_all_ones_1_fu_1376_p2 = ((tmp_3_fu_1366_p4 == 3'd7) ? 1'b1 : 1'b0);

assign Range1_all_ones_3_fu_1023_p2 = ((tmp_6_fu_1014_p4 == 2'd3) ? 1'b1 : 1'b0);

assign Range1_all_ones_4_fu_1491_p2 = ((p_Result_107_i_i_reg_3165 == 3'd7) ? 1'b1 : 1'b0);

assign Range1_all_ones_6_fu_2314_p2 = ((p_Result_120_i_i_reg_3345 == 3'd7) ? 1'b1 : 1'b0);

assign Range1_all_ones_7_fu_2480_p2 = ((p_Result_125_i_i_reg_3375 == 3'd7) ? 1'b1 : 1'b0);

assign Range1_all_ones_8_fu_2651_p2 = ((p_Result_130_i_i_reg_3405 == 5'd31) ? 1'b1 : 1'b0);

assign Range1_all_ones_fu_765_p2 = ((p_Result_85_i_i_fu_756_p4 == 3'd7) ? 1'b1 : 1'b0);

assign Range1_all_zeros_1_fu_1382_p2 = ((tmp_3_fu_1366_p4 == 3'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_2_fu_1029_p2 = ((tmp_6_fu_1014_p4 == 2'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_3_fu_1496_p2 = ((p_Result_107_i_i_reg_3165 == 3'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_4_fu_2319_p2 = ((p_Result_120_i_i_reg_3345 == 3'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_5_fu_2485_p2 = ((p_Result_125_i_i_reg_3375 == 3'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_6_fu_2656_p2 = ((p_Result_130_i_i_reg_3405 == 5'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_fu_771_p2 = ((p_Result_85_i_i_fu_756_p4 == 3'd0) ? 1'b1 : 1'b0);

assign Range2_all_ones_1_fu_1360_p2 = ((tmp_fu_1350_p4 == 2'd3) ? 1'b1 : 1'b0);

assign Range2_all_ones_3_fu_1007_p3 = r_V_14_reg_2975[32'd34];

assign Range2_all_ones_4_fu_1486_p2 = ((p_Result_106_i_i_reg_3160 == 2'd3) ? 1'b1 : 1'b0);

assign Range2_all_ones_5_fu_2154_p2 = ((p_Result_119_i_i_fu_2145_p4 == 2'd3) ? 1'b1 : 1'b0);

assign Range2_all_ones_6_fu_2191_p2 = ((p_Result_124_i_i_fu_2182_p4 == 2'd3) ? 1'b1 : 1'b0);

assign Range2_all_ones_7_fu_2646_p2 = ((p_Result_129_i_i_reg_3400 == 4'd15) ? 1'b1 : 1'b0);

assign Range2_all_ones_fu_750_p2 = ((p_Result_84_i_i_fu_741_p4 == 2'd3) ? 1'b1 : 1'b0);

assign and_ln414_1_fu_967_p2 = (p_Result_12_reg_2985 & icmp_ln414_3_fu_961_p2);

assign and_ln414_fu_700_p2 = (p_Result_2_reg_2943 & icmp_ln414_fu_694_p2);

assign and_ln700_1_fu_866_p2 = (p_Result_9_reg_3024 & icmp_ln414_2_fu_860_p2);

assign and_ln700_2_fu_1443_p2 = (p_Result_15_reg_3148 & icmp_ln414_4_fu_1438_p2);

assign and_ln700_3_fu_2271_p2 = (p_Result_24_reg_3328 & icmp_ln414_5_fu_2266_p2);

assign and_ln700_4_fu_2437_p2 = (p_Result_27_reg_3358 & icmp_ln414_6_fu_2432_p2);

assign and_ln700_5_fu_2603_p2 = (p_Result_30_reg_3388 & icmp_ln414_7_fu_2598_p2);

assign and_ln700_fu_1306_p2 = (p_Result_5_fu_1275_p3 & icmp_ln414_1_fu_1301_p2);

assign and_ln779_1_fu_1402_p2 = (xor_ln779_2_fu_1396_p2 & Range2_all_ones_1_fu_1360_p2);

assign and_ln779_2_fu_1043_p2 = (xor_ln779_1_reg_2996 & Range2_all_ones_3_fu_1007_p3);

assign and_ln779_3_fu_1522_p2 = (xor_ln779_3_fu_1516_p2 & Range2_all_ones_4_fu_1486_p2);

assign and_ln779_4_fu_2345_p2 = (xor_ln779_4_fu_2339_p2 & Range2_all_ones_5_reg_3340);

assign and_ln779_5_fu_2511_p2 = (xor_ln779_5_fu_2505_p2 & Range2_all_ones_6_reg_3370);

assign and_ln779_6_fu_2674_p2 = (xor_ln779_6_fu_2668_p2 & Range2_all_ones_7_fu_2646_p2);

assign and_ln779_fu_785_p2 = (xor_ln779_reg_2959 & Range2_all_ones_fu_750_p2);

assign and_ln781_1_fu_1603_p2 = (carry_4_reg_3183 & Range1_all_ones_1_reg_3194);

assign and_ln781_2_fu_923_p2 = (grp_fu_332_p3 & carry_6_fu_894_p2);

assign and_ln781_3_fu_1056_p2 = (carry_8_fu_1002_p2 & Range1_all_ones_3_fu_1023_p2);

assign and_ln781_4_fu_1536_p2 = (carry_10_fu_1472_p2 & Range1_all_ones_4_fu_1491_p2);

assign and_ln781_5_fu_2358_p2 = (carry_12_fu_2300_p2 & Range1_all_ones_6_fu_2314_p2);

assign and_ln781_6_fu_2524_p2 = (carry_14_fu_2466_p2 & Range1_all_ones_7_fu_2480_p2);

assign and_ln781_7_fu_2762_p2 = (carry_16_reg_3479 & Range1_all_ones_8_reg_3490);

assign and_ln781_fu_798_p2 = (carry_2_fu_728_p2 & Range1_all_ones_fu_765_p2);

assign and_ln786_14_fu_2387_p2 = (p_Result_26_fu_2306_p3 & deleted_ones_5_fu_2350_p3);

assign and_ln786_16_fu_2553_p2 = (p_Result_29_fu_2472_p3 & deleted_ones_6_fu_2516_p3);

assign and_ln786_18_fu_2693_p2 = (p_Result_32_fu_2638_p3 & deleted_ones_7_fu_2680_p3);

assign and_ln786_2_fu_1416_p2 = (p_Result_7_fu_1342_p3 & deleted_ones_1_fu_1408_p3);

assign and_ln786_4_fu_929_p2 = (p_Result_11_fu_899_p3 & or_ln416_fu_918_p2);

assign and_ln786_5_fu_935_p2 = (grp_fu_332_p3 & and_ln786_4_fu_929_p2);

assign and_ln786_7_fu_1079_p2 = (grp_fu_325_p3 & deleted_ones_2_fu_1048_p3);

assign and_ln786_9_fu_1565_p2 = (p_Result_17_fu_1478_p3 & deleted_ones_3_fu_1528_p3);

assign and_ln786_fu_821_p2 = (p_Result_4_fu_733_p3 & deleted_ones_fu_790_p3);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state10_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_predicate_tran6to11_state6 = ((icmp_ln1497_fu_1841_p2 == 1'd1) | (icmp_ln64_fu_1805_p2 == 1'd1));
end

assign carry_10_fu_1472_p2 = (xor_ln416_6_fu_1466_p2 & p_Result_16_fu_1431_p3);

assign carry_12_fu_2300_p2 = (xor_ln416_7_fu_2294_p2 & p_Result_25_fu_2259_p3);

assign carry_14_fu_2466_p2 = (xor_ln416_8_fu_2460_p2 & p_Result_28_fu_2425_p3);

assign carry_16_fu_2632_p2 = (xor_ln416_9_fu_2626_p2 & p_Result_31_fu_2591_p3);

assign carry_2_fu_728_p2 = (xor_ln416_2_fu_722_p2 & p_Result_3_reg_2954);

assign carry_4_fu_1336_p2 = (xor_ln416_3_fu_1330_p2 & p_Result_6_fu_1293_p3);

assign carry_6_fu_894_p2 = (xor_ln416_4_fu_888_p2 & p_Result_10_reg_3035);

assign carry_8_fu_1002_p2 = (xor_ln416_fu_996_p2 & p_Result_13_reg_2991);

assign carry_fu_663_p2 = (tmp_17_fu_655_p3 ^ 1'd1);

assign col_fu_567_p2 = (p_Val2_s_reg_267 + 4'd1);

assign deleted_ones_1_fu_1408_p3 = ((carry_4_fu_1336_p2[0:0] === 1'b1) ? and_ln779_1_fu_1402_p2 : Range1_all_ones_1_fu_1376_p2);

assign deleted_ones_2_fu_1048_p3 = ((carry_8_fu_1002_p2[0:0] === 1'b1) ? and_ln779_2_fu_1043_p2 : Range1_all_ones_3_fu_1023_p2);

assign deleted_ones_3_fu_1528_p3 = ((carry_10_fu_1472_p2[0:0] === 1'b1) ? and_ln779_3_fu_1522_p2 : Range1_all_ones_4_fu_1491_p2);

assign deleted_ones_5_fu_2350_p3 = ((carry_12_fu_2300_p2[0:0] === 1'b1) ? and_ln779_4_fu_2345_p2 : Range1_all_ones_6_fu_2314_p2);

assign deleted_ones_6_fu_2516_p3 = ((carry_14_fu_2466_p2[0:0] === 1'b1) ? and_ln779_5_fu_2511_p2 : Range1_all_ones_7_fu_2480_p2);

assign deleted_ones_7_fu_2680_p3 = ((carry_16_fu_2632_p2[0:0] === 1'b1) ? and_ln779_6_fu_2674_p2 : Range1_all_ones_8_fu_2651_p2);

assign deleted_ones_fu_790_p3 = ((carry_2_fu_728_p2[0:0] === 1'b1) ? and_ln779_fu_785_p2 : Range1_all_ones_fu_765_p2);

assign deleted_zeros_1_fu_1598_p3 = ((carry_4_reg_3183[0:0] === 1'b1) ? Range1_all_ones_1_reg_3194 : Range1_all_zeros_1_reg_3200);

assign deleted_zeros_2_fu_1035_p3 = ((carry_8_fu_1002_p2[0:0] === 1'b1) ? Range1_all_ones_3_fu_1023_p2 : Range1_all_zeros_2_fu_1029_p2);

assign deleted_zeros_3_fu_1501_p3 = ((carry_10_fu_1472_p2[0:0] === 1'b1) ? Range1_all_ones_4_fu_1491_p2 : Range1_all_zeros_3_fu_1496_p2);

assign deleted_zeros_4_fu_2324_p3 = ((carry_12_fu_2300_p2[0:0] === 1'b1) ? Range1_all_ones_6_fu_2314_p2 : Range1_all_zeros_4_fu_2319_p2);

assign deleted_zeros_5_fu_2490_p3 = ((carry_14_fu_2466_p2[0:0] === 1'b1) ? Range1_all_ones_7_fu_2480_p2 : Range1_all_zeros_5_fu_2485_p2);

assign deleted_zeros_6_fu_2757_p3 = ((carry_16_reg_3479[0:0] === 1'b1) ? Range1_all_ones_8_reg_3490 : Range1_all_zeros_6_reg_3496);

assign deleted_zeros_fu_777_p3 = ((carry_2_fu_728_p2[0:0] === 1'b1) ? Range1_all_ones_fu_765_p2 : Range1_all_zeros_fu_771_p2);

assign grp_fu_325_p3 = grp_fu_325_p1[32'd32];

assign grp_fu_332_p3 = grp_fu_332_p1[32'd29];

assign icmp_ln1497_fu_1841_p2 = ((tmp_39_fu_1831_p4 == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln27_fu_561_p2 = ((p_Val2_s_reg_267 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln414_1_fu_1301_p2 = ((trunc_ln414_1_reg_3136 != 15'd0) ? 1'b1 : 1'b0);

assign icmp_ln414_2_fu_860_p2 = ((tmp_9_i_fu_853_p3 != 15'd0) ? 1'b1 : 1'b0);

assign icmp_ln414_3_fu_961_p2 = ((trunc_ln718_2_fu_958_p1 != 14'd0) ? 1'b1 : 1'b0);

assign icmp_ln414_4_fu_1438_p2 = ((trunc_ln414_2_reg_3155 != 15'd0) ? 1'b1 : 1'b0);

assign icmp_ln414_5_fu_2266_p2 = ((trunc_ln414_3_reg_3335 != 15'd0) ? 1'b1 : 1'b0);

assign icmp_ln414_6_fu_2432_p2 = ((trunc_ln414_4_reg_3365 != 15'd0) ? 1'b1 : 1'b0);

assign icmp_ln414_7_fu_2598_p2 = ((trunc_ln414_5_reg_3395 != 15'd0) ? 1'b1 : 1'b0);

assign icmp_ln414_8_fu_635_p2 = ((tmp_3_i_fu_627_p3 != 15'd0) ? 1'b1 : 1'b0);

assign icmp_ln414_fu_694_p2 = ((trunc_ln718_fu_691_p1 != 14'd0) ? 1'b1 : 1'b0);

assign icmp_ln64_fu_1805_p2 = ((ap_phi_mux_pixel_R_phi_fu_317_p4 == 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln785_1_fu_2042_p2 = ((tmp_7_fu_2032_p4 != 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln785_fu_1907_p2 = ((p_Result_112_i_i_reg_3298 != 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln786_1_fu_2072_p2 = ((tmp_7_fu_2032_p4 != 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln786_fu_1933_p2 = ((p_Result_112_i_i_reg_3298 != 2'd3) ? 1'b1 : 1'b0);

assign imag_btm_V_fu_1135_p3 = ((or_ln340_10_fu_1113_p2[0:0] === 1'b1) ? select_ln340_4_fu_1119_p3 : select_ln388_3_fu_1127_p3);

assign imag_top_V_fu_1228_p3 = ((or_ln340_7_fu_1208_p2[0:0] === 1'b1) ? select_ln340_3_fu_1213_p3 : select_ln388_2_fu_1221_p3);

assign isquare_V_fu_2749_p3 = ((or_ln340_25_fu_2732_p2[0:0] === 1'b1) ? select_ln340_10_fu_2737_p3 : select_ln388_9_fu_2743_p3);

assign iter_fu_1811_p2 = (ap_phi_mux_pixel_R_phi_fu_317_p4 + 8'd1);

assign lhs_V_2_fu_1857_p1 = ret_V_13_fu_1847_p2;

assign lhs_V_3_fu_1989_p1 = $signed(ret_V_15_reg_3304);

assign lhs_V_4_fu_1817_p1 = $signed(ap_phi_mux_p_Val2_21_phi_fu_283_p4);

assign lhs_V_fu_1713_p1 = p_Val2_18_fu_1705_p3;

assign m_axis_video_TDATA = {{{pixel_R_reg_313}, {8'd0}}, {zext_ln85_fu_2854_p1}};

assign m_axis_video_TDEST = 1'd0;

assign m_axis_video_TID = 1'd0;

assign m_axis_video_TKEEP = 3'd0;

assign m_axis_video_TLAST = ((p_Val2_s_reg_267 == 4'd7) ? 1'b1 : 1'b0);

assign m_axis_video_TSTRB = 3'd0;

assign m_axis_video_TUSER = ((or_ln93_fu_2836_p2 == 3'd0) ? 1'b1 : 1'b0);

assign or_ln340_10_fu_1113_p2 = (or_ln340_11_fu_1108_p2 | and_ln781_3_fu_1056_p2);

assign or_ln340_11_fu_1108_p2 = (xor_ln785_1_reg_3001 | and_ln786_7_fu_1079_p2);

assign or_ln340_12_fu_1588_p2 = (underflow_4_fu_1583_p2 | overflow_6_fu_1559_p2);

assign or_ln340_13_fu_1688_p2 = (or_ln340_14_fu_1684_p2 | and_ln781_4_reg_3217);

assign or_ln340_14_fu_1684_p2 = (xor_ln785_8_reg_3222 | and_ln786_9_reg_3227);

assign or_ln340_15_fu_1767_p2 = (xor_ln340_1_fu_1761_p2 | p_Result_19_fu_1735_p3);

assign or_ln340_16_fu_1949_p2 = (underflow_6_fu_1944_p2 | overflow_7_fu_1922_p2);

assign or_ln340_17_fu_1961_p2 = (xor_ln340_2_fu_1955_p2 | overflow_7_fu_1922_p2);

assign or_ln340_18_fu_2090_p2 = (underflow_7_fu_2084_p2 | overflow_8_fu_2060_p2);

assign or_ln340_19_fu_2102_p2 = (xor_ln340_3_fu_2096_p2 | overflow_8_fu_2060_p2);

assign or_ln340_1_fu_1147_p2 = (or_ln340_2_fu_1143_p2 | and_ln781_reg_3070);

assign or_ln340_20_fu_2410_p2 = (underflow_8_fu_2405_p2 | overflow_9_fu_2381_p2);

assign or_ln340_21_fu_2699_p2 = (xor_ln785_12_reg_3422 | and_ln786_14_reg_3427);

assign or_ln340_22_fu_2703_p2 = (or_ln340_21_fu_2699_p2 | and_ln781_5_reg_3417);

assign or_ln340_23_fu_2576_p2 = (underflow_9_fu_2571_p2 | overflow_10_fu_2547_p2);

assign or_ln340_24_fu_2728_p2 = (xor_ln785_14_reg_3453 | and_ln786_16_reg_3458);

assign or_ln340_25_fu_2732_p2 = (or_ln340_24_fu_2728_p2 | and_ln781_6_reg_3448);

assign or_ln340_26_fu_2798_p2 = (underflow_10_fu_2793_p2 | overflow_11_fu_2777_p2);

assign or_ln340_27_fu_2804_p2 = (xor_ln785_16_reg_3501 | and_ln786_18_reg_3507);

assign or_ln340_28_fu_2808_p2 = (or_ln340_27_fu_2804_p2 | and_ln781_7_fu_2762_p2);

assign or_ln340_2_fu_1143_p2 = (xor_ln785_reg_2964 | and_ln786_reg_3075);

assign or_ln340_3_fu_1645_p2 = (underflow_1_fu_1640_p2 | overflow_2_fu_1623_p2);

assign or_ln340_4_fu_1656_p2 = (or_ln340_5_fu_1651_p2 | and_ln781_1_fu_1603_p2);

assign or_ln340_5_fu_1651_p2 = (xor_ln785_4_fu_1618_p2 | and_ln786_2_reg_3205);

assign or_ln340_6_fu_1199_p2 = (underflow_2_reg_3120 | overflow_4_fu_1194_p2);

assign or_ln340_7_fu_1208_p2 = (or_ln340_8_fu_1204_p2 | and_ln781_2_reg_3110);

assign or_ln340_8_fu_1204_p2 = (tmp_12_reg_3018 | and_ln786_5_reg_3115);

assign or_ln340_9_fu_1102_p2 = (underflow_3_fu_1097_p2 | overflow_5_fu_1074_p2);

assign or_ln340_fu_844_p2 = (underflow_fu_839_p2 | overflow_1_fu_816_p2);

assign or_ln416_1_fu_912_p2 = (xor_ln416_5_fu_907_p2 | tmp_26_fu_880_p3);

assign or_ln416_fu_918_p2 = (tmp_15_reg_3046 | or_ln416_1_fu_912_p2);

assign or_ln785_1_fu_1613_p2 = (xor_ln785_3_fu_1607_p2 | p_Result_7_reg_3189);

assign or_ln785_2_fu_1189_p2 = (xor_ln785_5_fu_1185_p2 | p_Result_11_reg_3100);

assign or_ln785_3_fu_1068_p2 = (xor_ln785_6_fu_1062_p2 | grp_fu_325_p3);

assign or_ln785_4_fu_1548_p2 = (xor_ln785_7_fu_1542_p2 | p_Result_17_fu_1478_p3);

assign or_ln785_5_fu_1912_p2 = (p_Result_21_reg_3292 | icmp_ln785_fu_1907_p2);

assign or_ln785_6_fu_2048_p2 = (p_Result_23_fu_2024_p3 | icmp_ln785_1_fu_2042_p2);

assign or_ln785_7_fu_2370_p2 = (xor_ln785_11_fu_2364_p2 | p_Result_26_fu_2306_p3);

assign or_ln785_8_fu_2536_p2 = (xor_ln785_13_fu_2530_p2 | p_Result_29_fu_2472_p3);

assign or_ln785_9_fu_2772_p2 = (xor_ln785_15_fu_2766_p2 | p_Result_32_reg_3485);

assign or_ln785_fu_810_p2 = (xor_ln785_2_fu_804_p2 | p_Result_4_fu_733_p3);

assign or_ln786_10_fu_2782_p2 = (and_ln786_18_reg_3507 | and_ln781_7_fu_2762_p2);

assign or_ln786_1_fu_1938_p2 = (xor_ln786_6_fu_1928_p2 | icmp_ln786_fu_1933_p2);

assign or_ln786_2_fu_2078_p2 = (xor_ln786_7_fu_2066_p2 | icmp_ln786_1_fu_2072_p2);

assign or_ln786_3_fu_677_p2 = (p_Result_1_fu_669_p3 | carry_fu_663_p2);

assign or_ln786_4_fu_1629_p2 = (and_ln786_2_reg_3205 | and_ln781_1_fu_1603_p2);

assign or_ln786_5_fu_941_p2 = (and_ln786_5_fu_935_p2 | and_ln781_2_fu_923_p2);

assign or_ln786_6_fu_1085_p2 = (and_ln786_7_fu_1079_p2 | and_ln781_3_fu_1056_p2);

assign or_ln786_7_fu_1571_p2 = (and_ln786_9_fu_1565_p2 | and_ln781_4_fu_1536_p2);

assign or_ln786_8_fu_2393_p2 = (and_ln786_14_fu_2387_p2 | and_ln781_5_fu_2358_p2);

assign or_ln786_9_fu_2559_p2 = (and_ln786_16_fu_2553_p2 | and_ln781_6_fu_2524_p2);

assign or_ln786_fu_827_p2 = (and_ln786_fu_821_p2 | and_ln781_fu_798_p2);

assign or_ln93_fu_2836_p2 = (v_assign | trunc_ln27_reg_3242);

assign overflow_10_fu_2547_p2 = (xor_ln785_14_fu_2542_p2 & or_ln785_8_fu_2536_p2);

assign overflow_11_fu_2777_p2 = (xor_ln785_16_reg_3501 & or_ln785_9_fu_2772_p2);

assign overflow_1_fu_816_p2 = (xor_ln785_reg_2964 & or_ln785_fu_810_p2);

assign overflow_2_fu_1623_p2 = (xor_ln785_4_fu_1618_p2 & or_ln785_1_fu_1613_p2);

assign overflow_4_fu_1194_p2 = (tmp_12_reg_3018 & or_ln785_2_fu_1189_p2);

assign overflow_5_fu_1074_p2 = (xor_ln785_1_reg_3001 & or_ln785_3_fu_1068_p2);

assign overflow_6_fu_1559_p2 = (xor_ln785_8_fu_1554_p2 & or_ln785_4_fu_1548_p2);

assign overflow_7_fu_1922_p2 = (xor_ln785_9_fu_1917_p2 & or_ln785_5_fu_1912_p2);

assign overflow_8_fu_2060_p2 = (xor_ln785_10_fu_2054_p2 & or_ln785_6_fu_2048_p2);

assign overflow_9_fu_2381_p2 = (xor_ln785_12_fu_2376_p2 & or_ln785_7_fu_2370_p2);

assign p_Result_119_i_i_fu_2145_p4 = {{r_V_16_fu_2896_p2[35:34]}};

assign p_Result_11_fu_899_p3 = p_Val2_12_fu_875_p2[32'd15];

assign p_Result_124_i_i_fu_2182_p4 = {{r_V_17_fu_2906_p2[35:34]}};

assign p_Result_12_fu_466_p3 = r_V_14_fu_459_p2[32'd34];

assign p_Result_16_fu_1431_p3 = r_V_15_reg_3141[32'd32];

assign p_Result_17_fu_1478_p3 = p_Val2_17_fu_1452_p2[32'd17];

assign p_Result_18_fu_1722_p3 = ret_V_12_fu_1717_p2[32'd18];

assign p_Result_19_fu_1735_p3 = p_Val2_20_fu_1730_p2[32'd17];

assign p_Result_1_fu_669_p3 = p_Val2_1_fu_645_p2[32'd15];

assign p_Result_22_fu_2011_p3 = ret_V_17_fu_2006_p2[32'd19];

assign p_Result_23_fu_2024_p3 = p_Val2_32_fu_2019_p2[32'd17];

assign p_Result_25_fu_2259_p3 = r_V_16_reg_3321[32'd32];

assign p_Result_26_fu_2306_p3 = p_Val2_35_fu_2280_p2[32'd17];

assign p_Result_28_fu_2425_p3 = r_V_17_reg_3351[32'd32];

assign p_Result_29_fu_2472_p3 = p_Val2_38_fu_2446_p2[32'd17];

assign p_Result_2_fu_389_p3 = r_V_11_fu_383_p2[32'd35];

assign p_Result_31_fu_2591_p3 = r_V_18_reg_3381[32'd32];

assign p_Result_32_fu_2638_p3 = p_Val2_43_fu_2612_p2[32'd17];

assign p_Result_4_fu_733_p3 = p_Val2_4_fu_709_p2[32'd17];

assign p_Result_5_fu_1275_p3 = ret_V_10_fu_1271_p2[32'd35];

assign p_Result_6_fu_1293_p3 = ret_V_10_fu_1271_p2[32'd32];

assign p_Result_7_fu_1342_p3 = p_Val2_8_fu_1316_p2[32'd17];

assign p_Result_84_i_i_fu_741_p4 = {{r_V_11_reg_2936[35:34]}};

assign p_Result_85_i_i_fu_756_p4 = {{r_V_11_reg_2936[35:33]}};

assign p_Result_8_fu_351_p3 = v_assign[32'd2];

assign p_Result_9_fu_527_p2 = (tmp_12_fu_520_p3 ^ 1'd1);

assign p_Result_s_fu_585_p3 = p_Val2_s_reg_267[32'd2];

assign p_Val2_12_fu_875_p2 = ($signed(sext_ln713_reg_3030) + $signed(zext_ln402_fu_871_p1));

assign p_Val2_14_fu_981_p3 = {{tmp_10_i_fu_972_p4}, {and_ln414_1_fu_967_p2}};

assign p_Val2_16_fu_1422_p4 = {{r_V_15_reg_3141[32:15]}};

assign p_Val2_17_fu_1452_p2 = (p_Val2_16_fu_1422_p4 + zext_ln415_3_fu_1448_p1);

assign p_Val2_18_fu_1705_p3 = ((or_ln340_13_fu_1688_p2[0:0] === 1'b1) ? select_ln340_5_fu_1693_p3 : select_ln388_4_fu_1699_p3);

assign p_Val2_1_fu_645_p2 = ($signed(sext_ln718_fu_619_p1) + $signed(zext_ln415_fu_641_p1));

assign p_Val2_20_fu_1730_p1 = im_V;

assign p_Val2_20_fu_1730_p2 = ($signed(p_Val2_18_fu_1705_p3) + $signed(p_Val2_20_fu_1730_p1));

assign p_Val2_26_fu_1874_p2 = ($signed(x0_V_reg_3247) + $signed(trunc_ln1192_fu_1853_p1));

assign p_Val2_32_fu_2019_p2 = ($signed(trunc_ln1192_1_fu_2002_p1) + $signed(y0_V_reg_3252));

assign p_Val2_34_fu_2250_p4 = {{r_V_16_reg_3321[32:15]}};

assign p_Val2_35_fu_2280_p2 = (p_Val2_34_fu_2250_p4 + zext_ln415_4_fu_2276_p1);

assign p_Val2_37_fu_2416_p4 = {{r_V_17_reg_3351[32:15]}};

assign p_Val2_38_fu_2446_p2 = (p_Val2_37_fu_2416_p4 + zext_ln415_5_fu_2442_p1);

assign p_Val2_42_fu_2582_p4 = {{r_V_18_reg_3381[32:15]}};

assign p_Val2_43_fu_2612_p2 = (p_Val2_42_fu_2582_p4 + zext_ln415_6_fu_2608_p1);

assign p_Val2_4_fu_709_p2 = (p_Val2_3_reg_2949 + zext_ln415_1_fu_705_p1);

assign p_Val2_7_fu_1283_p4 = {{ret_V_10_fu_1271_p2[32:15]}};

assign p_Val2_8_fu_1316_p2 = (p_Val2_7_fu_1283_p4 + zext_ln415_2_fu_1312_p1);

assign p_Val2_9_fu_498_p3 = ((p_Result_8_fu_351_p3[0:0] === 1'b1) ? 17'd131071 : shl_ln_fu_343_p3);

assign r_V_11_fu_383_p2 = ($signed(sext_ln1118_fu_367_p1) - $signed(sext_ln1118_1_fu_379_p1));

assign r_V_13_fu_2869_p0 = 31'd5461;

assign r_V_13_fu_2869_p1 = r_V_13_fu_2869_p10;

assign r_V_13_fu_2869_p10 = p_Val2_9_fu_498_p3;

assign r_V_14_fu_459_p2 = ($signed(35'd0) - $signed(sext_ln1118_2_fu_455_p1));

assign r_V_16_fu_2896_p0 = r_V_fu_2132_p1;

assign r_V_16_fu_2896_p1 = r_V_fu_2132_p1;

assign r_V_17_fu_2906_p0 = r_V_7_fu_2169_p1;

assign r_V_17_fu_2906_p1 = r_V_7_fu_2169_p1;

assign r_V_18_fu_2916_p0 = r_V_9_fu_2218_p1;

assign r_V_18_fu_2916_p1 = r_V_9_fu_2218_p1;

assign r_V_7_fu_2169_p1 = y_V_reg_3315;

assign r_V_9_fu_2218_p1 = $signed(ret_V_9_fu_2212_p2);

assign r_V_fu_2132_p1 = x_V_reg_3309;

assign real_btm_V_fu_1164_p3 = ((or_ln340_1_fu_1147_p2[0:0] === 1'b1) ? select_ln340_fu_1152_p3 : select_ln388_fu_1158_p3);

assign real_top_V_fu_683_p3 = ((or_ln786_3_fu_677_p2[0:0] === 1'b1) ? sext_ln415_fu_651_p1 : 18'd131072);

assign ret_V_10_fu_1271_p2 = ($signed(r_V_12_reg_3131) + $signed(sext_ln728_reg_2970));

assign ret_V_11_fu_513_p2 = (trunc_ln703_fu_510_p1 ^ 30'd536870912);

assign ret_V_12_fu_1717_p2 = ($signed(sext_ln703_reg_3007) + $signed(lhs_V_fu_1713_p1));

assign ret_V_13_fu_1847_p2 = ($signed(lhs_V_4_fu_1817_p1) - $signed(rhs_V_1_fu_1821_p1));

assign ret_V_14_fu_1861_p2 = ($signed(lhs_V_2_fu_1857_p1) + $signed(rhs_V_2_reg_3262));

assign ret_V_15_fu_1901_p2 = ($signed(sext_ln703_6_fu_1897_p1) - $signed(lhs_V_4_fu_1817_p1));

assign ret_V_16_fu_1996_p2 = ($signed(lhs_V_3_fu_1989_p1) - $signed(sext_ln703_8_fu_1992_p1));

assign ret_V_17_fu_2006_p2 = ($signed(ret_V_16_fu_1996_p2) + $signed(sext_ln64_reg_3257));

assign ret_V_9_fu_2212_p2 = ($signed(sext_ln703_9_fu_2206_p1) + $signed(sext_ln703_10_fu_2209_p1));

assign ret_V_fu_1825_p2 = ($signed(rhs_V_1_fu_1821_p1) + $signed(lhs_V_4_fu_1817_p1));

assign rhs_V_1_fu_1821_p1 = ap_phi_mux_p_Val2_22_phi_fu_294_p4;

assign rhs_V_2_fu_1801_p1 = x0_V_fu_1676_p3;

assign rhs_V_fu_435_p3 = {{re_V}, {15'd0}};

assign rsquare_V_fu_2720_p3 = ((or_ln340_22_fu_2703_p2[0:0] === 1'b1) ? select_ln340_9_fu_2708_p3 : select_ln388_8_fu_2714_p3);

assign select_ln340_10_fu_2737_p3 = ((or_ln340_23_reg_3468[0:0] === 1'b1) ? 18'd131071 : p_Val2_38_reg_3442);

assign select_ln340_11_fu_2814_p3 = ((or_ln340_26_fu_2798_p2[0:0] === 1'b1) ? 18'd131071 : p_Val2_43_reg_3473);

assign select_ln340_12_fu_593_p3 = ((p_Result_s_fu_585_p3[0:0] === 1'b1) ? 17'd131071 : trunc_ln4_fu_577_p3);

assign select_ln340_1_fu_1662_p3 = ((or_ln340_3_fu_1645_p2[0:0] === 1'b1) ? 18'd131071 : p_Val2_8_reg_3177);

assign select_ln340_3_fu_1213_p3 = ((or_ln340_6_fu_1199_p2[0:0] === 1'b1) ? 18'd131071 : sext_ln415_1_fu_1182_p1);

assign select_ln340_4_fu_1119_p3 = ((or_ln340_9_fu_1102_p2[0:0] === 1'b1) ? 18'd131071 : p_Val2_14_fu_981_p3);

assign select_ln340_5_fu_1693_p3 = ((or_ln340_12_reg_3237[0:0] === 1'b1) ? 18'd131071 : p_Val2_17_reg_3211);

assign select_ln340_6_fu_1773_p3 = ((xor_ln340_fu_1755_p2[0:0] === 1'b1) ? 18'd131071 : p_Val2_20_fu_1730_p2);

assign select_ln340_7_fu_1967_p3 = ((or_ln340_16_fu_1949_p2[0:0] === 1'b1) ? 18'd131071 : p_Val2_26_reg_3286);

assign select_ln340_8_fu_2108_p3 = ((or_ln340_18_fu_2090_p2[0:0] === 1'b1) ? 18'd131071 : p_Val2_32_fu_2019_p2);

assign select_ln340_9_fu_2708_p3 = ((or_ln340_20_reg_3437[0:0] === 1'b1) ? 18'd131071 : p_Val2_35_reg_3411);

assign select_ln340_fu_1152_p3 = ((or_ln340_reg_3085[0:0] === 1'b1) ? 18'd131071 : p_Val2_4_reg_3064);

assign select_ln388_10_fu_2821_p3 = ((underflow_10_fu_2793_p2[0:0] === 1'b1) ? 18'd131072 : p_Val2_43_reg_3473);

assign select_ln388_1_fu_1669_p3 = ((underflow_1_fu_1640_p2[0:0] === 1'b1) ? 18'd131072 : p_Val2_8_reg_3177);

assign select_ln388_2_fu_1221_p3 = ((underflow_2_reg_3120[0:0] === 1'b1) ? 18'd131072 : sext_ln415_1_fu_1182_p1);

assign select_ln388_3_fu_1127_p3 = ((underflow_3_fu_1097_p2[0:0] === 1'b1) ? 18'd131072 : p_Val2_14_fu_981_p3);

assign select_ln388_4_fu_1699_p3 = ((underflow_4_reg_3232[0:0] === 1'b1) ? 18'd131072 : p_Val2_17_reg_3211);

assign select_ln388_5_fu_1781_p3 = ((underflow_5_fu_1749_p2[0:0] === 1'b1) ? 18'd131072 : p_Val2_20_fu_1730_p2);

assign select_ln388_6_fu_1974_p3 = ((underflow_6_fu_1944_p2[0:0] === 1'b1) ? 18'd131072 : p_Val2_26_reg_3286);

assign select_ln388_7_fu_2116_p3 = ((underflow_7_fu_2084_p2[0:0] === 1'b1) ? 18'd131072 : p_Val2_32_fu_2019_p2);

assign select_ln388_8_fu_2714_p3 = ((underflow_8_reg_3432[0:0] === 1'b1) ? 18'd131072 : p_Val2_35_reg_3411);

assign select_ln388_9_fu_2743_p3 = ((underflow_9_reg_3463[0:0] === 1'b1) ? 18'd131072 : p_Val2_38_reg_3442);

assign select_ln388_fu_1158_p3 = ((underflow_reg_3080[0:0] === 1'b1) ? 18'd131072 : p_Val2_4_reg_3064);

assign sext_ln1118_1_fu_379_p1 = $signed(shl_ln1118_1_fu_371_p3);

assign sext_ln1118_2_fu_455_p1 = $signed(shl_ln1118_2_fu_447_p3);

assign sext_ln1118_fu_367_p1 = $signed(shl_ln1_fu_359_p3);

assign sext_ln415_1_fu_1182_p1 = p_Val2_12_reg_3090;

assign sext_ln415_fu_651_p1 = p_Val2_1_fu_645_p2;

assign sext_ln64_fu_1797_p1 = y0_V_fu_1789_p3;

assign sext_ln703_10_fu_2209_p1 = y_V_reg_3315;

assign sext_ln703_6_fu_1897_p1 = $signed(ap_phi_mux_p_Val2_27_phi_fu_306_p4);

assign sext_ln703_8_fu_1992_p1 = p_Val2_22_reg_290;

assign sext_ln703_9_fu_2206_p1 = x_V_reg_3309;

assign sext_ln703_fu_494_p0 = im_V;

assign sext_ln703_fu_494_p1 = sext_ln703_fu_494_p0;

assign sext_ln713_fu_543_p1 = $signed(trunc_ln2_fu_533_p4);

assign sext_ln718_fu_619_p1 = $signed(trunc_ln708_2_fu_611_p3);

assign sext_ln728_fu_443_p1 = $signed(rhs_V_fu_435_p3);

assign shl_ln1118_1_fu_371_p3 = {{zoom_factor_V}, {15'd0}};

assign shl_ln1118_2_fu_447_p3 = {{zoom_factor_V}, {16'd0}};

assign shl_ln1_fu_359_p3 = {{zoom_factor_V}, {17'd0}};

assign shl_ln_fu_343_p3 = {{trunc_ln746_fu_339_p1}, {15'd0}};

assign tmp_10_i_fu_972_p4 = {{r_V_14_reg_2975[32:16]}};

assign tmp_11_fu_474_p3 = r_V_14_fu_459_p2[32'd33];

assign tmp_12_fu_520_p3 = r_V_13_fu_2869_p2[32'd29];

assign tmp_17_fu_655_p3 = p_Val2_1_fu_645_p2[32'd15];

assign tmp_19_fu_714_p3 = p_Val2_4_fu_709_p2[32'd17];

assign tmp_23_fu_1322_p3 = p_Val2_8_fu_1316_p2[32'd17];

assign tmp_25_fu_1388_p3 = ret_V_10_fu_1271_p2[32'd33];

assign tmp_26_fu_880_p3 = p_Val2_12_fu_875_p2[32'd15];

assign tmp_29_fu_989_p3 = r_V_14_reg_2975[32'd32];

assign tmp_34_fu_1458_p3 = p_Val2_17_fu_1452_p2[32'd17];

assign tmp_36_fu_1509_p3 = r_V_15_reg_3141[32'd33];

assign tmp_39_fu_1831_p4 = {{ret_V_fu_1825_p2[18:17]}};

assign tmp_3_fu_1366_p4 = {{ret_V_10_fu_1271_p2[35:33]}};

assign tmp_3_i_fu_627_p3 = {{trunc_ln414_fu_623_p1}, {12'd0}};

assign tmp_46_fu_2286_p3 = p_Val2_35_fu_2280_p2[32'd17];

assign tmp_48_fu_2332_p3 = r_V_16_reg_3321[32'd33];

assign tmp_51_fu_2452_p3 = p_Val2_38_fu_2446_p2[32'd17];

assign tmp_53_fu_2498_p3 = r_V_17_reg_3351[32'd33];

assign tmp_56_fu_2618_p3 = p_Val2_43_fu_2612_p2[32'd17];

assign tmp_58_fu_2661_p3 = r_V_18_reg_3381[32'd33];

assign tmp_5_fu_415_p3 = r_V_11_fu_383_p2[32'd33];

assign tmp_6_fu_1014_p4 = {{r_V_14_reg_2975[34:33]}};

assign tmp_7_fu_2032_p4 = {{ret_V_17_fu_2006_p2[19:18]}};

assign tmp_9_fu_601_p4 = {{select_ln340_12_fu_593_p3[16:3]}};

assign tmp_9_i_fu_853_p3 = {{tmp_14_reg_3041}, {trunc_ln718_1_fu_850_p1}};

assign tmp_fu_1350_p4 = {{ret_V_10_fu_1271_p2[35:34]}};

assign trunc_ln1192_1_fu_2002_p1 = ret_V_16_fu_1996_p2[17:0];

assign trunc_ln1192_fu_1853_p1 = ret_V_13_fu_1847_p2[17:0];

assign trunc_ln27_fu_1594_p1 = p_Val2_s_reg_267[2:0];

assign trunc_ln2_fu_533_p4 = {{ret_V_11_fu_513_p2[29:15]}};

assign trunc_ln414_1_fu_1179_p1 = r_V_12_fu_2879_p2[14:0];

assign trunc_ln414_2_fu_1250_p1 = r_V_15_fu_2886_p2[14:0];

assign trunc_ln414_3_fu_2142_p1 = r_V_16_fu_2896_p2[14:0];

assign trunc_ln414_4_fu_2179_p1 = r_V_17_fu_2906_p2[14:0];

assign trunc_ln414_5_fu_2229_p1 = r_V_18_fu_2916_p2[14:0];

assign trunc_ln414_fu_623_p1 = select_ln340_12_fu_593_p3[2:0];

assign trunc_ln4_fu_577_p3 = {{trunc_ln746_1_fu_573_p1}, {15'd0}};

assign trunc_ln703_fu_510_p1 = r_V_13_fu_2869_p2[29:0];

assign trunc_ln708_2_fu_611_p3 = {{1'd1}, {tmp_9_fu_601_p4}};

assign trunc_ln718_1_fu_850_p1 = ret_V_11_reg_3012[13:0];

assign trunc_ln718_2_fu_958_p1 = r_V_14_reg_2975[13:0];

assign trunc_ln718_fu_691_p1 = r_V_11_reg_2936[13:0];

assign trunc_ln746_1_fu_573_p1 = p_Val2_s_reg_267[1:0];

assign trunc_ln746_fu_339_p1 = v_assign[1:0];

assign underflow_10_fu_2793_p2 = (xor_ln786_10_fu_2787_p2 & p_Result_30_reg_3388);

assign underflow_1_fu_1640_p2 = (xor_ln786_1_fu_1634_p2 & p_Result_5_reg_3171);

assign underflow_2_fu_953_p2 = (xor_ln786_2_fu_947_p2 & p_Result_9_reg_3024);

assign underflow_3_fu_1097_p2 = (xor_ln786_3_fu_1091_p2 & p_Result_12_reg_2985);

assign underflow_4_fu_1583_p2 = (xor_ln786_4_fu_1577_p2 & p_Result_15_reg_3148);

assign underflow_5_fu_1749_p2 = (xor_ln786_5_fu_1743_p2 & p_Result_18_fu_1722_p3);

assign underflow_6_fu_1944_p2 = (p_Result_20_reg_3280 & or_ln786_1_fu_1938_p2);

assign underflow_7_fu_2084_p2 = (p_Result_22_fu_2011_p3 & or_ln786_2_fu_2078_p2);

assign underflow_8_fu_2405_p2 = (xor_ln786_8_fu_2399_p2 & p_Result_24_reg_3328);

assign underflow_9_fu_2571_p2 = (xor_ln786_9_fu_2565_p2 & p_Result_27_reg_3358);

assign underflow_fu_839_p2 = (xor_ln786_fu_833_p2 & p_Result_2_reg_2943);

assign x0_V_fu_1676_p3 = ((or_ln340_4_fu_1656_p2[0:0] === 1'b1) ? select_ln340_1_fu_1662_p3 : select_ln388_1_fu_1669_p3);

assign x_V_fu_1981_p3 = ((or_ln340_17_fu_1961_p2[0:0] === 1'b1) ? select_ln340_7_fu_1967_p3 : select_ln388_6_fu_1974_p3);

assign xor_ln340_1_fu_1761_p2 = (p_Result_18_fu_1722_p3 ^ 1'd1);

assign xor_ln340_2_fu_1955_p2 = (underflow_6_fu_1944_p2 ^ 1'd1);

assign xor_ln340_3_fu_2096_p2 = (underflow_7_fu_2084_p2 ^ 1'd1);

assign xor_ln340_fu_1755_p2 = (p_Result_19_fu_1735_p3 ^ p_Result_18_fu_1722_p3);

assign xor_ln416_2_fu_722_p2 = (tmp_19_fu_714_p3 ^ 1'd1);

assign xor_ln416_3_fu_1330_p2 = (tmp_23_fu_1322_p3 ^ 1'd1);

assign xor_ln416_4_fu_888_p2 = (tmp_26_fu_880_p3 ^ 1'd1);

assign xor_ln416_5_fu_907_p2 = (p_Result_10_reg_3035 ^ 1'd1);

assign xor_ln416_6_fu_1466_p2 = (tmp_34_fu_1458_p3 ^ 1'd1);

assign xor_ln416_7_fu_2294_p2 = (tmp_46_fu_2286_p3 ^ 1'd1);

assign xor_ln416_8_fu_2460_p2 = (tmp_51_fu_2452_p3 ^ 1'd1);

assign xor_ln416_9_fu_2626_p2 = (tmp_56_fu_2618_p3 ^ 1'd1);

assign xor_ln416_fu_996_p2 = (tmp_29_fu_989_p3 ^ 1'd1);

assign xor_ln779_1_fu_482_p2 = (tmp_11_fu_474_p3 ^ 1'd1);

assign xor_ln779_2_fu_1396_p2 = (tmp_25_fu_1388_p3 ^ 1'd1);

assign xor_ln779_3_fu_1516_p2 = (tmp_36_fu_1509_p3 ^ 1'd1);

assign xor_ln779_4_fu_2339_p2 = (tmp_48_fu_2332_p3 ^ 1'd1);

assign xor_ln779_5_fu_2505_p2 = (tmp_53_fu_2498_p3 ^ 1'd1);

assign xor_ln779_6_fu_2668_p2 = (tmp_58_fu_2661_p3 ^ 1'd1);

assign xor_ln779_fu_423_p2 = (tmp_5_fu_415_p3 ^ 1'd1);

assign xor_ln785_10_fu_2054_p2 = (p_Result_22_fu_2011_p3 ^ 1'd1);

assign xor_ln785_11_fu_2364_p2 = (deleted_zeros_4_fu_2324_p3 ^ 1'd1);

assign xor_ln785_12_fu_2376_p2 = (p_Result_24_reg_3328 ^ 1'd1);

assign xor_ln785_13_fu_2530_p2 = (deleted_zeros_5_fu_2490_p3 ^ 1'd1);

assign xor_ln785_14_fu_2542_p2 = (p_Result_27_reg_3358 ^ 1'd1);

assign xor_ln785_15_fu_2766_p2 = (deleted_zeros_6_fu_2757_p3 ^ 1'd1);

assign xor_ln785_16_fu_2688_p2 = (p_Result_30_reg_3388 ^ 1'd1);

assign xor_ln785_1_fu_488_p2 = (p_Result_12_fu_466_p3 ^ 1'd1);

assign xor_ln785_2_fu_804_p2 = (deleted_zeros_fu_777_p3 ^ 1'd1);

assign xor_ln785_3_fu_1607_p2 = (deleted_zeros_1_fu_1598_p3 ^ 1'd1);

assign xor_ln785_4_fu_1618_p2 = (p_Result_5_reg_3171 ^ 1'd1);

assign xor_ln785_5_fu_1185_p2 = (carry_6_reg_3095 ^ Range2_all_ones_8_reg_3105);

assign xor_ln785_6_fu_1062_p2 = (deleted_zeros_2_fu_1035_p3 ^ 1'd1);

assign xor_ln785_7_fu_1542_p2 = (deleted_zeros_3_fu_1501_p3 ^ 1'd1);

assign xor_ln785_8_fu_1554_p2 = (p_Result_15_reg_3148 ^ 1'd1);

assign xor_ln785_9_fu_1917_p2 = (p_Result_20_reg_3280 ^ 1'd1);

assign xor_ln785_fu_429_p2 = (p_Result_2_fu_389_p3 ^ 1'd1);

assign xor_ln786_10_fu_2787_p2 = (or_ln786_10_fu_2782_p2 ^ 1'd1);

assign xor_ln786_1_fu_1634_p2 = (or_ln786_4_fu_1629_p2 ^ 1'd1);

assign xor_ln786_2_fu_947_p2 = (or_ln786_5_fu_941_p2 ^ 1'd1);

assign xor_ln786_3_fu_1091_p2 = (or_ln786_6_fu_1085_p2 ^ 1'd1);

assign xor_ln786_4_fu_1577_p2 = (or_ln786_7_fu_1571_p2 ^ 1'd1);

assign xor_ln786_5_fu_1743_p2 = (p_Result_19_fu_1735_p3 ^ 1'd1);

assign xor_ln786_6_fu_1928_p2 = (p_Result_21_reg_3292 ^ 1'd1);

assign xor_ln786_7_fu_2066_p2 = (p_Result_23_fu_2024_p3 ^ 1'd1);

assign xor_ln786_8_fu_2399_p2 = (or_ln786_8_fu_2393_p2 ^ 1'd1);

assign xor_ln786_9_fu_2565_p2 = (or_ln786_9_fu_2559_p2 ^ 1'd1);

assign xor_ln786_fu_833_p2 = (or_ln786_fu_827_p2 ^ 1'd1);

assign y0_V_fu_1789_p3 = ((or_ln340_15_fu_1767_p2[0:0] === 1'b1) ? select_ln340_6_fu_1773_p3 : select_ln388_5_fu_1781_p3);

assign y_V_fu_2124_p3 = ((or_ln340_19_fu_2102_p2[0:0] === 1'b1) ? select_ln340_8_fu_2108_p3 : select_ln388_7_fu_2116_p3);

assign zext_ln402_fu_871_p1 = and_ln700_1_fu_866_p2;

assign zext_ln415_1_fu_705_p1 = and_ln414_fu_700_p2;

assign zext_ln415_2_fu_1312_p1 = and_ln700_fu_1306_p2;

assign zext_ln415_3_fu_1448_p1 = and_ln700_2_fu_1443_p2;

assign zext_ln415_4_fu_2276_p1 = and_ln700_3_fu_2271_p2;

assign zext_ln415_5_fu_2442_p1 = and_ln700_4_fu_2437_p2;

assign zext_ln415_6_fu_2608_p1 = and_ln700_5_fu_2603_p2;

assign zext_ln415_fu_641_p1 = icmp_ln414_8_fu_635_p2;

assign zext_ln85_fu_2854_p1 = p_Val2_s_reg_267;

assign zsquare_V_fu_2828_p3 = ((or_ln340_28_fu_2808_p2[0:0] === 1'b1) ? select_ln340_11_fu_2814_p3 : select_ln388_10_fu_2821_p3);

always @ (posedge ap_clk) begin
    r_V_11_reg_2936[14:0] <= 15'b000000000000000;
    sext_ln728_reg_2970[14:0] <= 15'b000000000000000;
    r_V_14_reg_2975[15:0] <= 16'b0000000000000000;
end

endmodule //inner_proc
