// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module inner_proc (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        v_assign,
        m_axis_video_TDATA,
        m_axis_video_TVALID,
        m_axis_video_TREADY,
        m_axis_video_TKEEP,
        m_axis_video_TSTRB,
        m_axis_video_TUSER,
        m_axis_video_TLAST,
        m_axis_video_TID,
        m_axis_video_TDEST,
        im_V,
        re_V,
        zoom_factor_V
);

parameter    ap_ST_fsm_state1 = 12'd1;
parameter    ap_ST_fsm_state2 = 12'd2;
parameter    ap_ST_fsm_state3 = 12'd4;
parameter    ap_ST_fsm_state4 = 12'd8;
parameter    ap_ST_fsm_state5 = 12'd16;
parameter    ap_ST_fsm_state6 = 12'd32;
parameter    ap_ST_fsm_state7 = 12'd64;
parameter    ap_ST_fsm_pp0_stage0 = 12'd128;
parameter    ap_ST_fsm_pp0_stage1 = 12'd256;
parameter    ap_ST_fsm_pp0_stage2 = 12'd512;
parameter    ap_ST_fsm_pp0_stage3 = 12'd1024;
parameter    ap_ST_fsm_state13 = 12'd2048;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [9:0] v_assign;
output  [23:0] m_axis_video_TDATA;
output   m_axis_video_TVALID;
input   m_axis_video_TREADY;
output  [2:0] m_axis_video_TKEEP;
output  [2:0] m_axis_video_TSTRB;
output  [0:0] m_axis_video_TUSER;
output  [0:0] m_axis_video_TLAST;
output  [0:0] m_axis_video_TID;
output  [0:0] m_axis_video_TDEST;
input  [17:0] im_V;
input  [17:0] re_V;
input  [17:0] zoom_factor_V;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg m_axis_video_TVALID;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [11:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    m_axis_video_TDATA_blk_n;
wire    ap_CS_fsm_state13;
reg   [17:0] p_Val2_22_reg_294;
reg  signed [17:0] p_Val2_23_reg_305;
reg   [17:0] p_Val2_24_reg_317;
reg   [7:0] pixel_R_reg_328;
reg    ap_block_state1;
wire   [0:0] tmp_last_V_fu_347_p2;
reg   [0:0] tmp_last_V_reg_2894;
reg   [0:0] p_Result_8_reg_2899;
wire   [16:0] trunc_ln_fu_365_p3;
reg   [16:0] trunc_ln_reg_2904;
wire   [35:0] r_V_13_fu_397_p2;
reg   [35:0] r_V_13_reg_2909;
wire   [0:0] p_Result_2_fu_403_p3;
reg   [0:0] p_Result_2_reg_2916;
reg   [17:0] p_Val2_5_reg_2922;
reg   [0:0] p_Result_3_reg_2927;
wire   [0:0] xor_ln779_fu_437_p2;
reg   [0:0] xor_ln779_reg_2932;
wire   [0:0] xor_ln785_fu_443_p2;
reg   [0:0] xor_ln785_reg_2937;
wire  signed [35:0] sext_ln728_fu_457_p1;
reg  signed [35:0] sext_ln728_reg_2943;
wire   [34:0] r_V_16_fu_473_p2;
reg   [34:0] r_V_16_reg_2948;
wire   [0:0] p_Result_10_fu_480_p3;
reg   [0:0] p_Result_10_reg_2958;
wire   [0:0] grp_fu_340_p3;
reg   [0:0] p_Result_11_reg_2964;
wire   [0:0] xor_ln779_1_fu_496_p2;
reg   [0:0] xor_ln779_1_reg_2969;
wire   [0:0] xor_ln785_1_fu_502_p2;
reg   [0:0] xor_ln785_1_reg_2974;
wire  signed [18:0] sext_ln703_fu_508_p1;
reg  signed [18:0] sext_ln703_reg_2980;
wire   [9:0] col_fu_518_p2;
reg   [9:0] col_reg_2988;
wire    ap_CS_fsm_state2;
wire   [0:0] tmp_user_V_fu_529_p2;
reg   [0:0] tmp_user_V_reg_2993;
wire   [0:0] icmp_ln30_fu_512_p2;
reg   [7:0] tmp_s_reg_2998;
wire   [0:0] icmp_ln414_2_fu_675_p2;
reg   [0:0] icmp_ln414_2_reg_3003;
wire   [17:0] p_Val2_6_fu_699_p2;
reg   [17:0] p_Val2_6_reg_3008;
wire   [0:0] and_ln781_fu_788_p2;
reg   [0:0] and_ln781_reg_3014;
wire   [0:0] and_ln786_fu_811_p2;
reg   [0:0] and_ln786_reg_3019;
wire   [0:0] underflow_fu_829_p2;
reg   [0:0] underflow_reg_3024;
wire   [0:0] or_ln340_fu_834_p2;
reg   [0:0] or_ln340_reg_3029;
wire   [16:0] select_ln340_2_fu_860_p3;
reg   [16:0] select_ln340_2_reg_3034;
wire   [17:0] imag_btm_V_fu_1044_p3;
reg  signed [17:0] imag_btm_V_reg_3039;
wire   [17:0] real_top_V_fu_1104_p3;
reg  signed [17:0] real_top_V_reg_3044;
wire    ap_CS_fsm_state3;
wire   [17:0] real_btm_V_fu_1133_p3;
reg  signed [17:0] real_btm_V_reg_3049;
reg   [8:0] tmp_2_reg_3054;
wire   [14:0] trunc_ln414_1_fu_1153_p1;
reg   [14:0] trunc_ln414_1_reg_3059;
wire  signed [35:0] r_V_14_fu_2836_p2;
reg  signed [35:0] r_V_14_reg_3064;
wire    ap_CS_fsm_state4;
wire   [14:0] trunc_ln414_fu_1162_p1;
reg   [14:0] trunc_ln414_reg_3069;
wire   [17:0] imag_top_V_fu_1215_p3;
reg  signed [17:0] imag_top_V_reg_3074;
wire   [0:0] p_Result_5_fu_1227_p3;
reg   [0:0] p_Result_5_reg_3079;
wire    ap_CS_fsm_state5;
wire   [17:0] p_Val2_10_fu_1268_p2;
reg   [17:0] p_Val2_10_reg_3085;
wire   [0:0] carry_4_fu_1288_p2;
reg   [0:0] carry_4_reg_3091;
wire   [0:0] p_Result_7_fu_1294_p3;
reg   [0:0] p_Result_7_reg_3097;
wire   [0:0] Range1_all_ones_1_fu_1328_p2;
reg   [0:0] Range1_all_ones_1_reg_3102;
wire   [0:0] Range1_all_zeros_1_fu_1334_p2;
reg   [0:0] Range1_all_zeros_1_reg_3108;
wire   [0:0] and_ln786_2_fu_1368_p2;
reg   [0:0] and_ln786_2_reg_3113;
wire  signed [35:0] r_V_17_fu_2843_p2;
reg  signed [35:0] r_V_17_reg_3119;
reg   [0:0] p_Result_13_reg_3126;
wire   [14:0] trunc_ln414_2_fu_1387_p1;
reg   [14:0] trunc_ln414_2_reg_3133;
wire   [0:0] Range2_all_ones_3_fu_1399_p2;
reg   [0:0] Range2_all_ones_3_reg_3138;
reg   [2:0] p_Result_111_i_i_reg_3143;
wire  signed [17:0] x0_V_fu_1492_p3;
reg  signed [17:0] x0_V_reg_3149;
wire    ap_CS_fsm_state6;
wire   [17:0] p_Val2_18_fu_1530_p2;
reg   [17:0] p_Val2_18_reg_3155;
wire   [0:0] and_ln781_3_fu_1608_p2;
reg   [0:0] and_ln781_3_reg_3161;
wire   [0:0] xor_ln785_7_fu_1626_p2;
reg   [0:0] xor_ln785_7_reg_3166;
wire   [0:0] and_ln786_6_fu_1637_p2;
reg   [0:0] and_ln786_6_reg_3171;
wire   [0:0] underflow_3_fu_1655_p2;
reg   [0:0] underflow_3_reg_3176;
wire   [0:0] or_ln340_9_fu_1660_p2;
reg   [0:0] or_ln340_9_reg_3181;
wire  signed [17:0] y0_V_fu_1771_p3;
reg  signed [17:0] y0_V_reg_3186;
wire    ap_CS_fsm_state7;
wire  signed [19:0] sext_ln703_2_fu_1779_p1;
reg  signed [19:0] sext_ln703_2_reg_3191;
wire  signed [19:0] rhs_V_3_fu_1783_p1;
reg  signed [19:0] rhs_V_3_reg_3196;
wire   [0:0] icmp_ln65_fu_1786_p2;
reg   [0:0] icmp_ln65_reg_3201;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state8_pp0_stage0_iter0;
wire    ap_block_state12_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [7:0] iter_fu_1792_p2;
reg   [7:0] iter_reg_3205;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] icmp_ln1497_fu_1822_p2;
reg   [0:0] icmp_ln1497_reg_3210;
wire   [18:0] ret_V_11_fu_1832_p2;
reg   [18:0] ret_V_11_reg_3214;
reg   [0:0] p_Result_20_reg_3219;
wire   [17:0] p_Val2_33_fu_1865_p2;
reg   [17:0] p_Val2_33_reg_3225;
reg   [0:0] p_Result_21_reg_3231;
reg   [1:0] p_Result_119_i_i_reg_3237;
wire  signed [17:0] y_V_fu_2023_p3;
reg  signed [17:0] y_V_reg_3243;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state9_pp0_stage1_iter0;
wire    ap_block_pp0_stage1_11001;
wire  signed [17:0] x_V_fu_2105_p3;
reg  signed [17:0] x_V_reg_3249;
wire  signed [35:0] r_V_18_fu_2853_p2;
reg  signed [35:0] r_V_18_reg_3255;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state10_pp0_stage2_iter0;
wire    ap_block_pp0_stage2_11001;
reg   [0:0] p_Result_22_reg_3262;
wire   [14:0] trunc_ln414_3_fu_2123_p1;
reg   [14:0] trunc_ln414_3_reg_3269;
wire   [0:0] Range2_all_ones_4_fu_2135_p2;
reg   [0:0] Range2_all_ones_4_reg_3274;
reg   [2:0] p_Result_124_i_i_reg_3279;
wire  signed [35:0] r_V_19_fu_2863_p2;
reg  signed [35:0] r_V_19_reg_3285;
reg   [0:0] p_Result_25_reg_3292;
wire   [14:0] trunc_ln414_4_fu_2160_p1;
reg   [14:0] trunc_ln414_4_reg_3299;
wire   [0:0] Range2_all_ones_5_fu_2172_p2;
reg   [0:0] Range2_all_ones_5_reg_3304;
reg   [2:0] p_Result_129_i_i_reg_3309;
wire  signed [37:0] r_V_20_fu_2873_p2;
reg  signed [37:0] r_V_20_reg_3315;
reg   [0:0] p_Result_28_reg_3322;
wire   [14:0] trunc_ln414_5_fu_2210_p1;
reg   [14:0] trunc_ln414_5_reg_3329;
reg   [3:0] p_Result_133_i_i_reg_3334;
reg   [4:0] p_Result_134_i_i_reg_3339;
wire   [17:0] p_Val2_36_fu_2261_p2;
reg   [17:0] p_Val2_36_reg_3345;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state11_pp0_stage3_iter0;
wire    ap_block_pp0_stage3_11001;
wire   [0:0] and_ln781_4_fu_2339_p2;
reg   [0:0] and_ln781_4_reg_3351;
wire   [0:0] xor_ln785_11_fu_2357_p2;
reg   [0:0] xor_ln785_11_reg_3356;
wire   [0:0] and_ln786_11_fu_2368_p2;
reg   [0:0] and_ln786_11_reg_3361;
wire   [0:0] underflow_7_fu_2386_p2;
reg   [0:0] underflow_7_reg_3366;
wire   [0:0] or_ln340_17_fu_2391_p2;
reg   [0:0] or_ln340_17_reg_3371;
wire   [17:0] p_Val2_39_fu_2427_p2;
reg   [17:0] p_Val2_39_reg_3376;
wire   [0:0] and_ln781_5_fu_2505_p2;
reg   [0:0] and_ln781_5_reg_3382;
wire   [0:0] xor_ln785_13_fu_2523_p2;
reg   [0:0] xor_ln785_13_reg_3387;
wire   [0:0] and_ln786_13_fu_2534_p2;
reg   [0:0] and_ln786_13_reg_3392;
wire   [0:0] underflow_8_fu_2552_p2;
reg   [0:0] underflow_8_reg_3397;
wire   [0:0] or_ln340_20_fu_2557_p2;
reg   [0:0] or_ln340_20_reg_3402;
wire   [17:0] p_Val2_44_fu_2593_p2;
reg   [17:0] p_Val2_44_reg_3407;
wire   [0:0] carry_15_fu_2613_p2;
reg   [0:0] carry_15_reg_3413;
wire   [0:0] p_Result_30_fu_2619_p3;
reg   [0:0] p_Result_30_reg_3419;
wire   [0:0] Range1_all_ones_7_fu_2632_p2;
reg   [0:0] Range1_all_ones_7_reg_3424;
wire   [0:0] Range1_all_zeros_6_fu_2637_p2;
reg   [0:0] Range1_all_zeros_6_reg_3430;
wire   [0:0] xor_ln785_15_fu_2669_p2;
reg   [0:0] xor_ln785_15_reg_3435;
wire   [0:0] and_ln786_15_fu_2674_p2;
reg   [0:0] and_ln786_15_reg_3441;
wire   [17:0] rsquare_V_fu_2701_p3;
reg    ap_enable_reg_pp0_iter1;
wire   [17:0] isquare_V_fu_2730_p3;
wire   [17:0] zsquare_V_fu_2809_p3;
wire    ap_block_pp0_stage0_subdone;
reg    ap_predicate_tran8to13_state8;
reg    ap_condition_pp0_exit_iter0_state8;
wire    ap_block_pp0_stage3_subdone;
reg   [9:0] p_Val2_s_reg_283;
reg   [17:0] ap_phi_mux_p_Val2_22_phi_fu_298_p4;
wire    ap_block_pp0_stage0;
reg  signed [17:0] ap_phi_mux_p_Val2_23_phi_fu_309_p4;
reg   [17:0] ap_phi_mux_p_Val2_24_phi_fu_321_p4;
reg   [7:0] ap_phi_mux_pixel_R_phi_fu_332_p4;
reg   [34:0] grp_fu_340_p1;
wire   [1:0] trunc_ln746_fu_361_p1;
wire   [34:0] shl_ln1_fu_373_p3;
wire   [32:0] shl_ln1118_1_fu_385_p3;
wire  signed [35:0] sext_ln1118_fu_381_p1;
wire  signed [35:0] sext_ln1118_1_fu_393_p1;
wire   [0:0] tmp_9_fu_429_p3;
wire   [32:0] rhs_V_fu_449_p3;
wire   [33:0] shl_ln1118_2_fu_461_p3;
wire  signed [34:0] sext_ln1118_2_fu_469_p1;
wire   [0:0] tmp_13_fu_488_p3;
wire  signed [17:0] sext_ln703_fu_508_p0;
wire   [9:0] or_ln33_fu_524_p2;
wire   [1:0] trunc_ln746_2_fu_535_p1;
wire   [6:0] tmp_1_fu_555_p4;
wire   [0:0] p_Result_s_fu_547_p3;
wire   [0:0] icmp_ln785_fu_565_p2;
wire   [0:0] or_ln785_fu_571_p2;
wire   [16:0] trunc_ln746_1_fu_539_p3;
wire   [16:0] p_Val2_1_fu_577_p3;
wire   [9:0] trunc_ln1118_fu_593_p1;
wire   [21:0] shl_ln1118_3_fu_585_p3;
wire   [11:0] trunc_ln1118_1_fu_617_p1;
wire   [14:0] trunc_ln1118_2_fu_597_p3;
wire   [14:0] trunc_ln1118_3_fu_621_p3;
wire   [19:0] shl_ln1118_4_fu_609_p3;
wire   [22:0] zext_ln1118_fu_605_p1;
wire   [22:0] zext_ln1118_1_fu_635_p1;
wire   [22:0] r_V_12_fu_639_p2;
wire   [14:0] add_ln1193_fu_629_p2;
wire   [0:0] tmp_16_fu_659_p3;
wire   [13:0] trunc_ln718_fu_655_p1;
wire   [14:0] tmp_3_i_fu_667_p3;
wire   [13:0] trunc_ln718_1_fu_681_p1;
wire   [0:0] icmp_ln414_fu_684_p2;
wire   [0:0] and_ln414_fu_690_p2;
wire   [17:0] zext_ln415_1_fu_695_p1;
wire   [0:0] tmp_19_fu_704_p3;
wire   [0:0] xor_ln416_fu_712_p2;
wire   [1:0] p_Result_87_i_i_fu_731_p4;
wire   [2:0] p_Result_88_i_i_fu_746_p4;
wire   [0:0] carry_2_fu_718_p2;
wire   [0:0] Range1_all_ones_fu_755_p2;
wire   [0:0] Range1_all_zeros_fu_761_p2;
wire   [0:0] Range2_all_ones_fu_740_p2;
wire   [0:0] and_ln779_fu_775_p2;
wire   [0:0] deleted_zeros_fu_767_p3;
wire   [0:0] p_Result_4_fu_723_p3;
wire   [0:0] xor_ln785_2_fu_794_p2;
wire   [0:0] or_ln785_1_fu_800_p2;
wire   [0:0] deleted_ones_fu_780_p3;
wire   [0:0] or_ln786_fu_817_p2;
wire   [0:0] xor_ln786_fu_823_p2;
wire   [0:0] overflow_fu_806_p2;
wire   [6:0] tmp_4_fu_840_p4;
wire   [0:0] icmp_ln785_1_fu_849_p2;
wire   [0:0] overflow_2_fu_855_p2;
wire   [13:0] trunc_ln718_2_fu_867_p1;
wire   [0:0] icmp_ln414_3_fu_870_p2;
wire   [16:0] tmp_10_i_fu_881_p4;
wire   [0:0] and_ln414_1_fu_876_p2;
wire   [0:0] tmp_28_fu_898_p3;
wire   [0:0] xor_ln416_3_fu_905_p2;
wire   [1:0] tmp_6_fu_923_p4;
wire   [0:0] carry_7_fu_911_p2;
wire   [0:0] Range1_all_ones_2_fu_932_p2;
wire   [0:0] Range1_all_zeros_2_fu_938_p2;
wire   [0:0] Range2_all_ones_2_fu_916_p3;
wire   [0:0] and_ln779_2_fu_952_p2;
wire   [0:0] deleted_zeros_2_fu_944_p3;
wire   [0:0] xor_ln785_5_fu_971_p2;
wire   [0:0] or_ln785_4_fu_977_p2;
wire   [0:0] deleted_ones_2_fu_957_p3;
wire   [0:0] and_ln781_2_fu_965_p2;
wire   [0:0] and_ln786_4_fu_988_p2;
wire   [0:0] or_ln786_6_fu_994_p2;
wire   [0:0] xor_ln786_2_fu_1000_p2;
wire   [0:0] underflow_2_fu_1006_p2;
wire   [0:0] overflow_3_fu_983_p2;
wire   [0:0] or_ln340_8_fu_1017_p2;
wire   [0:0] or_ln340_6_fu_1011_p2;
wire   [17:0] p_Val2_15_fu_890_p3;
wire   [0:0] or_ln340_7_fu_1022_p2;
wire   [17:0] select_ln340_4_fu_1028_p3;
wire   [17:0] select_ln388_2_fu_1036_p3;
wire   [14:0] trunc_ln708_2_fu_1052_p3;
wire  signed [15:0] sext_ln718_fu_1059_p1;
wire   [15:0] zext_ln415_fu_1063_p1;
wire  signed [15:0] p_Val2_3_fu_1066_p2;
wire   [0:0] tmp_17_fu_1076_p3;
wire   [0:0] p_Result_1_fu_1090_p3;
wire   [0:0] carry_fu_1084_p2;
wire   [0:0] or_ln786_1_fu_1098_p2;
wire  signed [17:0] sext_ln415_fu_1072_p1;
wire   [0:0] or_ln340_2_fu_1112_p2;
wire   [0:0] or_ln340_1_fu_1116_p2;
wire   [17:0] select_ln340_fu_1121_p3;
wire   [17:0] select_ln388_fu_1127_p3;
wire   [23:0] r_V_15_fu_2828_p2;
wire   [0:0] icmp_ln414_8_fu_1172_p2;
wire   [17:0] p_Val2_12_fu_1165_p3;
wire   [17:0] zext_ln415_3_fu_1177_p1;
wire   [17:0] p_Val2_13_fu_1181_p2;
wire   [0:0] tmp_26_fu_1187_p3;
wire   [0:0] p_Result_9_fu_1201_p3;
wire   [0:0] carry_5_fu_1195_p2;
wire   [0:0] or_ln786_5_fu_1209_p2;
(* use_dsp48 = "no" *) wire   [35:0] ret_V_9_fu_1223_p2;
wire   [0:0] icmp_ln414_1_fu_1253_p2;
wire   [0:0] and_ln700_fu_1258_p2;
wire   [17:0] p_Val2_9_fu_1235_p4;
wire   [17:0] zext_ln415_2_fu_1264_p1;
wire   [0:0] tmp_23_fu_1274_p3;
wire   [0:0] p_Result_6_fu_1245_p3;
wire   [0:0] xor_ln416_1_fu_1282_p2;
wire   [1:0] tmp_fu_1302_p4;
wire   [2:0] tmp_3_fu_1318_p4;
wire   [0:0] tmp_25_fu_1340_p3;
wire   [0:0] Range2_all_ones_1_fu_1312_p2;
wire   [0:0] xor_ln779_2_fu_1348_p2;
wire   [0:0] and_ln779_1_fu_1354_p2;
wire   [0:0] deleted_ones_1_fu_1360_p3;
wire   [1:0] p_Result_110_i_i_fu_1390_p4;
wire   [0:0] deleted_zeros_1_fu_1414_p3;
wire   [0:0] xor_ln785_3_fu_1423_p2;
wire   [0:0] or_ln785_2_fu_1429_p2;
wire   [0:0] xor_ln785_4_fu_1434_p2;
wire   [0:0] and_ln781_1_fu_1419_p2;
wire   [0:0] or_ln786_4_fu_1445_p2;
wire   [0:0] xor_ln786_1_fu_1450_p2;
wire   [0:0] underflow_1_fu_1456_p2;
wire   [0:0] overflow_1_fu_1439_p2;
wire   [0:0] or_ln340_5_fu_1467_p2;
wire   [0:0] or_ln340_3_fu_1461_p2;
wire   [0:0] or_ln340_4_fu_1472_p2;
wire   [17:0] select_ln340_1_fu_1478_p3;
wire   [17:0] select_ln388_1_fu_1485_p3;
wire   [0:0] icmp_ln414_4_fu_1516_p2;
wire   [0:0] and_ln700_1_fu_1521_p2;
wire   [17:0] p_Val2_17_fu_1500_p4;
wire   [17:0] zext_ln415_4_fu_1526_p1;
wire   [0:0] tmp_33_fu_1536_p3;
wire   [0:0] p_Result_14_fu_1509_p3;
wire   [0:0] xor_ln416_4_fu_1544_p2;
wire   [0:0] carry_9_fu_1550_p2;
wire   [0:0] Range1_all_ones_3_fu_1564_p2;
wire   [0:0] Range1_all_zeros_3_fu_1569_p2;
wire   [0:0] tmp_35_fu_1582_p3;
wire   [0:0] xor_ln779_3_fu_1589_p2;
wire   [0:0] and_ln779_3_fu_1595_p2;
wire   [0:0] deleted_zeros_3_fu_1574_p3;
wire   [0:0] p_Result_15_fu_1556_p3;
wire   [0:0] xor_ln785_6_fu_1614_p2;
wire   [0:0] or_ln785_5_fu_1620_p2;
wire   [0:0] deleted_ones_3_fu_1600_p3;
wire   [0:0] or_ln786_7_fu_1643_p2;
wire   [0:0] xor_ln786_3_fu_1649_p2;
wire   [0:0] overflow_4_fu_1631_p2;
wire   [0:0] or_ln340_11_fu_1666_p2;
wire   [0:0] or_ln340_10_fu_1670_p2;
wire   [17:0] select_ln340_5_fu_1675_p3;
wire   [17:0] select_ln388_3_fu_1681_p3;
wire  signed [17:0] p_Val2_19_fu_1687_p3;
wire  signed [18:0] lhs_V_fu_1695_p1;
wire   [18:0] ret_V_10_fu_1699_p2;
wire  signed [17:0] p_Val2_21_fu_1712_p1;
wire   [17:0] p_Val2_21_fu_1712_p2;
wire   [0:0] p_Result_17_fu_1717_p3;
wire   [0:0] p_Result_16_fu_1704_p3;
wire   [0:0] xor_ln786_4_fu_1725_p2;
wire   [0:0] xor_ln340_1_fu_1743_p2;
wire   [0:0] xor_ln340_fu_1737_p2;
wire   [0:0] underflow_4_fu_1731_p2;
wire   [0:0] or_ln340_12_fu_1749_p2;
wire   [17:0] select_ln340_6_fu_1755_p3;
wire   [17:0] select_ln388_4_fu_1763_p3;
wire  signed [18:0] rhs_V_1_fu_1802_p1;
wire  signed [18:0] lhs_V_3_fu_1798_p1;
wire   [18:0] ret_V_fu_1806_p2;
wire   [1:0] tmp_38_fu_1812_p4;
wire  signed [18:0] sext_ln703_6_fu_1828_p1;
wire  signed [18:0] ret_V_14_fu_1838_p2;
wire  signed [19:0] lhs_V_4_fu_1848_p1;
wire   [19:0] ret_V_15_fu_1852_p2;
wire   [17:0] trunc_ln1192_1_fu_1844_p1;
wire    ap_block_pp0_stage1;
wire  signed [19:0] lhs_V_2_fu_1888_p1;
wire  signed [19:0] sext_ln703_8_fu_1891_p1;
wire   [19:0] ret_V_12_fu_1895_p2;
wire   [19:0] ret_V_13_fu_1905_p2;
wire   [17:0] trunc_ln1192_fu_1901_p1;
wire   [17:0] p_Val2_29_fu_1918_p2;
wire   [1:0] tmp_7_fu_1931_p4;
wire   [0:0] p_Result_19_fu_1923_p3;
wire   [0:0] icmp_ln785_2_fu_1941_p2;
wire   [0:0] p_Result_18_fu_1910_p3;
wire   [0:0] or_ln785_6_fu_1947_p2;
wire   [0:0] xor_ln785_8_fu_1953_p2;
wire   [0:0] icmp_ln786_fu_1971_p2;
wire   [0:0] xor_ln786_5_fu_1965_p2;
wire   [0:0] or_ln786_2_fu_1977_p2;
wire   [0:0] underflow_5_fu_1983_p2;
wire   [0:0] overflow_5_fu_1959_p2;
wire   [0:0] xor_ln340_2_fu_1995_p2;
wire   [0:0] or_ln340_13_fu_1989_p2;
wire   [0:0] or_ln340_14_fu_2001_p2;
wire   [17:0] select_ln340_7_fu_2007_p3;
wire   [17:0] select_ln388_5_fu_2015_p3;
wire   [0:0] icmp_ln785_3_fu_2031_p2;
wire   [0:0] or_ln785_7_fu_2036_p2;
wire   [0:0] xor_ln785_9_fu_2041_p2;
wire   [0:0] icmp_ln786_1_fu_2057_p2;
wire   [0:0] xor_ln786_6_fu_2052_p2;
wire   [0:0] or_ln786_3_fu_2062_p2;
wire   [0:0] underflow_6_fu_2068_p2;
wire   [0:0] overflow_6_fu_2046_p2;
wire   [0:0] xor_ln340_3_fu_2079_p2;
wire   [0:0] or_ln340_15_fu_2073_p2;
wire   [0:0] or_ln340_16_fu_2085_p2;
wire   [17:0] select_ln340_8_fu_2091_p3;
wire   [17:0] select_ln388_6_fu_2098_p3;
wire    ap_block_pp0_stage2;
wire   [1:0] p_Result_123_i_i_fu_2126_p4;
wire   [1:0] p_Result_128_i_i_fu_2163_p4;
wire  signed [18:0] sext_ln703_11_fu_2190_p1;
wire  signed [18:0] sext_ln703_10_fu_2187_p1;
wire   [18:0] ret_V_8_fu_2193_p2;
wire    ap_block_pp0_stage3;
wire   [0:0] icmp_ln414_5_fu_2247_p2;
wire   [0:0] and_ln700_2_fu_2252_p2;
wire   [17:0] p_Val2_35_fu_2231_p4;
wire   [17:0] zext_ln415_5_fu_2257_p1;
wire   [0:0] tmp_45_fu_2267_p3;
wire   [0:0] p_Result_23_fu_2240_p3;
wire   [0:0] xor_ln416_5_fu_2275_p2;
wire   [0:0] carry_11_fu_2281_p2;
wire   [0:0] Range1_all_ones_5_fu_2295_p2;
wire   [0:0] Range1_all_zeros_4_fu_2300_p2;
wire   [0:0] tmp_47_fu_2313_p3;
wire   [0:0] xor_ln779_4_fu_2320_p2;
wire   [0:0] and_ln779_4_fu_2326_p2;
wire   [0:0] deleted_zeros_4_fu_2305_p3;
wire   [0:0] p_Result_24_fu_2287_p3;
wire   [0:0] xor_ln785_10_fu_2345_p2;
wire   [0:0] or_ln785_8_fu_2351_p2;
wire   [0:0] deleted_ones_5_fu_2331_p3;
wire   [0:0] or_ln786_8_fu_2374_p2;
wire   [0:0] xor_ln786_7_fu_2380_p2;
wire   [0:0] overflow_7_fu_2362_p2;
wire   [0:0] icmp_ln414_6_fu_2413_p2;
wire   [0:0] and_ln700_3_fu_2418_p2;
wire   [17:0] p_Val2_38_fu_2397_p4;
wire   [17:0] zext_ln415_6_fu_2423_p1;
wire   [0:0] tmp_50_fu_2433_p3;
wire   [0:0] p_Result_26_fu_2406_p3;
wire   [0:0] xor_ln416_6_fu_2441_p2;
wire   [0:0] carry_13_fu_2447_p2;
wire   [0:0] Range1_all_ones_6_fu_2461_p2;
wire   [0:0] Range1_all_zeros_5_fu_2466_p2;
wire   [0:0] tmp_52_fu_2479_p3;
wire   [0:0] xor_ln779_5_fu_2486_p2;
wire   [0:0] and_ln779_5_fu_2492_p2;
wire   [0:0] deleted_zeros_5_fu_2471_p3;
wire   [0:0] p_Result_27_fu_2453_p3;
wire   [0:0] xor_ln785_12_fu_2511_p2;
wire   [0:0] or_ln785_9_fu_2517_p2;
wire   [0:0] deleted_ones_6_fu_2497_p3;
wire   [0:0] or_ln786_9_fu_2540_p2;
wire   [0:0] xor_ln786_8_fu_2546_p2;
wire   [0:0] overflow_8_fu_2528_p2;
wire   [0:0] icmp_ln414_7_fu_2579_p2;
wire   [0:0] and_ln700_4_fu_2584_p2;
wire   [17:0] p_Val2_43_fu_2563_p4;
wire   [17:0] zext_ln415_7_fu_2589_p1;
wire   [0:0] tmp_55_fu_2599_p3;
wire   [0:0] p_Result_29_fu_2572_p3;
wire   [0:0] xor_ln416_7_fu_2607_p2;
wire   [0:0] tmp_57_fu_2642_p3;
wire   [0:0] Range2_all_ones_6_fu_2627_p2;
wire   [0:0] xor_ln779_6_fu_2649_p2;
wire   [0:0] and_ln779_6_fu_2655_p2;
wire   [0:0] deleted_ones_7_fu_2661_p3;
wire   [0:0] or_ln340_18_fu_2680_p2;
wire   [0:0] or_ln340_19_fu_2684_p2;
wire   [17:0] select_ln340_9_fu_2689_p3;
wire   [17:0] select_ln388_7_fu_2695_p3;
wire   [0:0] or_ln340_21_fu_2709_p2;
wire   [0:0] or_ln340_22_fu_2713_p2;
wire   [17:0] select_ln340_10_fu_2718_p3;
wire   [17:0] select_ln388_8_fu_2724_p3;
wire   [0:0] deleted_zeros_6_fu_2738_p3;
wire   [0:0] xor_ln785_14_fu_2747_p2;
wire   [0:0] or_ln785_10_fu_2753_p2;
wire   [0:0] and_ln781_6_fu_2743_p2;
wire   [0:0] or_ln786_10_fu_2763_p2;
wire   [0:0] xor_ln786_9_fu_2768_p2;
wire   [0:0] underflow_9_fu_2774_p2;
wire   [0:0] overflow_9_fu_2758_p2;
wire   [0:0] or_ln340_24_fu_2785_p2;
wire   [0:0] or_ln340_23_fu_2779_p2;
wire   [0:0] or_ln340_25_fu_2789_p2;
wire   [17:0] select_ln340_11_fu_2795_p3;
wire   [17:0] select_ln388_9_fu_2802_p3;
wire   [16:0] r_V_15_fu_2828_p0;
wire   [6:0] r_V_15_fu_2828_p1;
wire  signed [17:0] r_V_18_fu_2853_p0;
wire  signed [35:0] r_V_fu_2113_p1;
wire  signed [17:0] r_V_18_fu_2853_p1;
wire  signed [17:0] r_V_19_fu_2863_p0;
wire  signed [35:0] r_V_8_fu_2150_p1;
wire  signed [17:0] r_V_19_fu_2863_p1;
wire  signed [18:0] r_V_20_fu_2873_p0;
wire  signed [37:0] r_V_10_fu_2199_p1;
wire  signed [18:0] r_V_20_fu_2873_p1;
reg   [11:0] ap_NS_fsm;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [23:0] r_V_15_fu_2828_p00;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 12'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

video_mandelbrot_generator_mul_mul_17ns_7ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 17 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 24 ))
video_mandelbrot_generator_mul_mul_17ns_7ns_24_1_1_U1(
    .din0(r_V_15_fu_2828_p0),
    .din1(r_V_15_fu_2828_p1),
    .dout(r_V_15_fu_2828_p2)
);

video_mandelbrot_generator_mul_mul_18s_18s_36_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 36 ))
video_mandelbrot_generator_mul_mul_18s_18s_36_1_1_U2(
    .din0(real_btm_V_reg_3049),
    .din1(real_top_V_reg_3044),
    .dout(r_V_14_fu_2836_p2)
);

video_mandelbrot_generator_mul_mul_18s_18s_36_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 36 ))
video_mandelbrot_generator_mul_mul_18s_18s_36_1_1_U3(
    .din0(imag_top_V_reg_3074),
    .din1(imag_btm_V_reg_3039),
    .dout(r_V_17_fu_2843_p2)
);

video_mandelbrot_generator_mul_mul_18s_18s_36_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 36 ))
video_mandelbrot_generator_mul_mul_18s_18s_36_1_1_U4(
    .din0(r_V_18_fu_2853_p0),
    .din1(r_V_18_fu_2853_p1),
    .dout(r_V_18_fu_2853_p2)
);

video_mandelbrot_generator_mul_mul_18s_18s_36_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 36 ))
video_mandelbrot_generator_mul_mul_18s_18s_36_1_1_U5(
    .din0(r_V_19_fu_2863_p0),
    .din1(r_V_19_fu_2863_p1),
    .dout(r_V_19_fu_2863_p2)
);

video_mandelbrot_generator_mul_mul_19s_19s_38_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 38 ))
video_mandelbrot_generator_mul_mul_19s_19s_38_1_1_U6(
    .din0(r_V_20_fu_2873_p0),
    .din1(r_V_20_fu_2873_p1),
    .dout(r_V_20_fu_2873_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln30_fu_512_p2 == 1'd1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state8) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state7)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((1'b1 == ap_CS_fsm_state7)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        p_Val2_22_reg_294 <= 18'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1497_reg_3210 == 1'd0) & (icmp_ln65_reg_3201 == 1'd0))) begin
        p_Val2_22_reg_294 <= rsquare_V_fu_2701_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        p_Val2_23_reg_305 <= 18'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1497_reg_3210 == 1'd0) & (icmp_ln65_reg_3201 == 1'd0))) begin
        p_Val2_23_reg_305 <= isquare_V_fu_2730_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        p_Val2_24_reg_317 <= 18'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1497_reg_3210 == 1'd0) & (icmp_ln65_reg_3201 == 1'd0))) begin
        p_Val2_24_reg_317 <= zsquare_V_fu_2809_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((m_axis_video_TREADY == 1'b1) & (1'b1 == ap_CS_fsm_state13))) begin
        p_Val2_s_reg_283 <= col_reg_2988;
    end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_Val2_s_reg_283 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        pixel_R_reg_328 <= 8'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1497_reg_3210 == 1'd0) & (icmp_ln65_reg_3201 == 1'd0))) begin
        pixel_R_reg_328 <= iter_reg_3205;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        Range1_all_ones_1_reg_3102 <= Range1_all_ones_1_fu_1328_p2;
        Range1_all_zeros_1_reg_3108 <= Range1_all_zeros_1_fu_1334_p2;
        Range2_all_ones_3_reg_3138 <= Range2_all_ones_3_fu_1399_p2;
        and_ln786_2_reg_3113 <= and_ln786_2_fu_1368_p2;
        carry_4_reg_3091 <= carry_4_fu_1288_p2;
        p_Result_111_i_i_reg_3143 <= {{r_V_17_fu_2843_p2[35:33]}};
        p_Result_13_reg_3126 <= r_V_17_fu_2843_p2[32'd35];
        p_Result_5_reg_3079 <= ret_V_9_fu_1223_p2[32'd35];
        p_Result_7_reg_3097 <= p_Val2_10_fu_1268_p2[32'd17];
        p_Val2_10_reg_3085 <= p_Val2_10_fu_1268_p2;
        r_V_17_reg_3119 <= r_V_17_fu_2843_p2;
        trunc_ln414_2_reg_3133 <= trunc_ln414_2_fu_1387_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln1497_reg_3210 == 1'd0) & (icmp_ln65_reg_3201 == 1'd0))) begin
        Range1_all_ones_7_reg_3424 <= Range1_all_ones_7_fu_2632_p2;
        Range1_all_zeros_6_reg_3430 <= Range1_all_zeros_6_fu_2637_p2;
        and_ln781_4_reg_3351 <= and_ln781_4_fu_2339_p2;
        and_ln781_5_reg_3382 <= and_ln781_5_fu_2505_p2;
        and_ln786_11_reg_3361 <= and_ln786_11_fu_2368_p2;
        and_ln786_13_reg_3392 <= and_ln786_13_fu_2534_p2;
        and_ln786_15_reg_3441 <= and_ln786_15_fu_2674_p2;
        carry_15_reg_3413 <= carry_15_fu_2613_p2;
        or_ln340_17_reg_3371 <= or_ln340_17_fu_2391_p2;
        or_ln340_20_reg_3402 <= or_ln340_20_fu_2557_p2;
        p_Result_30_reg_3419 <= p_Val2_44_fu_2593_p2[32'd17];
        p_Val2_36_reg_3345 <= p_Val2_36_fu_2261_p2;
        p_Val2_39_reg_3376 <= p_Val2_39_fu_2427_p2;
        p_Val2_44_reg_3407 <= p_Val2_44_fu_2593_p2;
        underflow_7_reg_3366 <= underflow_7_fu_2386_p2;
        underflow_8_reg_3397 <= underflow_8_fu_2552_p2;
        xor_ln785_11_reg_3356 <= xor_ln785_11_fu_2357_p2;
        xor_ln785_13_reg_3387 <= xor_ln785_13_fu_2523_p2;
        xor_ln785_15_reg_3435 <= xor_ln785_15_fu_2669_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln1497_reg_3210 == 1'd0) & (icmp_ln65_reg_3201 == 1'd0))) begin
        Range2_all_ones_4_reg_3274 <= Range2_all_ones_4_fu_2135_p2;
        Range2_all_ones_5_reg_3304 <= Range2_all_ones_5_fu_2172_p2;
        p_Result_124_i_i_reg_3279 <= {{r_V_18_fu_2853_p2[35:33]}};
        p_Result_129_i_i_reg_3309 <= {{r_V_19_fu_2863_p2[35:33]}};
        p_Result_133_i_i_reg_3334 <= {{r_V_20_fu_2873_p2[37:34]}};
        p_Result_134_i_i_reg_3339 <= {{r_V_20_fu_2873_p2[37:33]}};
        p_Result_22_reg_3262 <= r_V_18_fu_2853_p2[32'd35];
        p_Result_25_reg_3292 <= r_V_19_fu_2863_p2[32'd35];
        p_Result_28_reg_3322 <= r_V_20_fu_2873_p2[32'd37];
        r_V_18_reg_3255 <= r_V_18_fu_2853_p2;
        r_V_19_reg_3285 <= r_V_19_fu_2863_p2;
        r_V_20_reg_3315 <= r_V_20_fu_2873_p2;
        trunc_ln414_3_reg_3269 <= trunc_ln414_3_fu_2123_p1;
        trunc_ln414_4_reg_3299 <= trunc_ln414_4_fu_2160_p1;
        trunc_ln414_5_reg_3329 <= trunc_ln414_5_fu_2210_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        and_ln781_3_reg_3161 <= and_ln781_3_fu_1608_p2;
        and_ln786_6_reg_3171 <= and_ln786_6_fu_1637_p2;
        or_ln340_9_reg_3181 <= or_ln340_9_fu_1660_p2;
        p_Val2_18_reg_3155 <= p_Val2_18_fu_1530_p2;
        underflow_3_reg_3176 <= underflow_3_fu_1655_p2;
        x0_V_reg_3149 <= x0_V_fu_1492_p3;
        xor_ln785_7_reg_3166 <= xor_ln785_7_fu_1626_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln30_fu_512_p2 == 1'd0))) begin
        and_ln781_reg_3014 <= and_ln781_fu_788_p2;
        and_ln786_reg_3019 <= and_ln786_fu_811_p2;
        icmp_ln414_2_reg_3003 <= icmp_ln414_2_fu_675_p2;
        imag_btm_V_reg_3039 <= imag_btm_V_fu_1044_p3;
        or_ln340_reg_3029 <= or_ln340_fu_834_p2;
        p_Val2_6_reg_3008 <= p_Val2_6_fu_699_p2;
        select_ln340_2_reg_3034 <= select_ln340_2_fu_860_p3;
        tmp_s_reg_2998 <= {{r_V_12_fu_639_p2[22:15]}};
        tmp_user_V_reg_2993 <= tmp_user_V_fu_529_p2;
        underflow_reg_3024 <= underflow_fu_829_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        col_reg_2988 <= col_fu_518_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln65_fu_1786_p2 == 1'd0))) begin
        icmp_ln1497_reg_3210 <= icmp_ln1497_fu_1822_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln65_reg_3201 <= icmp_ln65_fu_1786_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        imag_top_V_reg_3074 <= imag_top_V_fu_1215_p3;
        r_V_14_reg_3064 <= r_V_14_fu_2836_p2;
        trunc_ln414_reg_3069 <= trunc_ln414_fu_1162_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        iter_reg_3205 <= iter_fu_1792_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_Result_10_reg_2958 <= r_V_16_fu_473_p2[32'd34];
        p_Result_11_reg_2964 <= grp_fu_340_p1[32'd32];
        p_Result_2_reg_2916 <= r_V_13_fu_397_p2[32'd35];
        p_Result_3_reg_2927 <= r_V_13_fu_397_p2[32'd32];
        p_Result_8_reg_2899 <= v_assign[32'd2];
        p_Val2_5_reg_2922 <= {{r_V_13_fu_397_p2[32:15]}};
        r_V_13_reg_2909[35 : 15] <= r_V_13_fu_397_p2[35 : 15];
        r_V_16_reg_2948[34 : 16] <= r_V_16_fu_473_p2[34 : 16];
        sext_ln703_reg_2980 <= sext_ln703_fu_508_p1;
        sext_ln728_reg_2943[35 : 15] <= sext_ln728_fu_457_p1[35 : 15];
        tmp_last_V_reg_2894 <= tmp_last_V_fu_347_p2;
        trunc_ln_reg_2904[16 : 15] <= trunc_ln_fu_365_p3[16 : 15];
        xor_ln779_1_reg_2969 <= xor_ln779_1_fu_496_p2;
        xor_ln779_reg_2932 <= xor_ln779_fu_437_p2;
        xor_ln785_1_reg_2974 <= xor_ln785_1_fu_502_p2;
        xor_ln785_reg_2937 <= xor_ln785_fu_443_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1497_fu_1822_p2 == 1'd0) & (icmp_ln65_fu_1786_p2 == 1'd0))) begin
        p_Result_119_i_i_reg_3237 <= {{ret_V_15_fu_1852_p2[19:18]}};
        p_Result_20_reg_3219 <= ret_V_15_fu_1852_p2[32'd19];
        p_Result_21_reg_3231 <= p_Val2_33_fu_1865_p2[32'd17];
        p_Val2_33_reg_3225 <= p_Val2_33_fu_1865_p2;
        ret_V_11_reg_3214 <= ret_V_11_fu_1832_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        real_btm_V_reg_3049 <= real_btm_V_fu_1133_p3;
        real_top_V_reg_3044 <= real_top_V_fu_1104_p3;
        tmp_2_reg_3054 <= {{r_V_15_fu_2828_p2[23:15]}};
        trunc_ln414_1_reg_3059 <= trunc_ln414_1_fu_1153_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        rhs_V_3_reg_3196 <= rhs_V_3_fu_1783_p1;
        sext_ln703_2_reg_3191 <= sext_ln703_2_fu_1779_p1;
        y0_V_reg_3186 <= y0_V_fu_1771_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln1497_reg_3210 == 1'd0) & (icmp_ln65_reg_3201 == 1'd0))) begin
        x_V_reg_3249 <= x_V_fu_2105_p3;
        y_V_reg_3243 <= y_V_fu_2023_p3;
    end
end

always @ (*) begin
    if ((ap_predicate_tran8to13_state8 == 1'b1)) begin
        ap_condition_pp0_exit_iter0_state8 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state8 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln30_fu_512_p2 == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1497_reg_3210 == 1'd0) & (icmp_ln65_reg_3201 == 1'd0))) begin
        ap_phi_mux_p_Val2_22_phi_fu_298_p4 = rsquare_V_fu_2701_p3;
    end else begin
        ap_phi_mux_p_Val2_22_phi_fu_298_p4 = p_Val2_22_reg_294;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1497_reg_3210 == 1'd0) & (icmp_ln65_reg_3201 == 1'd0))) begin
        ap_phi_mux_p_Val2_23_phi_fu_309_p4 = isquare_V_fu_2730_p3;
    end else begin
        ap_phi_mux_p_Val2_23_phi_fu_309_p4 = p_Val2_23_reg_305;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1497_reg_3210 == 1'd0) & (icmp_ln65_reg_3201 == 1'd0))) begin
        ap_phi_mux_p_Val2_24_phi_fu_321_p4 = zsquare_V_fu_2809_p3;
    end else begin
        ap_phi_mux_p_Val2_24_phi_fu_321_p4 = p_Val2_24_reg_317;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1497_reg_3210 == 1'd0) & (icmp_ln65_reg_3201 == 1'd0))) begin
        ap_phi_mux_pixel_R_phi_fu_332_p4 = iter_reg_3205;
    end else begin
        ap_phi_mux_pixel_R_phi_fu_332_p4 = pixel_R_reg_328;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln30_fu_512_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_340_p1 = r_V_16_reg_2948;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_fu_340_p1 = r_V_16_fu_473_p2;
    end else begin
        grp_fu_340_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        m_axis_video_TDATA_blk_n = m_axis_video_TREADY;
    end else begin
        m_axis_video_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((m_axis_video_TREADY == 1'b1) & (1'b1 == ap_CS_fsm_state13))) begin
        m_axis_video_TVALID = 1'b1;
    end else begin
        m_axis_video_TVALID = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln30_fu_512_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_predicate_tran8to13_state8 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_predicate_tran8to13_state8 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_state13 : begin
            if (((m_axis_video_TREADY == 1'b1) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Range1_all_ones_1_fu_1328_p2 = ((tmp_3_fu_1318_p4 == 3'd7) ? 1'b1 : 1'b0);

assign Range1_all_ones_2_fu_932_p2 = ((tmp_6_fu_923_p4 == 2'd3) ? 1'b1 : 1'b0);

assign Range1_all_ones_3_fu_1564_p2 = ((p_Result_111_i_i_reg_3143 == 3'd7) ? 1'b1 : 1'b0);

assign Range1_all_ones_5_fu_2295_p2 = ((p_Result_124_i_i_reg_3279 == 3'd7) ? 1'b1 : 1'b0);

assign Range1_all_ones_6_fu_2461_p2 = ((p_Result_129_i_i_reg_3309 == 3'd7) ? 1'b1 : 1'b0);

assign Range1_all_ones_7_fu_2632_p2 = ((p_Result_134_i_i_reg_3339 == 5'd31) ? 1'b1 : 1'b0);

assign Range1_all_ones_fu_755_p2 = ((p_Result_88_i_i_fu_746_p4 == 3'd7) ? 1'b1 : 1'b0);

assign Range1_all_zeros_1_fu_1334_p2 = ((tmp_3_fu_1318_p4 == 3'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_2_fu_938_p2 = ((tmp_6_fu_923_p4 == 2'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_3_fu_1569_p2 = ((p_Result_111_i_i_reg_3143 == 3'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_4_fu_2300_p2 = ((p_Result_124_i_i_reg_3279 == 3'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_5_fu_2466_p2 = ((p_Result_129_i_i_reg_3309 == 3'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_6_fu_2637_p2 = ((p_Result_134_i_i_reg_3339 == 5'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_fu_761_p2 = ((p_Result_88_i_i_fu_746_p4 == 3'd0) ? 1'b1 : 1'b0);

assign Range2_all_ones_1_fu_1312_p2 = ((tmp_fu_1302_p4 == 2'd3) ? 1'b1 : 1'b0);

assign Range2_all_ones_2_fu_916_p3 = r_V_16_reg_2948[32'd34];

assign Range2_all_ones_3_fu_1399_p2 = ((p_Result_110_i_i_fu_1390_p4 == 2'd3) ? 1'b1 : 1'b0);

assign Range2_all_ones_4_fu_2135_p2 = ((p_Result_123_i_i_fu_2126_p4 == 2'd3) ? 1'b1 : 1'b0);

assign Range2_all_ones_5_fu_2172_p2 = ((p_Result_128_i_i_fu_2163_p4 == 2'd3) ? 1'b1 : 1'b0);

assign Range2_all_ones_6_fu_2627_p2 = ((p_Result_133_i_i_reg_3334 == 4'd15) ? 1'b1 : 1'b0);

assign Range2_all_ones_fu_740_p2 = ((p_Result_87_i_i_fu_731_p4 == 2'd3) ? 1'b1 : 1'b0);

assign add_ln1193_fu_629_p2 = (trunc_ln1118_2_fu_597_p3 + trunc_ln1118_3_fu_621_p3);

assign and_ln414_1_fu_876_p2 = (p_Result_10_reg_2958 & icmp_ln414_3_fu_870_p2);

assign and_ln414_fu_690_p2 = (p_Result_2_reg_2916 & icmp_ln414_fu_684_p2);

assign and_ln700_1_fu_1521_p2 = (p_Result_13_reg_3126 & icmp_ln414_4_fu_1516_p2);

assign and_ln700_2_fu_2252_p2 = (p_Result_22_reg_3262 & icmp_ln414_5_fu_2247_p2);

assign and_ln700_3_fu_2418_p2 = (p_Result_25_reg_3292 & icmp_ln414_6_fu_2413_p2);

assign and_ln700_4_fu_2584_p2 = (p_Result_28_reg_3322 & icmp_ln414_7_fu_2579_p2);

assign and_ln700_fu_1258_p2 = (p_Result_5_fu_1227_p3 & icmp_ln414_1_fu_1253_p2);

assign and_ln779_1_fu_1354_p2 = (xor_ln779_2_fu_1348_p2 & Range2_all_ones_1_fu_1312_p2);

assign and_ln779_2_fu_952_p2 = (xor_ln779_1_reg_2969 & Range2_all_ones_2_fu_916_p3);

assign and_ln779_3_fu_1595_p2 = (xor_ln779_3_fu_1589_p2 & Range2_all_ones_3_reg_3138);

assign and_ln779_4_fu_2326_p2 = (xor_ln779_4_fu_2320_p2 & Range2_all_ones_4_reg_3274);

assign and_ln779_5_fu_2492_p2 = (xor_ln779_5_fu_2486_p2 & Range2_all_ones_5_reg_3304);

assign and_ln779_6_fu_2655_p2 = (xor_ln779_6_fu_2649_p2 & Range2_all_ones_6_fu_2627_p2);

assign and_ln779_fu_775_p2 = (xor_ln779_reg_2932 & Range2_all_ones_fu_740_p2);

assign and_ln781_1_fu_1419_p2 = (carry_4_reg_3091 & Range1_all_ones_1_reg_3102);

assign and_ln781_2_fu_965_p2 = (carry_7_fu_911_p2 & Range1_all_ones_2_fu_932_p2);

assign and_ln781_3_fu_1608_p2 = (carry_9_fu_1550_p2 & Range1_all_ones_3_fu_1564_p2);

assign and_ln781_4_fu_2339_p2 = (carry_11_fu_2281_p2 & Range1_all_ones_5_fu_2295_p2);

assign and_ln781_5_fu_2505_p2 = (carry_13_fu_2447_p2 & Range1_all_ones_6_fu_2461_p2);

assign and_ln781_6_fu_2743_p2 = (carry_15_reg_3413 & Range1_all_ones_7_reg_3424);

assign and_ln781_fu_788_p2 = (carry_2_fu_718_p2 & Range1_all_ones_fu_755_p2);

assign and_ln786_11_fu_2368_p2 = (p_Result_24_fu_2287_p3 & deleted_ones_5_fu_2331_p3);

assign and_ln786_13_fu_2534_p2 = (p_Result_27_fu_2453_p3 & deleted_ones_6_fu_2497_p3);

assign and_ln786_15_fu_2674_p2 = (p_Result_30_fu_2619_p3 & deleted_ones_7_fu_2661_p3);

assign and_ln786_2_fu_1368_p2 = (p_Result_7_fu_1294_p3 & deleted_ones_1_fu_1360_p3);

assign and_ln786_4_fu_988_p2 = (grp_fu_340_p3 & deleted_ones_2_fu_957_p3);

assign and_ln786_6_fu_1637_p2 = (p_Result_15_fu_1556_p3 & deleted_ones_3_fu_1600_p3);

assign and_ln786_fu_811_p2 = (p_Result_4_fu_723_p3 & deleted_ones_fu_780_p3);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state10_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_predicate_tran8to13_state8 = ((icmp_ln1497_fu_1822_p2 == 1'd1) | (icmp_ln65_fu_1786_p2 == 1'd1));
end

assign carry_11_fu_2281_p2 = (xor_ln416_5_fu_2275_p2 & p_Result_23_fu_2240_p3);

assign carry_13_fu_2447_p2 = (xor_ln416_6_fu_2441_p2 & p_Result_26_fu_2406_p3);

assign carry_15_fu_2613_p2 = (xor_ln416_7_fu_2607_p2 & p_Result_29_fu_2572_p3);

assign carry_2_fu_718_p2 = (xor_ln416_fu_712_p2 & p_Result_3_reg_2927);

assign carry_4_fu_1288_p2 = (xor_ln416_1_fu_1282_p2 & p_Result_6_fu_1245_p3);

assign carry_5_fu_1195_p2 = (tmp_26_fu_1187_p3 ^ 1'd1);

assign carry_7_fu_911_p2 = (xor_ln416_3_fu_905_p2 & p_Result_11_reg_2964);

assign carry_9_fu_1550_p2 = (xor_ln416_4_fu_1544_p2 & p_Result_14_fu_1509_p3);

assign carry_fu_1084_p2 = (tmp_17_fu_1076_p3 ^ 1'd1);

assign col_fu_518_p2 = (p_Val2_s_reg_283 + 10'd1);

assign deleted_ones_1_fu_1360_p3 = ((carry_4_fu_1288_p2[0:0] === 1'b1) ? and_ln779_1_fu_1354_p2 : Range1_all_ones_1_fu_1328_p2);

assign deleted_ones_2_fu_957_p3 = ((carry_7_fu_911_p2[0:0] === 1'b1) ? and_ln779_2_fu_952_p2 : Range1_all_ones_2_fu_932_p2);

assign deleted_ones_3_fu_1600_p3 = ((carry_9_fu_1550_p2[0:0] === 1'b1) ? and_ln779_3_fu_1595_p2 : Range1_all_ones_3_fu_1564_p2);

assign deleted_ones_5_fu_2331_p3 = ((carry_11_fu_2281_p2[0:0] === 1'b1) ? and_ln779_4_fu_2326_p2 : Range1_all_ones_5_fu_2295_p2);

assign deleted_ones_6_fu_2497_p3 = ((carry_13_fu_2447_p2[0:0] === 1'b1) ? and_ln779_5_fu_2492_p2 : Range1_all_ones_6_fu_2461_p2);

assign deleted_ones_7_fu_2661_p3 = ((carry_15_fu_2613_p2[0:0] === 1'b1) ? and_ln779_6_fu_2655_p2 : Range1_all_ones_7_fu_2632_p2);

assign deleted_ones_fu_780_p3 = ((carry_2_fu_718_p2[0:0] === 1'b1) ? and_ln779_fu_775_p2 : Range1_all_ones_fu_755_p2);

assign deleted_zeros_1_fu_1414_p3 = ((carry_4_reg_3091[0:0] === 1'b1) ? Range1_all_ones_1_reg_3102 : Range1_all_zeros_1_reg_3108);

assign deleted_zeros_2_fu_944_p3 = ((carry_7_fu_911_p2[0:0] === 1'b1) ? Range1_all_ones_2_fu_932_p2 : Range1_all_zeros_2_fu_938_p2);

assign deleted_zeros_3_fu_1574_p3 = ((carry_9_fu_1550_p2[0:0] === 1'b1) ? Range1_all_ones_3_fu_1564_p2 : Range1_all_zeros_3_fu_1569_p2);

assign deleted_zeros_4_fu_2305_p3 = ((carry_11_fu_2281_p2[0:0] === 1'b1) ? Range1_all_ones_5_fu_2295_p2 : Range1_all_zeros_4_fu_2300_p2);

assign deleted_zeros_5_fu_2471_p3 = ((carry_13_fu_2447_p2[0:0] === 1'b1) ? Range1_all_ones_6_fu_2461_p2 : Range1_all_zeros_5_fu_2466_p2);

assign deleted_zeros_6_fu_2738_p3 = ((carry_15_reg_3413[0:0] === 1'b1) ? Range1_all_ones_7_reg_3424 : Range1_all_zeros_6_reg_3430);

assign deleted_zeros_fu_767_p3 = ((carry_2_fu_718_p2[0:0] === 1'b1) ? Range1_all_ones_fu_755_p2 : Range1_all_zeros_fu_761_p2);

assign grp_fu_340_p3 = grp_fu_340_p1[32'd32];

assign icmp_ln1497_fu_1822_p2 = ((tmp_38_fu_1812_p4 == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln30_fu_512_p2 = ((p_Val2_s_reg_283 == 10'd800) ? 1'b1 : 1'b0);

assign icmp_ln414_1_fu_1253_p2 = ((trunc_ln414_reg_3069 != 15'd0) ? 1'b1 : 1'b0);

assign icmp_ln414_2_fu_675_p2 = ((tmp_3_i_fu_667_p3 != 15'd0) ? 1'b1 : 1'b0);

assign icmp_ln414_3_fu_870_p2 = ((trunc_ln718_2_fu_867_p1 != 14'd0) ? 1'b1 : 1'b0);

assign icmp_ln414_4_fu_1516_p2 = ((trunc_ln414_2_reg_3133 != 15'd0) ? 1'b1 : 1'b0);

assign icmp_ln414_5_fu_2247_p2 = ((trunc_ln414_3_reg_3269 != 15'd0) ? 1'b1 : 1'b0);

assign icmp_ln414_6_fu_2413_p2 = ((trunc_ln414_4_reg_3299 != 15'd0) ? 1'b1 : 1'b0);

assign icmp_ln414_7_fu_2579_p2 = ((trunc_ln414_5_reg_3329 != 15'd0) ? 1'b1 : 1'b0);

assign icmp_ln414_8_fu_1172_p2 = ((trunc_ln414_1_reg_3059 != 15'd0) ? 1'b1 : 1'b0);

assign icmp_ln414_fu_684_p2 = ((trunc_ln718_1_fu_681_p1 != 14'd0) ? 1'b1 : 1'b0);

assign icmp_ln65_fu_1786_p2 = ((ap_phi_mux_pixel_R_phi_fu_332_p4 == 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln785_1_fu_849_p2 = ((tmp_4_fu_840_p4 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln785_2_fu_1941_p2 = ((tmp_7_fu_1931_p4 != 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln785_3_fu_2031_p2 = ((p_Result_119_i_i_reg_3237 != 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln785_fu_565_p2 = ((tmp_1_fu_555_p4 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln786_1_fu_2057_p2 = ((p_Result_119_i_i_reg_3237 != 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln786_fu_1971_p2 = ((tmp_7_fu_1931_p4 != 2'd3) ? 1'b1 : 1'b0);

assign imag_btm_V_fu_1044_p3 = ((or_ln340_7_fu_1022_p2[0:0] === 1'b1) ? select_ln340_4_fu_1028_p3 : select_ln388_2_fu_1036_p3);

assign imag_top_V_fu_1215_p3 = ((or_ln786_5_fu_1209_p2[0:0] === 1'b1) ? p_Val2_13_fu_1181_p2 : 18'd131072);

assign isquare_V_fu_2730_p3 = ((or_ln340_22_fu_2713_p2[0:0] === 1'b1) ? select_ln340_10_fu_2718_p3 : select_ln388_8_fu_2724_p3);

assign iter_fu_1792_p2 = (ap_phi_mux_pixel_R_phi_fu_332_p4 + 8'd1);

assign lhs_V_2_fu_1888_p1 = $signed(ret_V_11_reg_3214);

assign lhs_V_3_fu_1798_p1 = $signed(ap_phi_mux_p_Val2_22_phi_fu_298_p4);

assign lhs_V_4_fu_1848_p1 = ret_V_14_fu_1838_p2;

assign lhs_V_fu_1695_p1 = p_Val2_19_fu_1687_p3;

assign m_axis_video_TDATA = {{{pixel_R_reg_328}, {pixel_R_reg_328}}, {8'd255}};

assign m_axis_video_TDEST = 1'd0;

assign m_axis_video_TID = 1'd0;

assign m_axis_video_TKEEP = 3'd0;

assign m_axis_video_TLAST = tmp_last_V_reg_2894;

assign m_axis_video_TSTRB = 3'd0;

assign m_axis_video_TUSER = tmp_user_V_reg_2993;

assign or_ln33_fu_524_p2 = (v_assign | p_Val2_s_reg_283);

assign or_ln340_10_fu_1670_p2 = (or_ln340_11_fu_1666_p2 | and_ln781_3_reg_3161);

assign or_ln340_11_fu_1666_p2 = (xor_ln785_7_reg_3166 | and_ln786_6_reg_3171);

assign or_ln340_12_fu_1749_p2 = (xor_ln340_1_fu_1743_p2 | p_Result_17_fu_1717_p3);

assign or_ln340_13_fu_1989_p2 = (underflow_5_fu_1983_p2 | overflow_5_fu_1959_p2);

assign or_ln340_14_fu_2001_p2 = (xor_ln340_2_fu_1995_p2 | overflow_5_fu_1959_p2);

assign or_ln340_15_fu_2073_p2 = (underflow_6_fu_2068_p2 | overflow_6_fu_2046_p2);

assign or_ln340_16_fu_2085_p2 = (xor_ln340_3_fu_2079_p2 | overflow_6_fu_2046_p2);

assign or_ln340_17_fu_2391_p2 = (underflow_7_fu_2386_p2 | overflow_7_fu_2362_p2);

assign or_ln340_18_fu_2680_p2 = (xor_ln785_11_reg_3356 | and_ln786_11_reg_3361);

assign or_ln340_19_fu_2684_p2 = (or_ln340_18_fu_2680_p2 | and_ln781_4_reg_3351);

assign or_ln340_1_fu_1116_p2 = (or_ln340_2_fu_1112_p2 | and_ln781_reg_3014);

assign or_ln340_20_fu_2557_p2 = (underflow_8_fu_2552_p2 | overflow_8_fu_2528_p2);

assign or_ln340_21_fu_2709_p2 = (xor_ln785_13_reg_3387 | and_ln786_13_reg_3392);

assign or_ln340_22_fu_2713_p2 = (or_ln340_21_fu_2709_p2 | and_ln781_5_reg_3382);

assign or_ln340_23_fu_2779_p2 = (underflow_9_fu_2774_p2 | overflow_9_fu_2758_p2);

assign or_ln340_24_fu_2785_p2 = (xor_ln785_15_reg_3435 | and_ln786_15_reg_3441);

assign or_ln340_25_fu_2789_p2 = (or_ln340_24_fu_2785_p2 | and_ln781_6_fu_2743_p2);

assign or_ln340_2_fu_1112_p2 = (xor_ln785_reg_2937 | and_ln786_reg_3019);

assign or_ln340_3_fu_1461_p2 = (underflow_1_fu_1456_p2 | overflow_1_fu_1439_p2);

assign or_ln340_4_fu_1472_p2 = (or_ln340_5_fu_1467_p2 | and_ln781_1_fu_1419_p2);

assign or_ln340_5_fu_1467_p2 = (xor_ln785_4_fu_1434_p2 | and_ln786_2_reg_3113);

assign or_ln340_6_fu_1011_p2 = (underflow_2_fu_1006_p2 | overflow_3_fu_983_p2);

assign or_ln340_7_fu_1022_p2 = (or_ln340_8_fu_1017_p2 | and_ln781_2_fu_965_p2);

assign or_ln340_8_fu_1017_p2 = (xor_ln785_1_reg_2974 | and_ln786_4_fu_988_p2);

assign or_ln340_9_fu_1660_p2 = (underflow_3_fu_1655_p2 | overflow_4_fu_1631_p2);

assign or_ln340_fu_834_p2 = (underflow_fu_829_p2 | overflow_fu_806_p2);

assign or_ln785_10_fu_2753_p2 = (xor_ln785_14_fu_2747_p2 | p_Result_30_reg_3419);

assign or_ln785_1_fu_800_p2 = (xor_ln785_2_fu_794_p2 | p_Result_4_fu_723_p3);

assign or_ln785_2_fu_1429_p2 = (xor_ln785_3_fu_1423_p2 | p_Result_7_reg_3097);

assign or_ln785_4_fu_977_p2 = (xor_ln785_5_fu_971_p2 | grp_fu_340_p3);

assign or_ln785_5_fu_1620_p2 = (xor_ln785_6_fu_1614_p2 | p_Result_15_fu_1556_p3);

assign or_ln785_6_fu_1947_p2 = (p_Result_19_fu_1923_p3 | icmp_ln785_2_fu_1941_p2);

assign or_ln785_7_fu_2036_p2 = (p_Result_21_reg_3231 | icmp_ln785_3_fu_2031_p2);

assign or_ln785_8_fu_2351_p2 = (xor_ln785_10_fu_2345_p2 | p_Result_24_fu_2287_p3);

assign or_ln785_9_fu_2517_p2 = (xor_ln785_12_fu_2511_p2 | p_Result_27_fu_2453_p3);

assign or_ln785_fu_571_p2 = (p_Result_s_fu_547_p3 | icmp_ln785_fu_565_p2);

assign or_ln786_10_fu_2763_p2 = (and_ln786_15_reg_3441 | and_ln781_6_fu_2743_p2);

assign or_ln786_1_fu_1098_p2 = (p_Result_1_fu_1090_p3 | carry_fu_1084_p2);

assign or_ln786_2_fu_1977_p2 = (xor_ln786_5_fu_1965_p2 | icmp_ln786_fu_1971_p2);

assign or_ln786_3_fu_2062_p2 = (xor_ln786_6_fu_2052_p2 | icmp_ln786_1_fu_2057_p2);

assign or_ln786_4_fu_1445_p2 = (and_ln786_2_reg_3113 | and_ln781_1_fu_1419_p2);

assign or_ln786_5_fu_1209_p2 = (p_Result_9_fu_1201_p3 | carry_5_fu_1195_p2);

assign or_ln786_6_fu_994_p2 = (and_ln786_4_fu_988_p2 | and_ln781_2_fu_965_p2);

assign or_ln786_7_fu_1643_p2 = (and_ln786_6_fu_1637_p2 | and_ln781_3_fu_1608_p2);

assign or_ln786_8_fu_2374_p2 = (and_ln786_11_fu_2368_p2 | and_ln781_4_fu_2339_p2);

assign or_ln786_9_fu_2540_p2 = (and_ln786_13_fu_2534_p2 | and_ln781_5_fu_2505_p2);

assign or_ln786_fu_817_p2 = (and_ln786_fu_811_p2 | and_ln781_fu_788_p2);

assign overflow_1_fu_1439_p2 = (xor_ln785_4_fu_1434_p2 & or_ln785_2_fu_1429_p2);

assign overflow_2_fu_855_p2 = (p_Result_8_reg_2899 | icmp_ln785_1_fu_849_p2);

assign overflow_3_fu_983_p2 = (xor_ln785_1_reg_2974 & or_ln785_4_fu_977_p2);

assign overflow_4_fu_1631_p2 = (xor_ln785_7_fu_1626_p2 & or_ln785_5_fu_1620_p2);

assign overflow_5_fu_1959_p2 = (xor_ln785_8_fu_1953_p2 & or_ln785_6_fu_1947_p2);

assign overflow_6_fu_2046_p2 = (xor_ln785_9_fu_2041_p2 & or_ln785_7_fu_2036_p2);

assign overflow_7_fu_2362_p2 = (xor_ln785_11_fu_2357_p2 & or_ln785_8_fu_2351_p2);

assign overflow_8_fu_2528_p2 = (xor_ln785_13_fu_2523_p2 & or_ln785_9_fu_2517_p2);

assign overflow_9_fu_2758_p2 = (xor_ln785_15_reg_3435 & or_ln785_10_fu_2753_p2);

assign overflow_fu_806_p2 = (xor_ln785_reg_2937 & or_ln785_1_fu_800_p2);

assign p_Result_10_fu_480_p3 = r_V_16_fu_473_p2[32'd34];

assign p_Result_110_i_i_fu_1390_p4 = {{r_V_17_fu_2843_p2[35:34]}};

assign p_Result_123_i_i_fu_2126_p4 = {{r_V_18_fu_2853_p2[35:34]}};

assign p_Result_128_i_i_fu_2163_p4 = {{r_V_19_fu_2863_p2[35:34]}};

assign p_Result_14_fu_1509_p3 = r_V_17_reg_3119[32'd32];

assign p_Result_15_fu_1556_p3 = p_Val2_18_fu_1530_p2[32'd17];

assign p_Result_16_fu_1704_p3 = ret_V_10_fu_1699_p2[32'd18];

assign p_Result_17_fu_1717_p3 = p_Val2_21_fu_1712_p2[32'd17];

assign p_Result_18_fu_1910_p3 = ret_V_13_fu_1905_p2[32'd19];

assign p_Result_19_fu_1923_p3 = p_Val2_29_fu_1918_p2[32'd17];

assign p_Result_1_fu_1090_p3 = p_Val2_3_fu_1066_p2[32'd15];

assign p_Result_23_fu_2240_p3 = r_V_18_reg_3255[32'd32];

assign p_Result_24_fu_2287_p3 = p_Val2_36_fu_2261_p2[32'd17];

assign p_Result_26_fu_2406_p3 = r_V_19_reg_3285[32'd32];

assign p_Result_27_fu_2453_p3 = p_Val2_39_fu_2427_p2[32'd17];

assign p_Result_29_fu_2572_p3 = r_V_20_reg_3315[32'd32];

assign p_Result_2_fu_403_p3 = r_V_13_fu_397_p2[32'd35];

assign p_Result_30_fu_2619_p3 = p_Val2_44_fu_2593_p2[32'd17];

assign p_Result_4_fu_723_p3 = p_Val2_6_fu_699_p2[32'd17];

assign p_Result_5_fu_1227_p3 = ret_V_9_fu_1223_p2[32'd35];

assign p_Result_6_fu_1245_p3 = ret_V_9_fu_1223_p2[32'd32];

assign p_Result_7_fu_1294_p3 = p_Val2_10_fu_1268_p2[32'd17];

assign p_Result_87_i_i_fu_731_p4 = {{r_V_13_reg_2909[35:34]}};

assign p_Result_88_i_i_fu_746_p4 = {{r_V_13_reg_2909[35:33]}};

assign p_Result_9_fu_1201_p3 = p_Val2_13_fu_1181_p2[32'd17];

assign p_Result_s_fu_547_p3 = p_Val2_s_reg_283[32'd2];

assign p_Val2_10_fu_1268_p2 = (p_Val2_9_fu_1235_p4 + zext_ln415_2_fu_1264_p1);

assign p_Val2_12_fu_1165_p3 = {{9'd480}, {tmp_2_reg_3054}};

assign p_Val2_13_fu_1181_p2 = (p_Val2_12_fu_1165_p3 + zext_ln415_3_fu_1177_p1);

assign p_Val2_15_fu_890_p3 = {{tmp_10_i_fu_881_p4}, {and_ln414_1_fu_876_p2}};

assign p_Val2_17_fu_1500_p4 = {{r_V_17_reg_3119[32:15]}};

assign p_Val2_18_fu_1530_p2 = (p_Val2_17_fu_1500_p4 + zext_ln415_4_fu_1526_p1);

assign p_Val2_19_fu_1687_p3 = ((or_ln340_10_fu_1670_p2[0:0] === 1'b1) ? select_ln340_5_fu_1675_p3 : select_ln388_3_fu_1681_p3);

assign p_Val2_1_fu_577_p3 = ((or_ln785_fu_571_p2[0:0] === 1'b1) ? 17'd131071 : trunc_ln746_1_fu_539_p3);

assign p_Val2_21_fu_1712_p1 = im_V;

assign p_Val2_21_fu_1712_p2 = ($signed(p_Val2_19_fu_1687_p3) + $signed(p_Val2_21_fu_1712_p1));

assign p_Val2_29_fu_1918_p2 = ($signed(trunc_ln1192_fu_1901_p1) + $signed(y0_V_reg_3186));

assign p_Val2_33_fu_1865_p2 = ($signed(x0_V_reg_3149) + $signed(trunc_ln1192_1_fu_1844_p1));

assign p_Val2_35_fu_2231_p4 = {{r_V_18_reg_3255[32:15]}};

assign p_Val2_36_fu_2261_p2 = (p_Val2_35_fu_2231_p4 + zext_ln415_5_fu_2257_p1);

assign p_Val2_38_fu_2397_p4 = {{r_V_19_reg_3285[32:15]}};

assign p_Val2_39_fu_2427_p2 = (p_Val2_38_fu_2397_p4 + zext_ln415_6_fu_2423_p1);

assign p_Val2_3_fu_1066_p2 = ($signed(sext_ln718_fu_1059_p1) + $signed(zext_ln415_fu_1063_p1));

assign p_Val2_43_fu_2563_p4 = {{r_V_20_reg_3315[32:15]}};

assign p_Val2_44_fu_2593_p2 = (p_Val2_43_fu_2563_p4 + zext_ln415_7_fu_2589_p1);

assign p_Val2_6_fu_699_p2 = (p_Val2_5_reg_2922 + zext_ln415_1_fu_695_p1);

assign p_Val2_9_fu_1235_p4 = {{ret_V_9_fu_1223_p2[32:15]}};

assign r_V_10_fu_2199_p1 = $signed(ret_V_8_fu_2193_p2);

assign r_V_12_fu_639_p2 = (zext_ln1118_fu_605_p1 + zext_ln1118_1_fu_635_p1);

assign r_V_13_fu_397_p2 = ($signed(sext_ln1118_fu_381_p1) - $signed(sext_ln1118_1_fu_393_p1));

assign r_V_15_fu_2828_p0 = r_V_15_fu_2828_p00;

assign r_V_15_fu_2828_p00 = select_ln340_2_reg_3034;

assign r_V_15_fu_2828_p1 = 24'd54;

assign r_V_16_fu_473_p2 = ($signed(35'd0) - $signed(sext_ln1118_2_fu_469_p1));

assign r_V_18_fu_2853_p0 = r_V_fu_2113_p1;

assign r_V_18_fu_2853_p1 = r_V_fu_2113_p1;

assign r_V_19_fu_2863_p0 = r_V_8_fu_2150_p1;

assign r_V_19_fu_2863_p1 = r_V_8_fu_2150_p1;

assign r_V_20_fu_2873_p0 = r_V_10_fu_2199_p1;

assign r_V_20_fu_2873_p1 = r_V_10_fu_2199_p1;

assign r_V_8_fu_2150_p1 = y_V_reg_3243;

assign r_V_fu_2113_p1 = x_V_reg_3249;

assign real_btm_V_fu_1133_p3 = ((or_ln340_1_fu_1116_p2[0:0] === 1'b1) ? select_ln340_fu_1121_p3 : select_ln388_fu_1127_p3);

assign real_top_V_fu_1104_p3 = ((or_ln786_1_fu_1098_p2[0:0] === 1'b1) ? sext_ln415_fu_1072_p1 : 18'd131072);

assign ret_V_10_fu_1699_p2 = ($signed(sext_ln703_reg_2980) + $signed(lhs_V_fu_1695_p1));

assign ret_V_11_fu_1832_p2 = ($signed(sext_ln703_6_fu_1828_p1) - $signed(lhs_V_3_fu_1798_p1));

assign ret_V_12_fu_1895_p2 = ($signed(lhs_V_2_fu_1888_p1) - $signed(sext_ln703_8_fu_1891_p1));

assign ret_V_13_fu_1905_p2 = ($signed(ret_V_12_fu_1895_p2) + $signed(sext_ln703_2_reg_3191));

assign ret_V_14_fu_1838_p2 = ($signed(lhs_V_3_fu_1798_p1) - $signed(rhs_V_1_fu_1802_p1));

assign ret_V_15_fu_1852_p2 = ($signed(lhs_V_4_fu_1848_p1) + $signed(rhs_V_3_reg_3196));

assign ret_V_8_fu_2193_p2 = ($signed(sext_ln703_11_fu_2190_p1) + $signed(sext_ln703_10_fu_2187_p1));

assign ret_V_9_fu_1223_p2 = ($signed(r_V_14_reg_3064) + $signed(sext_ln728_reg_2943));

assign ret_V_fu_1806_p2 = ($signed(rhs_V_1_fu_1802_p1) + $signed(lhs_V_3_fu_1798_p1));

assign rhs_V_1_fu_1802_p1 = ap_phi_mux_p_Val2_23_phi_fu_309_p4;

assign rhs_V_3_fu_1783_p1 = x0_V_reg_3149;

assign rhs_V_fu_449_p3 = {{re_V}, {15'd0}};

assign rsquare_V_fu_2701_p3 = ((or_ln340_19_fu_2684_p2[0:0] === 1'b1) ? select_ln340_9_fu_2689_p3 : select_ln388_7_fu_2695_p3);

assign select_ln340_10_fu_2718_p3 = ((or_ln340_20_reg_3402[0:0] === 1'b1) ? 18'd131071 : p_Val2_39_reg_3376);

assign select_ln340_11_fu_2795_p3 = ((or_ln340_23_fu_2779_p2[0:0] === 1'b1) ? 18'd131071 : p_Val2_44_reg_3407);

assign select_ln340_1_fu_1478_p3 = ((or_ln340_3_fu_1461_p2[0:0] === 1'b1) ? 18'd131071 : p_Val2_10_reg_3085);

assign select_ln340_2_fu_860_p3 = ((overflow_2_fu_855_p2[0:0] === 1'b1) ? 17'd131071 : trunc_ln_reg_2904);

assign select_ln340_4_fu_1028_p3 = ((or_ln340_6_fu_1011_p2[0:0] === 1'b1) ? 18'd131071 : p_Val2_15_fu_890_p3);

assign select_ln340_5_fu_1675_p3 = ((or_ln340_9_reg_3181[0:0] === 1'b1) ? 18'd131071 : p_Val2_18_reg_3155);

assign select_ln340_6_fu_1755_p3 = ((xor_ln340_fu_1737_p2[0:0] === 1'b1) ? 18'd131071 : p_Val2_21_fu_1712_p2);

assign select_ln340_7_fu_2007_p3 = ((or_ln340_13_fu_1989_p2[0:0] === 1'b1) ? 18'd131071 : p_Val2_29_fu_1918_p2);

assign select_ln340_8_fu_2091_p3 = ((or_ln340_15_fu_2073_p2[0:0] === 1'b1) ? 18'd131071 : p_Val2_33_reg_3225);

assign select_ln340_9_fu_2689_p3 = ((or_ln340_17_reg_3371[0:0] === 1'b1) ? 18'd131071 : p_Val2_36_reg_3345);

assign select_ln340_fu_1121_p3 = ((or_ln340_reg_3029[0:0] === 1'b1) ? 18'd131071 : p_Val2_6_reg_3008);

assign select_ln388_1_fu_1485_p3 = ((underflow_1_fu_1456_p2[0:0] === 1'b1) ? 18'd131072 : p_Val2_10_reg_3085);

assign select_ln388_2_fu_1036_p3 = ((underflow_2_fu_1006_p2[0:0] === 1'b1) ? 18'd131072 : p_Val2_15_fu_890_p3);

assign select_ln388_3_fu_1681_p3 = ((underflow_3_reg_3176[0:0] === 1'b1) ? 18'd131072 : p_Val2_18_reg_3155);

assign select_ln388_4_fu_1763_p3 = ((underflow_4_fu_1731_p2[0:0] === 1'b1) ? 18'd131072 : p_Val2_21_fu_1712_p2);

assign select_ln388_5_fu_2015_p3 = ((underflow_5_fu_1983_p2[0:0] === 1'b1) ? 18'd131072 : p_Val2_29_fu_1918_p2);

assign select_ln388_6_fu_2098_p3 = ((underflow_6_fu_2068_p2[0:0] === 1'b1) ? 18'd131072 : p_Val2_33_reg_3225);

assign select_ln388_7_fu_2695_p3 = ((underflow_7_reg_3366[0:0] === 1'b1) ? 18'd131072 : p_Val2_36_reg_3345);

assign select_ln388_8_fu_2724_p3 = ((underflow_8_reg_3397[0:0] === 1'b1) ? 18'd131072 : p_Val2_39_reg_3376);

assign select_ln388_9_fu_2802_p3 = ((underflow_9_fu_2774_p2[0:0] === 1'b1) ? 18'd131072 : p_Val2_44_reg_3407);

assign select_ln388_fu_1127_p3 = ((underflow_reg_3024[0:0] === 1'b1) ? 18'd131072 : p_Val2_6_reg_3008);

assign sext_ln1118_1_fu_393_p1 = $signed(shl_ln1118_1_fu_385_p3);

assign sext_ln1118_2_fu_469_p1 = $signed(shl_ln1118_2_fu_461_p3);

assign sext_ln1118_fu_381_p1 = $signed(shl_ln1_fu_373_p3);

assign sext_ln415_fu_1072_p1 = p_Val2_3_fu_1066_p2;

assign sext_ln703_10_fu_2187_p1 = x_V_reg_3249;

assign sext_ln703_11_fu_2190_p1 = y_V_reg_3243;

assign sext_ln703_2_fu_1779_p1 = y0_V_fu_1771_p3;

assign sext_ln703_6_fu_1828_p1 = $signed(ap_phi_mux_p_Val2_24_phi_fu_321_p4);

assign sext_ln703_8_fu_1891_p1 = p_Val2_23_reg_305;

assign sext_ln703_fu_508_p0 = im_V;

assign sext_ln703_fu_508_p1 = sext_ln703_fu_508_p0;

assign sext_ln718_fu_1059_p1 = $signed(trunc_ln708_2_fu_1052_p3);

assign sext_ln728_fu_457_p1 = $signed(rhs_V_fu_449_p3);

assign shl_ln1118_1_fu_385_p3 = {{zoom_factor_V}, {15'd0}};

assign shl_ln1118_2_fu_461_p3 = {{zoom_factor_V}, {16'd0}};

assign shl_ln1118_3_fu_585_p3 = {{p_Val2_1_fu_577_p3}, {5'd0}};

assign shl_ln1118_4_fu_609_p3 = {{p_Val2_1_fu_577_p3}, {3'd0}};

assign shl_ln1_fu_373_p3 = {{zoom_factor_V}, {17'd0}};

assign tmp_10_i_fu_881_p4 = {{r_V_16_reg_2948[32:16]}};

assign tmp_13_fu_488_p3 = r_V_16_fu_473_p2[32'd33];

assign tmp_16_fu_659_p3 = add_ln1193_fu_629_p2[32'd14];

assign tmp_17_fu_1076_p3 = p_Val2_3_fu_1066_p2[32'd15];

assign tmp_19_fu_704_p3 = p_Val2_6_fu_699_p2[32'd17];

assign tmp_1_fu_555_p4 = {{p_Val2_s_reg_283[9:3]}};

assign tmp_23_fu_1274_p3 = p_Val2_10_fu_1268_p2[32'd17];

assign tmp_25_fu_1340_p3 = ret_V_9_fu_1223_p2[32'd33];

assign tmp_26_fu_1187_p3 = p_Val2_13_fu_1181_p2[32'd17];

assign tmp_28_fu_898_p3 = r_V_16_reg_2948[32'd32];

assign tmp_33_fu_1536_p3 = p_Val2_18_fu_1530_p2[32'd17];

assign tmp_35_fu_1582_p3 = r_V_17_reg_3119[32'd33];

assign tmp_38_fu_1812_p4 = {{ret_V_fu_1806_p2[18:17]}};

assign tmp_3_fu_1318_p4 = {{ret_V_9_fu_1223_p2[35:33]}};

assign tmp_3_i_fu_667_p3 = {{tmp_16_fu_659_p3}, {trunc_ln718_fu_655_p1}};

assign tmp_45_fu_2267_p3 = p_Val2_36_fu_2261_p2[32'd17];

assign tmp_47_fu_2313_p3 = r_V_18_reg_3255[32'd33];

assign tmp_4_fu_840_p4 = {{v_assign[9:3]}};

assign tmp_50_fu_2433_p3 = p_Val2_39_fu_2427_p2[32'd17];

assign tmp_52_fu_2479_p3 = r_V_19_reg_3285[32'd33];

assign tmp_55_fu_2599_p3 = p_Val2_44_fu_2593_p2[32'd17];

assign tmp_57_fu_2642_p3 = r_V_20_reg_3315[32'd33];

assign tmp_6_fu_923_p4 = {{r_V_16_reg_2948[34:33]}};

assign tmp_7_fu_1931_p4 = {{ret_V_13_fu_1905_p2[19:18]}};

assign tmp_9_fu_429_p3 = r_V_13_fu_397_p2[32'd33];

assign tmp_fu_1302_p4 = {{ret_V_9_fu_1223_p2[35:34]}};

assign tmp_last_V_fu_347_p2 = ((v_assign == 10'd799) ? 1'b1 : 1'b0);

assign tmp_user_V_fu_529_p2 = ((or_ln33_fu_524_p2 == 10'd0) ? 1'b1 : 1'b0);

assign trunc_ln1118_1_fu_617_p1 = p_Val2_1_fu_577_p3[11:0];

assign trunc_ln1118_2_fu_597_p3 = {{trunc_ln1118_fu_593_p1}, {5'd0}};

assign trunc_ln1118_3_fu_621_p3 = {{trunc_ln1118_1_fu_617_p1}, {3'd0}};

assign trunc_ln1118_fu_593_p1 = p_Val2_1_fu_577_p3[9:0];

assign trunc_ln1192_1_fu_1844_p1 = ret_V_14_fu_1838_p2[17:0];

assign trunc_ln1192_fu_1901_p1 = ret_V_12_fu_1895_p2[17:0];

assign trunc_ln414_1_fu_1153_p1 = r_V_15_fu_2828_p2[14:0];

assign trunc_ln414_2_fu_1387_p1 = r_V_17_fu_2843_p2[14:0];

assign trunc_ln414_3_fu_2123_p1 = r_V_18_fu_2853_p2[14:0];

assign trunc_ln414_4_fu_2160_p1 = r_V_19_fu_2863_p2[14:0];

assign trunc_ln414_5_fu_2210_p1 = r_V_20_fu_2873_p2[14:0];

assign trunc_ln414_fu_1162_p1 = r_V_14_fu_2836_p2[14:0];

assign trunc_ln708_2_fu_1052_p3 = {{7'd64}, {tmp_s_reg_2998}};

assign trunc_ln718_1_fu_681_p1 = r_V_13_reg_2909[13:0];

assign trunc_ln718_2_fu_867_p1 = r_V_16_reg_2948[13:0];

assign trunc_ln718_fu_655_p1 = r_V_12_fu_639_p2[13:0];

assign trunc_ln746_1_fu_539_p3 = {{trunc_ln746_2_fu_535_p1}, {15'd0}};

assign trunc_ln746_2_fu_535_p1 = p_Val2_s_reg_283[1:0];

assign trunc_ln746_fu_361_p1 = v_assign[1:0];

assign trunc_ln_fu_365_p3 = {{trunc_ln746_fu_361_p1}, {15'd0}};

assign underflow_1_fu_1456_p2 = (xor_ln786_1_fu_1450_p2 & p_Result_5_reg_3079);

assign underflow_2_fu_1006_p2 = (xor_ln786_2_fu_1000_p2 & p_Result_10_reg_2958);

assign underflow_3_fu_1655_p2 = (xor_ln786_3_fu_1649_p2 & p_Result_13_reg_3126);

assign underflow_4_fu_1731_p2 = (xor_ln786_4_fu_1725_p2 & p_Result_16_fu_1704_p3);

assign underflow_5_fu_1983_p2 = (p_Result_18_fu_1910_p3 & or_ln786_2_fu_1977_p2);

assign underflow_6_fu_2068_p2 = (p_Result_20_reg_3219 & or_ln786_3_fu_2062_p2);

assign underflow_7_fu_2386_p2 = (xor_ln786_7_fu_2380_p2 & p_Result_22_reg_3262);

assign underflow_8_fu_2552_p2 = (xor_ln786_8_fu_2546_p2 & p_Result_25_reg_3292);

assign underflow_9_fu_2774_p2 = (xor_ln786_9_fu_2768_p2 & p_Result_28_reg_3322);

assign underflow_fu_829_p2 = (xor_ln786_fu_823_p2 & p_Result_2_reg_2916);

assign x0_V_fu_1492_p3 = ((or_ln340_4_fu_1472_p2[0:0] === 1'b1) ? select_ln340_1_fu_1478_p3 : select_ln388_1_fu_1485_p3);

assign x_V_fu_2105_p3 = ((or_ln340_16_fu_2085_p2[0:0] === 1'b1) ? select_ln340_8_fu_2091_p3 : select_ln388_6_fu_2098_p3);

assign xor_ln340_1_fu_1743_p2 = (p_Result_16_fu_1704_p3 ^ 1'd1);

assign xor_ln340_2_fu_1995_p2 = (underflow_5_fu_1983_p2 ^ 1'd1);

assign xor_ln340_3_fu_2079_p2 = (underflow_6_fu_2068_p2 ^ 1'd1);

assign xor_ln340_fu_1737_p2 = (p_Result_17_fu_1717_p3 ^ p_Result_16_fu_1704_p3);

assign xor_ln416_1_fu_1282_p2 = (tmp_23_fu_1274_p3 ^ 1'd1);

assign xor_ln416_3_fu_905_p2 = (tmp_28_fu_898_p3 ^ 1'd1);

assign xor_ln416_4_fu_1544_p2 = (tmp_33_fu_1536_p3 ^ 1'd1);

assign xor_ln416_5_fu_2275_p2 = (tmp_45_fu_2267_p3 ^ 1'd1);

assign xor_ln416_6_fu_2441_p2 = (tmp_50_fu_2433_p3 ^ 1'd1);

assign xor_ln416_7_fu_2607_p2 = (tmp_55_fu_2599_p3 ^ 1'd1);

assign xor_ln416_fu_712_p2 = (tmp_19_fu_704_p3 ^ 1'd1);

assign xor_ln779_1_fu_496_p2 = (tmp_13_fu_488_p3 ^ 1'd1);

assign xor_ln779_2_fu_1348_p2 = (tmp_25_fu_1340_p3 ^ 1'd1);

assign xor_ln779_3_fu_1589_p2 = (tmp_35_fu_1582_p3 ^ 1'd1);

assign xor_ln779_4_fu_2320_p2 = (tmp_47_fu_2313_p3 ^ 1'd1);

assign xor_ln779_5_fu_2486_p2 = (tmp_52_fu_2479_p3 ^ 1'd1);

assign xor_ln779_6_fu_2649_p2 = (tmp_57_fu_2642_p3 ^ 1'd1);

assign xor_ln779_fu_437_p2 = (tmp_9_fu_429_p3 ^ 1'd1);

assign xor_ln785_10_fu_2345_p2 = (deleted_zeros_4_fu_2305_p3 ^ 1'd1);

assign xor_ln785_11_fu_2357_p2 = (p_Result_22_reg_3262 ^ 1'd1);

assign xor_ln785_12_fu_2511_p2 = (deleted_zeros_5_fu_2471_p3 ^ 1'd1);

assign xor_ln785_13_fu_2523_p2 = (p_Result_25_reg_3292 ^ 1'd1);

assign xor_ln785_14_fu_2747_p2 = (deleted_zeros_6_fu_2738_p3 ^ 1'd1);

assign xor_ln785_15_fu_2669_p2 = (p_Result_28_reg_3322 ^ 1'd1);

assign xor_ln785_1_fu_502_p2 = (p_Result_10_fu_480_p3 ^ 1'd1);

assign xor_ln785_2_fu_794_p2 = (deleted_zeros_fu_767_p3 ^ 1'd1);

assign xor_ln785_3_fu_1423_p2 = (deleted_zeros_1_fu_1414_p3 ^ 1'd1);

assign xor_ln785_4_fu_1434_p2 = (p_Result_5_reg_3079 ^ 1'd1);

assign xor_ln785_5_fu_971_p2 = (deleted_zeros_2_fu_944_p3 ^ 1'd1);

assign xor_ln785_6_fu_1614_p2 = (deleted_zeros_3_fu_1574_p3 ^ 1'd1);

assign xor_ln785_7_fu_1626_p2 = (p_Result_13_reg_3126 ^ 1'd1);

assign xor_ln785_8_fu_1953_p2 = (p_Result_18_fu_1910_p3 ^ 1'd1);

assign xor_ln785_9_fu_2041_p2 = (p_Result_20_reg_3219 ^ 1'd1);

assign xor_ln785_fu_443_p2 = (p_Result_2_fu_403_p3 ^ 1'd1);

assign xor_ln786_1_fu_1450_p2 = (or_ln786_4_fu_1445_p2 ^ 1'd1);

assign xor_ln786_2_fu_1000_p2 = (or_ln786_6_fu_994_p2 ^ 1'd1);

assign xor_ln786_3_fu_1649_p2 = (or_ln786_7_fu_1643_p2 ^ 1'd1);

assign xor_ln786_4_fu_1725_p2 = (p_Result_17_fu_1717_p3 ^ 1'd1);

assign xor_ln786_5_fu_1965_p2 = (p_Result_19_fu_1923_p3 ^ 1'd1);

assign xor_ln786_6_fu_2052_p2 = (p_Result_21_reg_3231 ^ 1'd1);

assign xor_ln786_7_fu_2380_p2 = (or_ln786_8_fu_2374_p2 ^ 1'd1);

assign xor_ln786_8_fu_2546_p2 = (or_ln786_9_fu_2540_p2 ^ 1'd1);

assign xor_ln786_9_fu_2768_p2 = (or_ln786_10_fu_2763_p2 ^ 1'd1);

assign xor_ln786_fu_823_p2 = (or_ln786_fu_817_p2 ^ 1'd1);

assign y0_V_fu_1771_p3 = ((or_ln340_12_fu_1749_p2[0:0] === 1'b1) ? select_ln340_6_fu_1755_p3 : select_ln388_4_fu_1763_p3);

assign y_V_fu_2023_p3 = ((or_ln340_14_fu_2001_p2[0:0] === 1'b1) ? select_ln340_7_fu_2007_p3 : select_ln388_5_fu_2015_p3);

assign zext_ln1118_1_fu_635_p1 = shl_ln1118_4_fu_609_p3;

assign zext_ln1118_fu_605_p1 = shl_ln1118_3_fu_585_p3;

assign zext_ln415_1_fu_695_p1 = and_ln414_fu_690_p2;

assign zext_ln415_2_fu_1264_p1 = and_ln700_fu_1258_p2;

assign zext_ln415_3_fu_1177_p1 = icmp_ln414_8_fu_1172_p2;

assign zext_ln415_4_fu_1526_p1 = and_ln700_1_fu_1521_p2;

assign zext_ln415_5_fu_2257_p1 = and_ln700_2_fu_2252_p2;

assign zext_ln415_6_fu_2423_p1 = and_ln700_3_fu_2418_p2;

assign zext_ln415_7_fu_2589_p1 = and_ln700_4_fu_2584_p2;

assign zext_ln415_fu_1063_p1 = icmp_ln414_2_reg_3003;

assign zsquare_V_fu_2809_p3 = ((or_ln340_25_fu_2789_p2[0:0] === 1'b1) ? select_ln340_11_fu_2795_p3 : select_ln388_9_fu_2802_p3);

always @ (posedge ap_clk) begin
    trunc_ln_reg_2904[14:0] <= 15'b000000000000000;
    r_V_13_reg_2909[14:0] <= 15'b000000000000000;
    sext_ln728_reg_2943[14:0] <= 15'b000000000000000;
    r_V_16_reg_2948[15:0] <= 16'b0000000000000000;
end

endmodule //inner_proc
