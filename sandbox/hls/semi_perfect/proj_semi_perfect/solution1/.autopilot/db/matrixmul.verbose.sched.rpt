

================================================================
== Vivado HLS Report for 'matrixmul'
================================================================
* Date:           Sun Dec 29 14:51:38 2019

* Version:        2019.2 (Build 2704478 on Wed Nov 06 22:10:23 MST 2019)
* Project:        proj_semi_perfect
* Solution:       solution1
* Product family: kintex7
* Target device:  xc7k160t-fbg484-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  | 13.33 ns | 8.640 ns |   1.67 ns  |
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       29|       29| 0.387 us | 0.387 us |   29|   29|   none  |
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                        |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |        Loop Name       |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- I_LOOP_J_LOOP_K_LOOP  |       27|       27|         2|          1|          1|    27|    yes   |
        +------------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 2


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 4
* Pipeline : 1
  Pipeline-0 : II = 1, D = 2, States = { 2 3 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 4 3 
3 --> 2 
4 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.06>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([9 x i8]* %a) nounwind, !map !7"   --->   Operation 5 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([9 x i8]* %b) nounwind, !map !13"   --->   Operation 6 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([9 x i16]* %res) nounwind, !map !17"   --->   Operation 7 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([10 x i8]* @matrixmul_str) nounwind"   --->   Operation 8 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (1.06ns)   --->   "br label %1" [matrixmul.cpp:104]   --->   Operation 9 'br' <Predicate = true> <Delay = 1.06>

State 2 <SV = 1> <Delay = 6.95>
ST_2 : Operation 10 [1/1] (0.00ns)   --->   "%indvar_flatten14 = phi i5 [ 0, %0 ], [ %add_ln104, %ifFalse ]" [matrixmul.cpp:104]   --->   Operation 10 'phi' 'indvar_flatten14' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 11 [1/1] (0.00ns)   --->   "%i_0 = phi i2 [ 0, %0 ], [ %select_ln111_1, %ifFalse ]" [matrixmul.cpp:111]   --->   Operation 11 'phi' 'i_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 12 [1/1] (0.00ns)   --->   "%indvar_flatten = phi i4 [ 0, %0 ], [ %select_ln105, %ifFalse ]" [matrixmul.cpp:105]   --->   Operation 12 'phi' 'indvar_flatten' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 13 [1/1] (0.00ns)   --->   "%j_0 = phi i2 [ 0, %0 ], [ %select_ln111_4, %ifFalse ]" [matrixmul.cpp:111]   --->   Operation 13 'phi' 'j_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 14 [1/1] (0.00ns)   --->   "%temp_0 = phi i16 [ 0, %0 ], [ %temp, %ifFalse ]"   --->   Operation 14 'phi' 'temp_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 15 [1/1] (0.00ns)   --->   "%k_0 = phi i2 [ 0, %0 ], [ %k, %ifFalse ]"   --->   Operation 15 'phi' 'k_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 16 [1/1] (1.11ns)   --->   "%icmp_ln104 = icmp eq i5 %indvar_flatten14, -5" [matrixmul.cpp:104]   --->   Operation 16 'icmp' 'icmp_ln104' <Predicate = true> <Delay = 1.11> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.64> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 17 [1/1] (1.33ns)   --->   "%add_ln104 = add i5 %indvar_flatten14, 1" [matrixmul.cpp:104]   --->   Operation 17 'add' 'add_ln104' <Predicate = true> <Delay = 1.33> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 18 [1/1] (0.00ns)   --->   "br i1 %icmp_ln104, label %2, label %K_LOOP" [matrixmul.cpp:104]   --->   Operation 18 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 19 [1/1] (1.00ns)   --->   "%i = add i2 %i_0, 1" [matrixmul.cpp:104]   --->   Operation 19 'add' 'i' <Predicate = (!icmp_ln104)> <Delay = 1.00> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 20 [1/1] (1.08ns)   --->   "%icmp_ln105 = icmp eq i4 %indvar_flatten, -7" [matrixmul.cpp:105]   --->   Operation 20 'icmp' 'icmp_ln105' <Predicate = (!icmp_ln104)> <Delay = 1.08> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.64> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 21 [1/1] (0.62ns)   --->   "%select_ln111 = select i1 %icmp_ln105, i2 0, i2 %j_0" [matrixmul.cpp:111]   --->   Operation 21 'select' 'select_ln111' <Predicate = (!icmp_ln104)> <Delay = 0.62> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 22 [1/1] (0.62ns)   --->   "%select_ln111_1 = select i1 %icmp_ln105, i2 %i, i2 %i_0" [matrixmul.cpp:111]   --->   Operation 22 'select' 'select_ln111_1' <Predicate = (!icmp_ln104)> <Delay = 0.62> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "%zext_ln111 = zext i2 %select_ln111_1 to i5" [matrixmul.cpp:111]   --->   Operation 23 'zext' 'zext_ln111' <Predicate = (!icmp_ln104)> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%tmp = call i4 @_ssdm_op_BitConcatenate.i4.i2.i2(i2 %select_ln111_1, i2 0)" [matrixmul.cpp:111]   --->   Operation 24 'bitconcatenate' 'tmp' <Predicate = (!icmp_ln104)> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "%zext_ln111_1 = zext i4 %tmp to i5" [matrixmul.cpp:111]   --->   Operation 25 'zext' 'zext_ln111_1' <Predicate = (!icmp_ln104)> <Delay = 0.00>
ST_2 : Operation 26 [1/1] (1.32ns)   --->   "%sub_ln111 = sub i5 %zext_ln111_1, %zext_ln111" [matrixmul.cpp:111]   --->   Operation 26 'sub' 'sub_ln111' <Predicate = (!icmp_ln104)> <Delay = 1.32> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 27 [1/1] (0.00ns) (grouped into LUT with out node and_ln111)   --->   "%xor_ln111 = xor i1 %icmp_ln105, true" [matrixmul.cpp:111]   --->   Operation 27 'xor' 'xor_ln111' <Predicate = (!icmp_ln104)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 28 [1/1] (0.64ns)   --->   "%icmp_ln109 = icmp eq i2 %k_0, -1" [matrixmul.cpp:109]   --->   Operation 28 'icmp' 'icmp_ln109' <Predicate = (!icmp_ln104)> <Delay = 0.64> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.64> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 29 [1/1] (0.61ns) (out node of the LUT)   --->   "%and_ln111 = and i1 %icmp_ln109, %xor_ln111" [matrixmul.cpp:111]   --->   Operation 29 'and' 'and_ln111' <Predicate = (!icmp_ln104)> <Delay = 0.61> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 30 [1/1] (1.00ns)   --->   "%j = add i2 %select_ln111, 1" [matrixmul.cpp:105]   --->   Operation 30 'add' 'j' <Predicate = (!icmp_ln104)> <Delay = 1.00> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 31 [1/1] (0.61ns)   --->   "%or_ln111 = or i1 %and_ln111, %icmp_ln105" [matrixmul.cpp:111]   --->   Operation 31 'or' 'or_ln111' <Predicate = (!icmp_ln104)> <Delay = 0.61> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 32 [1/1] (0.62ns)   --->   "%select_ln111_3 = select i1 %or_ln111, i2 0, i2 %k_0" [matrixmul.cpp:111]   --->   Operation 32 'select' 'select_ln111_3' <Predicate = (!icmp_ln104)> <Delay = 0.62> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 33 [1/1] (0.62ns)   --->   "%select_ln111_4 = select i1 %and_ln111, i2 %j, i2 %select_ln111" [matrixmul.cpp:111]   --->   Operation 33 'select' 'select_ln111_4' <Predicate = (!icmp_ln104)> <Delay = 0.62> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "%zext_ln111_2 = zext i2 %select_ln111_4 to i5" [matrixmul.cpp:111]   --->   Operation 34 'zext' 'zext_ln111_2' <Predicate = (!icmp_ln104)> <Delay = 0.00>
ST_2 : Operation 35 [1/1] (1.33ns)   --->   "%add_ln113 = add i5 %sub_ln111, %zext_ln111_2" [matrixmul.cpp:113]   --->   Operation 35 'add' 'add_ln113' <Predicate = (!icmp_ln104)> <Delay = 1.33> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 36 [1/1] (0.00ns)   --->   "%sext_ln113 = sext i5 %add_ln113 to i64" [matrixmul.cpp:113]   --->   Operation 36 'sext' 'sext_ln113' <Predicate = (!icmp_ln104)> <Delay = 0.00>
ST_2 : Operation 37 [1/1] (0.00ns)   --->   "%res_addr = getelementptr [9 x i16]* %res, i64 0, i64 %sext_ln113" [matrixmul.cpp:113]   --->   Operation 37 'getelementptr' 'res_addr' <Predicate = (!icmp_ln104)> <Delay = 0.00>
ST_2 : Operation 38 [1/1] (0.00ns)   --->   "%zext_ln111_3 = zext i2 %select_ln111_3 to i5" [matrixmul.cpp:111]   --->   Operation 38 'zext' 'zext_ln111_3' <Predicate = (!icmp_ln104)> <Delay = 0.00>
ST_2 : Operation 39 [1/1] (1.33ns)   --->   "%add_ln111 = add i5 %sub_ln111, %zext_ln111_3" [matrixmul.cpp:111]   --->   Operation 39 'add' 'add_ln111' <Predicate = (!icmp_ln104)> <Delay = 1.33> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 40 [1/1] (0.00ns)   --->   "%sext_ln111_2 = sext i5 %add_ln111 to i64" [matrixmul.cpp:111]   --->   Operation 40 'sext' 'sext_ln111_2' <Predicate = (!icmp_ln104)> <Delay = 0.00>
ST_2 : Operation 41 [1/1] (0.00ns)   --->   "%a_addr = getelementptr [9 x i8]* %a, i64 0, i64 %sext_ln111_2" [matrixmul.cpp:111]   --->   Operation 41 'getelementptr' 'a_addr' <Predicate = (!icmp_ln104)> <Delay = 0.00>
ST_2 : Operation 42 [1/1] (0.00ns)   --->   "%tmp_1 = call i4 @_ssdm_op_BitConcatenate.i4.i2.i2(i2 %select_ln111_3, i2 0)" [matrixmul.cpp:111]   --->   Operation 42 'bitconcatenate' 'tmp_1' <Predicate = (!icmp_ln104)> <Delay = 0.00>
ST_2 : Operation 43 [1/1] (0.00ns)   --->   "%zext_ln111_4 = zext i4 %tmp_1 to i5" [matrixmul.cpp:111]   --->   Operation 43 'zext' 'zext_ln111_4' <Predicate = (!icmp_ln104)> <Delay = 0.00>
ST_2 : Operation 44 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%sub_ln111_1 = sub i5 %zext_ln111_4, %zext_ln111_3" [matrixmul.cpp:111]   --->   Operation 44 'sub' 'sub_ln111_1' <Predicate = (!icmp_ln104)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.10> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 45 [1/1] (2.20ns) (root node of TernaryAdder)   --->   "%add_ln111_1 = add i5 %sub_ln111_1, %zext_ln111_2" [matrixmul.cpp:111]   --->   Operation 45 'add' 'add_ln111_1' <Predicate = (!icmp_ln104)> <Delay = 2.20> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.10> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 46 [1/1] (0.00ns)   --->   "%sext_ln111_3 = sext i5 %add_ln111_1 to i64" [matrixmul.cpp:111]   --->   Operation 46 'sext' 'sext_ln111_3' <Predicate = (!icmp_ln104)> <Delay = 0.00>
ST_2 : Operation 47 [1/1] (0.00ns)   --->   "%b_addr = getelementptr [9 x i8]* %b, i64 0, i64 %sext_ln111_3" [matrixmul.cpp:111]   --->   Operation 47 'getelementptr' 'b_addr' <Predicate = (!icmp_ln104)> <Delay = 0.00>
ST_2 : Operation 48 [2/2] (1.42ns)   --->   "%a_load = load i8* %a_addr, align 1" [matrixmul.cpp:111]   --->   Operation 48 'load' 'a_load' <Predicate = (!icmp_ln104)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 9> <RAM>
ST_2 : Operation 49 [2/2] (1.42ns)   --->   "%b_load = load i8* %b_addr, align 1" [matrixmul.cpp:111]   --->   Operation 49 'load' 'b_load' <Predicate = (!icmp_ln104)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 9> <RAM>
ST_2 : Operation 50 [1/1] (1.00ns)   --->   "%k = add i2 %select_ln111_3, 1" [matrixmul.cpp:109]   --->   Operation 50 'add' 'k' <Predicate = (!icmp_ln104)> <Delay = 1.00> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 51 [1/1] (1.32ns)   --->   "%add_ln105 = add i4 %indvar_flatten, 1" [matrixmul.cpp:105]   --->   Operation 51 'add' 'add_ln105' <Predicate = (!icmp_ln104)> <Delay = 1.32> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 52 [1/1] (0.66ns)   --->   "%select_ln105 = select i1 %icmp_ln105, i4 1, i4 %add_ln105" [matrixmul.cpp:105]   --->   Operation 52 'select' 'select_ln105' <Predicate = (!icmp_ln104)> <Delay = 0.66> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 3 <SV = 2> <Delay = 8.64>
ST_3 : Operation 53 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([21 x i8]* @I_LOOP_J_LOOP_K_LOOP)"   --->   Operation 53 'specloopname' <Predicate = (!icmp_ln104)> <Delay = 0.00>
ST_3 : Operation 54 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 27, i64 27, i64 27) nounwind"   --->   Operation 54 'speclooptripcount' 'empty' <Predicate = (!icmp_ln104)> <Delay = 0.00>
ST_3 : Operation 55 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([14 x i8]* @J_LOOP_K_LOOP_str)"   --->   Operation 55 'specloopname' <Predicate = (!icmp_ln104)> <Delay = 0.00>
ST_3 : Operation 56 [1/1] (0.54ns)   --->   "%select_ln111_2 = select i1 %or_ln111, i16 0, i16 %temp_0" [matrixmul.cpp:111]   --->   Operation 56 'select' 'select_ln111_2' <Predicate = (!icmp_ln104)> <Delay = 0.54> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 57 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([7 x i8]* @p_str2) nounwind" [matrixmul.cpp:109]   --->   Operation 57 'specloopname' <Predicate = (!icmp_ln104)> <Delay = 0.00>
ST_3 : Operation 58 [1/1] (0.00ns)   --->   "%tmp_2 = call i32 (...)* @_ssdm_op_SpecRegionBegin([7 x i8]* @p_str2) nounwind" [matrixmul.cpp:109]   --->   Operation 58 'specregionbegin' 'tmp_2' <Predicate = (!icmp_ln104)> <Delay = 0.00>
ST_3 : Operation 59 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str3) nounwind" [matrixmul.cpp:110]   --->   Operation 59 'specpipeline' <Predicate = (!icmp_ln104)> <Delay = 0.00>
ST_3 : Operation 60 [1/2] (1.42ns)   --->   "%a_load = load i8* %a_addr, align 1" [matrixmul.cpp:111]   --->   Operation 60 'load' 'a_load' <Predicate = (!icmp_ln104)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 9> <RAM>
ST_3 : Operation 61 [1/1] (0.00ns)   --->   "%sext_ln111 = sext i8 %a_load to i16" [matrixmul.cpp:111]   --->   Operation 61 'sext' 'sext_ln111' <Predicate = (!icmp_ln104)> <Delay = 0.00>
ST_3 : Operation 62 [1/2] (1.42ns)   --->   "%b_load = load i8* %b_addr, align 1" [matrixmul.cpp:111]   --->   Operation 62 'load' 'b_load' <Predicate = (!icmp_ln104)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 9> <RAM>
ST_3 : Operation 63 [1/1] (0.00ns)   --->   "%sext_ln111_1 = sext i8 %b_load to i16" [matrixmul.cpp:111]   --->   Operation 63 'sext' 'sext_ln111_1' <Predicate = (!icmp_ln104)> <Delay = 0.00>
ST_3 : Operation 64 [1/1] (2.84ns) (grouped into DSP with root node temp)   --->   "%mul_ln111 = mul i16 %sext_ln111_1, %sext_ln111" [matrixmul.cpp:111]   --->   Operation 64 'mul' 'mul_ln111' <Predicate = (!icmp_ln104)> <Delay = 2.84> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 5.79> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 65 [1/1] (2.95ns) (root node of the DSP)   --->   "%temp = add i16 %select_ln111_2, %mul_ln111" [matrixmul.cpp:111]   --->   Operation 65 'add' 'temp' <Predicate = (!icmp_ln104)> <Delay = 2.95> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 5.79> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 66 [1/1] (0.00ns)   --->   "%empty_2 = call i32 (...)* @_ssdm_op_SpecRegionEnd([7 x i8]* @p_str2, i32 %tmp_2) nounwind" [matrixmul.cpp:112]   --->   Operation 66 'specregionend' 'empty_2' <Predicate = (!icmp_ln104)> <Delay = 0.00>
ST_3 : Operation 67 [1/1] (0.64ns)   --->   "%icmp_ln109_1 = icmp eq i2 %k, -1" [matrixmul.cpp:109]   --->   Operation 67 'icmp' 'icmp_ln109_1' <Predicate = (!icmp_ln104)> <Delay = 0.64> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.64> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 68 [1/1] (0.00ns)   --->   "br i1 %icmp_ln109_1, label %ifTrue, label %ifFalse" [matrixmul.cpp:109]   --->   Operation 68 'br' <Predicate = (!icmp_ln104)> <Delay = 0.00>
ST_3 : Operation 69 [1/1] (1.42ns)   --->   "store i16 %temp, i16* %res_addr, align 2" [matrixmul.cpp:113]   --->   Operation 69 'store' <Predicate = (icmp_ln109_1)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 9> <RAM>
ST_3 : Operation 70 [1/1] (0.00ns)   --->   "br label %ifFalse"   --->   Operation 70 'br' <Predicate = (icmp_ln109_1)> <Delay = 0.00>
ST_3 : Operation 71 [1/1] (0.00ns)   --->   "br label %1"   --->   Operation 71 'br' <Predicate = (!icmp_ln104)> <Delay = 0.00>

State 4 <SV = 2> <Delay = 0.00>
ST_4 : Operation 72 [1/1] (0.00ns)   --->   "ret void" [matrixmul.cpp:116]   --->   Operation 72 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 13.3ns, clock uncertainty: 1.67ns.

 <State 1>: 1.06ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('indvar_flatten14', matrixmul.cpp:104) with incoming values : ('add_ln104', matrixmul.cpp:104) [10]  (1.06 ns)

 <State 2>: 6.95ns
The critical path consists of the following:
	'phi' operation ('indvar_flatten', matrixmul.cpp:105) with incoming values : ('select_ln105', matrixmul.cpp:105) [12]  (0 ns)
	'icmp' operation ('icmp_ln105', matrixmul.cpp:105) [23]  (1.08 ns)
	'select' operation ('select_ln111', matrixmul.cpp:111) [24]  (0.62 ns)
	'add' operation ('j', matrixmul.cpp:105) [33]  (1 ns)
	'select' operation ('select_ln111_4', matrixmul.cpp:111) [38]  (0.62 ns)
	'add' operation ('add_ln111_1', matrixmul.cpp:111) [53]  (2.2 ns)
	'getelementptr' operation ('b_addr', matrixmul.cpp:111) [55]  (0 ns)
	'load' operation ('b_load', matrixmul.cpp:111) on array 'b' [58]  (1.43 ns)

 <State 3>: 8.64ns
The critical path consists of the following:
	'load' operation ('a_load', matrixmul.cpp:111) on array 'a' [56]  (1.43 ns)
	'mul' operation of DSP[61] ('mul_ln111', matrixmul.cpp:111) [60]  (2.84 ns)
	'add' operation of DSP[61] ('temp', matrixmul.cpp:111) [61]  (2.95 ns)
	'store' operation ('store_ln113', matrixmul.cpp:113) of variable 'temp', matrixmul.cpp:111 on array 'res' [67]  (1.43 ns)

 <State 4>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
